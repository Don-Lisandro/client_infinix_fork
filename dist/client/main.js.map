{"version":3,"sources":["./src/app/reset-password-mail/reset-password-mail.component.ts","./src/app/reset-password-mail/reset-password-mail.component.html","./src/app/vehicles-list/vehicles-list.module.ts","./src/app/users-list/usersList.service.ts","./src/app/sidebar/sidebar.component.html","./src/app/sidebar/sidebar.component.ts","./src/app/confirm/confirm.module.ts","./src/app/loan/loan.service.ts","./src/app/alert/alert.component.ts","./src/app/alert/alert.component.html","./src/app/vehicles-list/historical-vehicle-modal/historical-vehicle-modal.module.ts","./src/app/common/models/StatusModel.ts","./src/app/sites-list/site.model.ts","./src/app/authentication/authentication.service.ts","./src/app/vehicles-list/vehicle.model.ts","./src/app/vehicles-list/vehicle-list.service.ts","./src/environments/environment.ts","./src/app/admin-panel/adminPanel.component.ts","./src/app/admin-panel/adminPanel.component.html","./src/app/reset-password-form/reset-password-form.module.ts","./src/app/vehicles-list/vehicle-modal/vehicle-modal.module.ts","./src/app/common/common.ts","./src/app/sites-list/site-modal/site-modal.module.ts","./src/app/vehicles-list/vehicles-list.component.ts","./src/app/vehicles-list/vehicles-list.component.html","./src/app/header/header.module.ts","./src/app/vehicles-list/vehicle-modal/vehicle-modal.component.ts","./src/app/vehicles-list/vehicle-modal/vehicle-modal.html","./src/app/users-list/usersList.component.ts","./src/app/users-list/usersList.component.html","./src/app/users-list/userModal.html","./src/app/snackbar/snackbar.module.ts","./src/app/admin-panel/application-settings.service.ts","./src/app/reset-password-mail/reset-password-mail.module.ts","./src/app/admin-panel/setting.model.ts","./src/app/authentication/authentication.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/loan/loan-modal/loan-modal.component.ts","./src/app/loan/loan-modal/loan-modal.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/dashboard/dashboard.module.ts","./src/app/authentication/auth.interceptor.ts","./src/app/layout/layout.module.ts","./src/app/users-list/user.model.ts","./src/app/sinister/sinister.service.ts","./src/app/app.module.ts","./src/app/users-list/usersList.module.ts","./src/app/header/loan-user/loan-user.module.ts","./src/app/loan/loan-modal/loan-modal.module.ts","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/app/admin-panel/adminPanel.module.ts","./src/app/loan/loan.data.model.ts","./src/app/reset-password-form/reset-password-form.component.ts","./src/app/reset-password-form/reset-password-form.component.html","./src/app/sites-list/sitesList.module.ts","./src/app/loan/close-loan-modal/close-loan-modal.module.ts","./src/app/common/services/status.service.ts","./src/app/authentication/authentication.data.model.ts","./src/app/sites-list/site-modal/site-modal.component.ts","./src/app/sites-list/site-modal/site-modal.component.html","./src/app/loan/loan.module.ts","./src/app/header/loan-user/loan-user.component.ts","./src/app/header/loan-user/loan-user.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/common/models/status.enum.ts","./src/app/common/device.ts","./src/app/mailing-panel/mailingPanel.html","./src/app/mailing-panel/mailingPanel.component.ts","./src/app/confirm/confirm.component.ts","./src/app/confirm/confirm.component.html","./src/app/alert/alert.module.ts","./src/app/authentication/authentication.component.ts","./src/app/authentication/authentication.component.html","./src/app/loan/loan.component.ts","./src/app/loan/loan.component.html","./src/app/common/services/message.service.ts","./src/app/sinister/sinister-modal.component.ts","./src/app/sinister/sinister-modal.html","./src/app/vehicles-list/historical-vehicle-modal/historical-vehicule-modal.component.ts","./src/app/vehicles-list/historical-vehicle-modal/historicalVehicleModal.html","./src/app/sinister/sinister.model.ts","./src/app/vehicles-list/archived-sinisters/archived-sinisters.module.ts","./src/app/sites-list/sitesList.component.ts","./src/app/sites-list/sitesList.component.html","./src/app/loan/close-loan-modal/close-loan-modal.component.ts","./src/app/loan/close-loan-modal/close-loan-modal.component.html","./src/app/sinister/sinister-modal.module.ts","./src/app/authentication/auth.guard.ts","./src/app/snackbar/snackbar.component.ts","./src/app/snackbar/snackbar.component.html","./src/app/mailing-panel/mailingPanel.module.ts","./src/app/layout/layout.component.ts","./src/app/layout/layout.component.html","./src/app/common/models/familyStatus.enum.ts","./src/app/app-routing.module.ts","./src/app/header/loan-in-progress/loan-in-progress.component.ts","./src/app/header/loan-in-progress/loan-in-progress.component.html","./src/app/sidebar/sidebar.module.ts","./src/app/vehicles-list/archived-sinisters/archived-sinisters.component.ts","./src/app/vehicles-list/archived-sinisters/archived-sinisters.component.html","./src/app/sites-list/sitesList.service.ts","./src/app/header/loan-in-progress/loan-in-progress.module.ts","./src/app/map/map.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { Common } from '../common/common';\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MessageService } from '../common/services/message.service';\nimport { Device } from '../common/device';\n\n@Component({\n  selector: 'reset-password-mail',\n  templateUrl: './reset-password-mail.component.html',\n  styleUrls: ['./reset-password-mail.component.less'],\n})\nexport class ResetPasswordMailComponent implements OnInit, AfterViewInit {\n  /**\n   * formGroup de l'inscription\n   */\n  public resetPasswordMailForm: FormGroup;\n\n  get registerFormControls(): { [p: string]: AbstractControl } {\n    return this.resetPasswordMailForm.controls;\n  }\n\n  static confirmed = (controlName: string, matchingControlName: string) => {\n    return (control: AbstractControl) => {\n      if (control && control.parent) {\n        const input = control.parent.get(controlName);\n        const matchingInput = control.parent.get(matchingControlName);\n\n        if (input === null || matchingInput === null) {\n          return null;\n        }\n\n        if (matchingInput?.errors && !matchingInput.errors.confirmedValidator) {\n          return null;\n        }\n\n        if (input.value !== matchingInput.value) {\n          matchingInput.setErrors({ confirmedValidator: true });\n          return { confirmedValidator: true };\n        } else {\n          matchingInput.setErrors(null);\n          return null;\n        }\n      } else {\n        return null;\n      }\n    };\n  };\n\n  public constructor(\n    private fb: FormBuilder,\n    private authenticationService: AuthenticationService,\n    private _snackBar: MatSnackBar,\n    private msgService: MessageService,\n  ) {\n    this.resetPasswordMailForm = this.fb.group({\n      email: new FormControl('', [Validators.email, Validators.required]),\n    });\n  }\n\n  public ngOnInit(): void {}\n\n  public ngAfterViewInit(): void {\n    Common.loadScript('../assets/js/login-background.js');\n  }\n\n  /**\n   * Inverse la valeur pour passer du formulaire d'inscription à celui de connexion\n   * Et réinitialisation des formulaires\n   */\n\n  public openSnackBar(type: string, message: string): void {\n    this.msgService.snackbar(message, type);\n  }\n\n  public sendForm(event: KeyboardEvent): void {\n    if (\n      event.code &&\n      (event.code.toLowerCase() === 'enter' ||\n        event.code.toLowerCase() === 'numpadenter') &&\n      this.resetPasswordMailForm\n    ) {\n      this.sendResetMail();\n    }\n  }\n  sendResetMail() {\n    if (this.resetPasswordMailForm.valid) {\n      const email = this.resetPasswordMailForm.value.email;\n      this.authenticationService.sendPasswordResetMail(email);\n    }\n  }\n\n  IsMobile() {\n    Device.definedUseDevice('auth-container');\n    return Device.isMobileDevice();\n  }\n}\n","<div *ngIf=\"IsMobile()\"></div>\n<div id=\"auth-container\">\n  <div id=\"wrapper\" class=\"wrapper\">\n    <canvas #canvas></canvas>\n    <div id=\"container\" class=\"container\">\n      <mat-card id=\"send-mail-form\" class=\"send-mail-form\">\n        <mat-card-header>\n          <mat-card-title>Réinitialisation Mot de Passe</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <form\n            class=\"send-mail-form-group\"\n            [formGroup]=\"resetPasswordMailForm\"\n            (keydown)=\"sendForm($event)\"\n          >\n            <mat-form-field>\n              <mat-label>Adresse mail</mat-label>\n              <input matInput id=\"email\" formControlName=\"email\" />\n              <mat-error\n                *ngIf=\"\n                  registerFormControls.email.touched &&\n                  registerFormControls.email.invalid &&\n                  registerFormControls.email.errors?.required\n                \"\n                class=\"alert alert-danger\"\n              >\n                Adresse mail requise.\n              </mat-error>\n              <mat-error\n                *ngIf=\"\n                  registerFormControls.email.touched &&\n                  registerFormControls.email.invalid &&\n                  registerFormControls.email.errors?.email\n                \"\n                class=\"alert alert-danger\"\n              >\n                Le format de l'adresse mail n'est pas correct.\n              </mat-error>\n            </mat-form-field>\n            <div\n              style=\"\n                width: 100%;\n                height: auto;\n                display: flex;\n                justify-content: flex-end;\n              \"\n            >\n              <button mat-button (click)=\"sendResetMail()\">Envoyer</button>\n            </div>\n          </form>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { VehiclesListComponent } from './vehicles-list.component';\nimport { HeaderModule } from '../header/header.module';\nimport { SidebarModule } from '../sidebar/sidebar.module';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatDividerModule } from '@angular/material/divider';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { ArchivedSinistersModule } from './archived-sinisters/archived-sinisters.module';\n@NgModule({\n  declarations: [\n    VehiclesListComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HeaderModule,\n    SidebarModule,\n    MatSidenavModule,\n    MatChipsModule,\n    MatIconModule,\n    MatSlideToggleModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatTableModule,\n    MatDividerModule,\n    MatTooltipModule,\n    ArchivedSinistersModule\n  ],\n  exports: [VehiclesListComponent],\n  providers: [],\n  bootstrap: [VehiclesListComponent]\n})\nexport class VehiclesListModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nimport { Router } from '@angular/router';\nimport { User } from './user.model';\nimport {Observable, Subject} from 'rxjs';\nimport { Deserialize } from 'cerialize';\nimport { LoanDataModel } from '../loan/loan.data.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private users: User[] = [];\n  private usersUpdated = new Subject<{users: User[]}>();\n\n  constructor(private http: HttpClient, private router: Router ) {}\n\n  public getUsers(): Observable<any> {\n    return this.http.get('http://localhost:3000/api/v1/users').pipe(\n      map((response: any) => Deserialize(response.users, User))\n    );\n  }\n\n  getUserUpdateListener(): Observable<any> {\n    return this.usersUpdated.asObservable();\n  }\n\n  enableOrDisableUser(user: User) {\n    return this.http.put<any>('http://localhost:3000/api/v1/users/toggleUser/' + user.email, user).subscribe();\n  }\n\n  updateUser(user: User): Observable<any> {\n    return this.http.put<any>('http://localhost:3000/api/v1/users/update/' + user.email, user);\n  }\n\n  deleteUser(user: User) {\n    return this.http.post<any>('http://localhost:3000/api/v1/users/delete/' + user.email, user).subscribe();\n  }\n}\n","<div id=\"sidebar\" class=\"sidebar\">\n  <ng-template [ngIf]=\"adminMenu\">\n    <button mat-button (click)=\"redirectTo('users')\">\n      <div>\n        <mat-icon aria-hidden=\"false\" color=\"primary\">groups</mat-icon>\n        <div>Utilisateurs</div>\n      </div>\n      <mat-icon color=\"primary\">chevron_right</mat-icon>\n    </button>\n    <mat-divider></mat-divider>\n    <button mat-button (click)=\"redirectTo('site')\">\n      <div>\n        <mat-icon aria-hidden=\"false\" color=\"primary\">home_work</mat-icon>\n        <div>Sites</div>\n      </div>\n      <mat-icon color=\"primary\">chevron_right</mat-icon>\n    </button>\n    <mat-divider></mat-divider>\n    <button mat-button (click)=\"redirectTo('parc')\">\n      <div>\n        <mat-icon aria-hidden=\"false\" color=\"primary\">directions_car</mat-icon>\n        <div>Parc</div>\n      </div>\n      <mat-icon color=\"primary\">chevron_right</mat-icon>\n    </button>\n    <mat-divider></mat-divider>\n  </ng-template>\n\n  <!--    <button mat-button (click)=\"redirectTo('planning')\">-->\n  <!-- <button mat-button (click)=\"workInProgress('Planning')\">\n    <div>\n      <mat-icon aria-hidden=\"false\" color=\"primary\">date_range</mat-icon>\n      <div>Planning</div>\n    </div>\n    <mat-icon color=\"primary\">chevron_right</mat-icon>\n  </button> \n  <mat-divider></mat-divider> -->\n  <button mat-button (click)=\"redirectTo('loan')\">\n    <div>\n      <mat-icon aria-hidden=\"false\" color=\"primary\">car_rental</mat-icon>\n      <div>Prêt</div>\n    </div>\n    <mat-icon color=\"primary\">chevron_right</mat-icon>\n  </button>\n  <mat-divider></mat-divider>\n  <!--    <button mat-button (click)=\"redirectTo('settings')\">-->\n  <ng-template [ngIf]=\"adminMenu\">\n    <button mat-button (click)=\"redirectTo('admin')\">\n      <div>\n        <mat-icon aria-hidden=\"false\" color=\"primary\">settings</mat-icon>\n        <div>Paramètres</div>\n      </div>\n      <mat-icon color=\"primary\">chevron_right</mat-icon>\n    </button>\n    <mat-divider></mat-divider>\n  </ng-template>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { MessageService } from '../common/services/message.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.less'],\n})\nexport class SidebarComponent implements OnInit {\n  public adminMenu = false;\n\n  constructor(\n    private router: Router,\n    private msgService: MessageService,\n    private authService: AuthenticationService,\n  ) {}\n\n  ngOnInit(): void {\n    this.adminMenu = this.authService.getIsAdmin();\n  }\n\n  /**\n   * Redirige vers la route passée en paramètre\n   * @param target Nom de la route\n   */\n  public redirectTo(target: string) {\n    this.router.navigate(['/' + target]);\n  }\n\n  public workInProgress(page: string) {\n    this.msgService.snackbar(\n      'La page ' + page + \" n'est pas encore disponible\",\n      'warning',\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ConfirmComponent } from '../confirm/confirm.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [\n    ConfirmComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatIconModule,\n    MatButtonModule\n  ],\n  exports: [ConfirmComponent],\n  providers: [],\n  bootstrap: [ConfirmComponent]\n})\nexport class ConfirmModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LoanDataModel } from './loan.data.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Deserialize } from 'cerialize';\nimport { Vehicle } from '../vehicles-list/vehicle.model';\nimport { User } from '../users-list/user.model';\n\n@Injectable()\nexport class LoanService {\n\n  constructor(private httpClient: HttpClient) {}\n\n  public createLoan(loanData: LoanDataModel): Observable<any> {\n    return this.httpClient.post('http://localhost:3000/api/v1/booking/create', loanData);\n  }\n\n  public getAllLoans(connectedUser: User): Observable<any> {\n    return this.httpClient.get('http://localhost:3000/api/v1/booking/' + connectedUser.id + '&' + connectedUser.authorizationAccess).pipe(\n      map((response: any) => Deserialize(response.booking, LoanDataModel))\n    );\n  }\n\n  public getAllLoansForVehicle(id: number): Observable<any> {\n    return this.httpClient.get('http://localhost:3000/api/v1/booking/for-vehicle/' + id).pipe(\n      map((response: any) => Deserialize(response.booking, LoanDataModel))\n    );\n  }\n\n  public updateLoan(loanData: LoanDataModel): Observable<any> {\n    return this.httpClient.post('http://localhost:3000/api/v1/booking/update', loanData);\n  }\n\n  public getLoansByStatus(status: any): Observable<any> {\n    return this.httpClient.get('http://localhost:3000/api/v1/booking/status/' + status );\n  }\n\n  public getLoansByBooking(status: any, email:any): Observable<any> {\n    return this.httpClient.get('http://localhost:3000/api/v1/booking/status/' + status + '&'+email);\n  }\n\n  public getBookingsForUtilisateurStatusValide(id: any, status:any) : Observable<any> {\n    return this.httpClient.get('http://localhost:3000/api/v1/booking/for-utilisateur-status-valide/' + id + '&'+status);\n  }\n\n  public updateLoanForClose(loanData: LoanDataModel): Observable<any>{\n    return this.httpClient.post('http://localhost:3000/api/v1/booking/updateForClose', loanData)\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.less']\n})\nexport class AlertComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<AlertComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: {\n                message: string\n              }) { }\n\n  ngOnInit(): void {\n  }\n\n  public close(): any {\n    this.dialogRef.close();\n  }\n\n}\n","<div class='header'>\n  <mat-icon class=\"icon-error\">error_outline</mat-icon>\n  <h1>Alerte</h1>\n</div>\n<div class='message-container'>\n  {{ data.message }}\n</div>\n<div class='button-container'>\n  <button mat-raised-button color='primary' (click)='close()'>J'ai compris</button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HeaderModule } from '../../header/header.module';\nimport { SidebarModule } from '../../sidebar/sidebar.module';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { HistoricalVehicleModal } from './historical-vehicule-modal.component';\n\n\n@NgModule({\n  declarations: [\n    HistoricalVehicleModal\n  ],\n  imports: [\n    BrowserModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HeaderModule,\n    SidebarModule,\n    MatSidenavModule,\n    MatChipsModule,\n    MatIconModule,\n    MatSlideToggleModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatTableModule,\n    MatDividerModule\n  ],\n  exports: [HistoricalVehicleModal],\n  providers: [],\n  bootstrap: [HistoricalVehicleModal]\n})\nexport class HistoricalVehicleModule { }","import { autoserializeAs } from 'cerialize';\n\nexport class StatusModel {\n  @autoserializeAs('id')\n  id: number;\n  @autoserializeAs('label')\n  label: string;\n  @autoserializeAs('familyStatus')\n  familyStatus: any;\n}\n","import { autoserializeAs } from 'cerialize';\nimport { StatusModel } from '../common/models/StatusModel';\n\nexport class SiteDataModel {\n  @autoserializeAs('id')\n  id: number;\n  @autoserializeAs('label')\n  label: string;\n  @autoserializeAs('adress')\n  adress: string;\n  @autoserializeAs('postalCode')\n  postalCode: string;\n  @autoserializeAs('city')\n  city: string;\n  @autoserializeAs('phone')\n  phone: string;\n  @autoserializeAs('mail')\n  mail: string;\n  @autoserializeAs('pays')\n  pays: string;\n  @autoserializeAs('status')\n  status: StatusModel;\n  @autoserializeAs('latitude')\n  latitude: number;\n  @autoserializeAs('longitude')\n  longitude: number;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { AuthenticationDataModel } from './authentication.data.model';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n  private isAuthenticated = false;\n  private token: string | null;\n  private tokenTimer: any;\n  private authStatusListener = new Subject<boolean>();\n  private isAdmin: boolean = false;\n  private isActivated = new Subject<boolean>();\n\n  getToken(): string | null {\n    return this.token;\n  }\n\n  getIsAdmin(): boolean {\n    return this.isAdmin;\n  }\n\n  // tslint:disable-next-line:typedef\n  getAuthStatusListener(): Observable<boolean> {\n    return this.authStatusListener.asObservable();\n  }\n\n  // tslint:disable-next-line:typedef\n  getIsActivated(): Observable<boolean> {\n    return this.isActivated.asObservable();\n  }\n\n  getIsAuth(): boolean {\n    return this.isAuthenticated;\n  }\n\n  constructor(private httpClient: HttpClient, private router: Router) {}\n\n  public createUser(authenticationData: AuthenticationDataModel): Observable<any> {\n    return this.httpClient.post('http://localhost:3000/api/v1/users/signup', authenticationData);\n  }\n\n  public login(authenticationData: AuthenticationDataModel): void {\n    this.httpClient\n      .post('http://localhost:3000/api/v1/users/login', authenticationData)\n      .subscribe(\n        (response: any) => {\n          const user = response.user;\n\n          if(user && Boolean(user.enabled)) {\n          const token = response.token;\n          this.token = token;\n\n          if (token) {\n            const expiresInDuration = response.expiresIn;\n\n            this.setAuthTimer(expiresInDuration);\n            this.isAuthenticated = true;\n            if (user.authorizationAccess == 1) {\n              // Is Admin\n              this.isAdmin = true;\n            }\n            this.authStatusListener.next(true);\n            this.isActivated.next(true);\n            const now: Date = new Date();\n            const expirationDate: Date = new Date(\n              now.getTime() + expiresInDuration * 1000,\n            );\n            this.saveAuthData(token, expirationDate, user);\n            this.router.navigate(['/loan']);\n          }\n        }\n        else{\n            this.isActivated.next(false);\n          }\n        },\n        (error) => {\n          this.authStatusListener.next(false);\n        },\n      );\n  }\n\n  logout(): void {\n    this.token = null;\n    this.isAuthenticated = false;\n    this.isAdmin = false;\n    this.authStatusListener.next(false);\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.router.navigate(['/']);\n  }\n\n  autoAuthUser(): void {\n    const authInformation = this.getAuthData();\n    if (!authInformation) {\n      return;\n    }\n\n    const now = new Date();\n    // In Ms\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n    if (expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuthenticated = true;\n      // Works with seconds so we have to divide by 1000\n      this.setAuthTimer(expiresIn / 1000);\n      this.authStatusListener.next(true);\n    }\n  }\n\n  private saveAuthData(\n    token: string,\n    expirationDate: Date,\n    user: AuthenticationDataModel,\n  ): void {\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationDate', expirationDate.toISOString());\n    localStorage.setItem('connectedUser', JSON.stringify(user));\n  }\n\n  private setAuthTimer(duration: number): void {\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  getAuthData() {\n    const token = localStorage.getItem('token');\n    const expirationDate = localStorage.getItem('expirationDate');\n    const connectedUser = localStorage.getItem('connectedUser');\n    if (!token || !expirationDate || !connectedUser) {\n      return;\n    }\n    return { token, expirationDate: new Date(expirationDate), connectedUser };\n  }\n\n  private clearAuthData(): void {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('connectedUser');\n  }\n\n  sendPasswordResetMail(email: string) {\n    this.httpClient\n      .post('http://localhost:3000/api/v1/users/resetPassword/' + email, {\n        email: email,\n      })\n      .subscribe((response) => {\n        // TODO: redirect to confirmation page\n        this.router.navigate(['/login']);\n      });\n  }\n\n  changeUserPassword(data: {\n    token: string;\n    userId: number;\n    clearPassword: any;\n  }) {\n    this.httpClient\n      .post('http://localhost:3000/api/v1/users/resetPassword', data)\n      .subscribe((response) => {\n\n        this.router.navigate(['/login']);\n      });\n  }\n}\n","import { autoserializeAs } from 'cerialize';\nimport { SiteDataModel } from '../sites-list/site.model';\nimport { StatusModel } from '../common/models/StatusModel';\n\nexport class Vehicle {\n  @autoserializeAs('id')\n  id: number;\n  @autoserializeAs('type')\n  type: number;\n  @autoserializeAs('libelle')\n  libelle: string;\n  @autoserializeAs('model')\n  model: string;\n  @autoserializeAs('flagService')\n  flagService: boolean;\n  @autoserializeAs('immatriculation')\n  immatriculation: string;\n  @autoserializeAs('state')\n  state: string;\n  @autoserializeAs('Site')\n  site: SiteDataModel;\n  @autoserializeAs('status')\n  status: StatusModel;\n  @autoserializeAs('essenceVehicule')\n  essenceVehicule: number;\n  @autoserializeAs('killometrageVehicle')\n  killometrageVehicle: number;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { Vehicle } from './vehicle.model';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Deserialize } from 'cerialize';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VehicleService {\n\n  private vehicles: Vehicle[] = [];\n  private vehiclesUpdated = new Subject<{ vehicles: Vehicle[] }>();\n\n  constructor(private http: HttpClient, private router: Router) {\n  }\n\n  getVehicles(): Observable<any> {\n    return this.http.get('http://localhost:3000/api/v1/vehicules/').pipe(\n      map((response: any) => Deserialize(response.vehicules, Vehicle)),\n    );\n  }\n\n  getAvailableVehicles(startDate: Date, endDate: Date | null): Observable<any> {\n    return this.http.get(`http://localhost:3000/api/v1/vehicules/available/${startDate}&${endDate}`).pipe(\n      map((response: any) => Deserialize(response.vehicules, Vehicle)),\n    );\n  }\n\n  getVehicleUpdateListener() {\n    return this.vehiclesUpdated.asObservable();\n  }\n\n  updateVehicle(vehicle: Vehicle, lastImmatriculation: any) {\n    return this.http.put<any>('http://localhost:3000/api/v1/vehicules/update/' + lastImmatriculation, vehicle);\n  }\n\n  deleteVehicle(vehicle: Vehicle) {\n    return this.http.post<any>('http://localhost:3000/api/v1/vehicules/delete/' + vehicle.immatriculation, vehicle);\n  }\n\n  createVehicle(vehicleData: Vehicle): Observable<any> {\n    return this.http.post('http://localhost:3000/api/v1/vehicules/add/', vehicleData);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  mapbox: {\n    accessToken: 'pk.eyJ1IjoiYXNiam9ybm4iLCJhIjoiY2twY293OWd0MDI0bzJvbzF5czFlaGZjZCJ9.8ovQ5kkT7PrccV5wKR45Fw'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { Setting } from './setting.model';\n\nexport interface MailingOptionsElements {\n  name: string;\n  description: string;\n  active: boolean;\n}\n\n@Component({\n  selector: 'admin-panel',\n  templateUrl: './adminPanel.component.html',\n  styleUrls: ['./adminPanel.component.less'],\n})\nexport class AdminPanelComponent implements OnInit, AfterViewInit {\n  constructor() { }\n\n\n  ngAfterViewInit(): void { }\n\n  ngOnInit(): void {\n\n  }\n}\n","<div id='admin-container' class='admin-container'>\n  <div is='wrapper' class='wrapper'>\n    <div id='container' class='container'>\n      <mat-card class='wrapper-card'>\n        <mat-card-content style='margin: 2em; position: relative;' class='wrapper-card-content'>\n          <mat-tab-group>\n<!--            <mat-tab label=\"General\"> General </mat-tab>-->\n<!--            <mat-tab label=\"Covoiturage\"> Covoiturage </mat-tab>-->\n            <mat-tab label=\"Mailing\">\n              <mailing-panel></mailing-panel>\n            </mat-tab>\n          </mat-tab-group>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { ResetPasswordFormComponent } from './reset-password-form.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MessageService } from '../common/services/message.service';\n\n@NgModule({\n  declarations: [ResetPasswordFormComponent],\n  imports: [\n    BrowserModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  exports: [ResetPasswordFormComponent],\n  providers: [MessageService],\n  bootstrap: [ResetPasswordFormComponent],\n})\nexport class ResetPasswordFormModule {}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HeaderModule } from '../../header/header.module';\nimport { SidebarModule } from '../../sidebar/sidebar.module';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { VehicleModal } from './vehicle-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\n@NgModule({\n  declarations: [\n    VehicleModal\n  ],\n  imports: [\n    BrowserModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HeaderModule,\n    SidebarModule,\n    MatSidenavModule,\n    MatChipsModule,\n    MatIconModule,\n    MatSlideToggleModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatTableModule,\n    MatDividerModule,\n    MatAutocompleteModule\n  ],\n  exports: [VehicleModal],\n  providers: [],\n  bootstrap: [VehicleModal]\n})\nexport class VehicleModule { }","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport * as moment from 'moment';\n\nexport class Common {\n\n  static readonly MY_FORMATS = {\n    parse: {\n      dateInput: 'LL',\n    },\n    display: {\n      dateInput: 'DD/MM/YYYY',\n      monthYearLabel: 'YYYY',\n      dateA11yLabel: 'LL',\n      monthYearA11yLabel: 'YYYY',\n    },\n  };\n\n  /**\n   * Créer une balise script contenant l'url du fichier js\n   * @param url chemin du fichier à charger\n   */\n  public static loadScript(url: string) {\n    const body = <HTMLDivElement>document.body;\n    const script = document.createElement('script');\n    script.innerHTML = '';\n    script.src = url;\n    script.async = false;\n    script.defer = true;\n    body.appendChild(script);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SiteModalComponent } from './site-modal.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Common } from '../../common/common';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { HeaderModule } from 'src/app/header/header.module';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTableModule } from '@angular/material/table';\nimport { SidebarModule } from 'src/app/sidebar/sidebar.module';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport { MapModule } from '../../map/map.module';\n\n@NgModule({\n  declarations: [\n    SiteModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HeaderModule,\n    SidebarModule,\n    MatSidenavModule,\n    MatChipsModule,\n    MatIconModule,\n    MatSlideToggleModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatTableModule,\n    MatDividerModule,\n    MatAutocompleteModule,\n    MapModule,\n  ],\n  exports: [\n    SiteModalComponent],\n  providers: [\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: Common.MY_FORMATS},\n  ],\n  bootstrap: [SiteModalComponent]\n})\nexport class SiteModalModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Vehicle } from './vehicle.model';\nimport { VehicleService } from './vehicle-list.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatSort } from '@angular/material/sort';\n\nimport { HistoricalVehicleModal } from './historical-vehicle-modal/historical-vehicule-modal.component';\nimport { VehicleModal } from './vehicle-modal/vehicle-modal.component';\nimport { MessageService } from '../common/services/message.service';\nimport { SinisterModal } from '../sinister/sinister-modal.component';\nimport { Device } from '../common/device';\nimport { SinisterService } from '../sinister/sinister.service';\nimport { SinisterModel } from '../sinister/sinister.model';\nimport { ConfirmComponent } from '../confirm/confirm.component';\nimport { StatusEnum } from '../common/models/status.enum';\nimport { StatusModel } from '../common/models/StatusModel';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { ArchivedSinistersComponent } from './archived-sinisters/archived-sinisters.component';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-vehicles-list',\n  templateUrl: './vehicles-list.component.html',\n  styleUrls: ['./vehicles-list.component.less'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0px' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed',\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n      transition('expanded <=> void',\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))]),\n  ],\n})\nexport class VehiclesListComponent implements OnInit {\n  @ViewChild(MatSort) sort: MatSort;\n\n  vehicles: Vehicle[] = [];\n\n  sinisters: SinisterModel[] = [];\n\n  ELEMENT_DATA: Vehicle[];\n  columnsToDisplay: string[] = ['model', 'libelle', 'immatriculation', 'state', 'status'];\n\n  columnsName: {\n    [model: string]: string;\n    immatriculation: string;\n    state: string;\n    status: string;\n    libelle: string;\n  } = {\n    model: 'Modele',\n    immatriculation: 'Immatriculation',\n    state: 'Etat',\n    status: 'Statut',\n    libelle: 'Marque',\n  };\n\n  expandedElement: Vehicle | null;\n\n  dataSource: MatTableDataSource<Vehicle>;\n\n  constructor(private vehicleService: VehicleService,\n              private sinisterService: SinisterService,\n              private dialog: MatDialog,\n              private datePipe: DatePipe,\n              private msgService: MessageService) {\n\n  }\n\n  public ngOnInit(): void {\n    this.fetchData();\n  }\n\n  public isEmptyVehicles(): boolean {\n    return this.vehicles.length === 0;\n  }\n\n  public deleteVehicle(vehicle: Vehicle): void {\n    if (confirm('Êtes-vous sûr de vouloir supprimer ce véhicule ?')) {\n      if (vehicle.immatriculation) {\n        this.vehicleService.deleteVehicle(vehicle).subscribe(() => {\n          this.fetchData();\n        });\n      }\n    }\n  }\n\n  formatDateSinistre(date_sinistre: Date){\n    const formated_date = this.datePipe.transform(date_sinistre, 'dd/MM/yyyy');\n    return formated_date;\n  }\n  public fetchData(): void {\n    this.vehicleService.getVehicles().subscribe(vehicles => {\n      this.ELEMENT_DATA = vehicles;\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n      this.dataSource.sort = this.sort;\n    });\n\n  }\n\n  public openDialog(vehicle: Vehicle): void {\n    const dialogRef = this.dialog.open(VehicleModal, {\n      data: {\n        vehicle,\n      },\n      width: '512px',\n    });\n  }\n\n  public historicalVehicle(vehicle: Vehicle): void {\n    const dialogRef = this.dialog.open(HistoricalVehicleModal, {\n      data: {\n        vehicle,\n      },\n      width: '100%',\n    });\n  }\n\n  public applyFilter(event: Event): void {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Ouverture de la modale d'ajout de véhicule\n   * @param vehicle Véhicule concerné\n   * @param mode Mode d'ouverture => Création / modification\n   * @param lastImmatriculation En cas de modification de l'immatriculation il nous faut l'ancienne pour update\n   */\n  public openVehicleModal(mode: string, vehicle: Vehicle | null, lastImmatriculation: string | null): void {\n    const dialogRef = this.dialog.open(VehicleModal, {\n      data: { mode, vehicle, lastImmatriculation },\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result && result.saved && !lastImmatriculation) {\n        this.vehicleService.createVehicle(result.vehicle).subscribe(response => {\n          this.msgService.snackbar('Véhicule enregistré', 'success');\n          this.fetchData();\n        });\n      } else if (result && result.saved && lastImmatriculation) {\n        this.vehicleService.updateVehicle(result.vehicle, lastImmatriculation).subscribe(response => {\n          this.msgService.snackbar('Véhicule modifié');\n          this.fetchData();\n        });\n      }\n    });\n  }\n\n  /**\n   * Ouverture de la modal de création de sinistre\n   * Après fermeture on passe le flagService à false et on change l'état\n   */\n  public openSinisterModal(): void {\n    const dialogRef = this.dialog.open(SinisterModal, {\n      width: '512px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result && result.saved) {\n\n        this.sinisterService.createSinister(result.sinister).subscribe(response => {\n          this.msgService.snackbar('Sinistre enregistré', 'success');\n          const selectedVehicle: Vehicle = result.selectedVehicle;\n          selectedVehicle.flagService = false;\n          selectedVehicle.state = 'Sinistre en cours';\n          this.vehicleService.updateVehicle(selectedVehicle, selectedVehicle.immatriculation)\n            .subscribe();\n          this.fetchData();\n        });\n      }\n    });\n  }\n\n  /**\n   * Ouverture de la liste des sinistres archivés d'un véhicule\n   */\n  public openArchivedSinisterModal(vehicle: Vehicle): void {\n    this.dialog.open(ArchivedSinistersComponent, {\n      data: { vehicle }\n    });\n  }\n\n  /**\n   * Affiche les sinistres par véhicule\n   */\n  public getSinistersForVehicle(vehicle: Vehicle): void {\n    this.sinisterService.getSinisters(vehicle.id, 100).subscribe(sinisters => {\n      this.sinisters = sinisters;\n    });\n\n  }\n\n  /**\n   * Ouvre une modal et supprime un sinistre, si plus de sinistre actif, change l'etat du véhicule\n   */\n  public deleteSinister(sinister: SinisterModel, vehicle: Vehicle): void {\n    const dialogRef = this.dialog.open(ConfirmComponent, {\n      data: { message: 'Êtes-vous sûr de vouloir archiver ce sinistre ?' },\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === true) {\n        sinister.status = new StatusModel();\n        sinister.status.id = 300;\n        sinister.status.label = StatusEnum.solved;\n\n        this.sinisterService.updateSinister(sinister).subscribe(response => {\n          this.msgService.snackbar('Sinistre archivé !', 'success');\n          this.hasSinister(vehicle);\n          this.fetchData();\n        });\n\n      }\n\n    });\n  }\n\n  /**\n   * Compte les sinistres pour un véhicule, si il n'y en a pas, on change le state du véhicule\n   */\n  public hasSinister(vehicle: Vehicle): void {\n    this.sinisterService.getSinisters(vehicle.id, 100).subscribe(sinisters => {\n      if (sinisters.length === 0) {\n        const selectedVehicle: Vehicle = vehicle;\n        selectedVehicle.state = 'Sinistres terminés';\n        this.vehicleService.updateVehicle(selectedVehicle, selectedVehicle.immatriculation).subscribe(response => {\n          this.fetchData();\n        });\n      }\n    });\n  }\n\n  public onVehicleSwitchToggle($event: MatSlideToggleChange, vehicle: Vehicle): void {\n    vehicle.flagService = $event.checked;\n    this.vehicleService.updateVehicle(vehicle, vehicle.immatriculation).subscribe(response => {\n      this.msgService.snackbar('Disponibilité modifiée');\n    });\n  }\n\n  public isMobile(): boolean {\n    Device.definedUseDevice('vehicle-container');\n    return Device.isMobileDevice();\n  }\n}\n","<div id='vehicle-container' class='vehicle-container'>\n  <div id='wrapper' class='wrapper'>\n    <canvas #canvas></canvas>\n    <div id='container' class='container'>\n      <div class='add-button'>\n        <button mat-raised-button color='warn' class='add-sinister' (click)=\"openSinisterModal()\">\n          Déclarer un sinistre\n        </button>\n        <button mat-raised-button color='primary' class='add-vehicle' (click)=\"openVehicleModal('new', null, null)\">\n          Ajouter un véhicule\n        </button>\n      </div>\n      <mat-card class='wrapper-card'>\n        <mat-card-header class='wrapper-card-header'>\n          <div id=\"filters\" class='filters'>\n            <mat-form-field class=\"vehicle-wrapper\">\n              <mat-label>Rechercher</mat-label>\n              <input matInput id=\"search\" (keyup)=\"applyFilter($event)\" #input>\n            </mat-form-field>\n          </div>\n        </mat-card-header>\n        <mat-divider></mat-divider>\n        <mat-card-content style='margin: 2em; position: relative;' class='wrapper-card-content'>\n          <div class='mat-elevation-z8'>\n            <table mat-table [dataSource]='dataSource' multiTemplateDataRows matSort>\n              <ng-container matColumnDef='{{column}}' *ngFor='let column of columnsToDisplay'>\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{columnsName[column]}} </th>\n                <ng-container [ngSwitch]='column'>\n                  <ng-container *ngSwitchCase=\"'model'\">\n                    <td mat-cell *matCellDef='let vehicle'> {{vehicle.model}} </td>\n                  </ng-container>\n                  <ng-container *ngSwitchCase=\"'libelle'\">\n                    <td mat-cell *matCellDef='let vehicle'> {{vehicle.libelle}}</td>\n                  </ng-container>\n                  <ng-container *ngSwitchCase=\"'immatriculation'\">\n                    <td mat-cell *matCellDef='let vehicle'> {{vehicle.immatriculation}} </td>\n                  </ng-container>\n                  <ng-container *ngSwitchCase=\"'state'\">\n                    <td mat-cell *matCellDef='let vehicle'> {{vehicle.state}} </td>\n                  </ng-container>\n                  <ng-container *ngSwitchCase=\"'status'\">\n                    <td mat-cell *matCellDef='let vehicle'> {{vehicle.status }} </td>\n                  </ng-container>\n                </ng-container>\n              </ng-container>\n\n              <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n              <ng-container matColumnDef='expandedDetail'>\n                <td mat-cell *matCellDef='let vehicle' [attr.colspan]='columnsToDisplay.length'>\n                  <div class='element-detail' [@detailExpand]=\"vehicle === expandedElement ? 'expanded' : 'collapsed'\">\n\n                    <div class='element-description' style=\"width: 80%;\">\n                      <mat-card class='vehicule-detail' style=\"max-width: 33%;\">\n                        <mat-card-header>\n                          <mat-card-title>\n                            <div class='detail-card-title'>\n                              <mat-icon aria-hidden='false' color='primary'>directions_car</mat-icon>\n                              Véhicule\n                            </div>\n                          </mat-card-title>\n                        </mat-card-header>\n                        <mat-card-content>\n                          <div *ngIf='vehicle.flagService; else usedVehicle'>\n                            Disponibilité : Le véhicule est libre\n                          </div>\n                          <ng-template #usedVehicle>\n                            <div>Disponibilité : Le véhicule est en cours d'utilisation</div>\n                          </ng-template>\n                          <div>\n                            Etat : {{ vehicle.state }} <br>\n                          </div>\n                          <div>\n                            <mat-slide-toggle class=\"slide-toggle\" [checked]=\"vehicle.flagService\"\n                              (change)=\"onVehicleSwitchToggle($event, vehicle)\">\n                                Véhicule disponible ?\n                            </mat-slide-toggle>\n                          </div>\n                        </mat-card-content>\n                      </mat-card>\n\n                      <mat-card class='site-detail' style=\"max-width: 33%;\">\n                        <mat-card-header>\n                          <mat-card-title>\n                            <div class='detail-card-title'>\n                              <mat-icon aria-hidden='false' color='primary'>home_work</mat-icon>\n                              Localisation\n                            </div>\n                          </mat-card-title>\n                        </mat-card-header>\n                        <mat-card-content>\n                          <div *ngIf='vehicle?.site'>\n                            <h3>{{ vehicle?.site?.label }}</h3>\n                            <div>\n                              {{ vehicle?.site?.adress }}\n                            </div>\n                            <div>\n                              {{ vehicle?.site?.postalCode }}, {{ vehicle?.site?.city }}\n                            </div>\n                          </div>\n                        </mat-card-content>\n                      </mat-card>\n                      <mat-card class='other-detail' style=\"max-width: 33%;\">\n                        <mat-card-header>\n                          <mat-card-title>\n                            <div class='detail-card-title'>\n                              <mat-icon aria-hidden='false' color='primary'>info</mat-icon>\n                              Sinistre en cours\n                            </div>\n                          </mat-card-title>\n                        </mat-card-header>\n                        <mat-card-content>\n                          <div class='sinister' *ngFor=\"let sinister of sinisters\">\n                            <span class='sinister-text' matTooltip = {{formatDateSinistre(sinister.createdAt)}}>{{ sinister.libelle }}</span>\n                            <mat-icon class='icon-sinister' (click)=\"deleteSinister(sinister, vehicle);\">highlight_off</mat-icon>\n                          </div>\n                        </mat-card-content>\n                      </mat-card>\n                    </div>\n                    <div class='button-wrapper'>\n                      <button mat-button color='primary'\n                        (click)=\"openVehicleModal('update', vehicle, vehicle.immatriculation)\">Modifier\n                      </button>\n                      <button mat-button color='primary' (click)='historicalVehicle(vehicle)'>\n                        Historique des prêts\n                      </button>\n                      <button mat-button color='primary' (click)='openArchivedSinisterModal(vehicle)'>\n                        Historique des sinistres\n                      </button>\n                      <button mat-button color='warn' (click)='deleteVehicle(vehicle)'>\n                        Supprimer\n                      </button>\n                    </div>\n                  </div>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef='columnsToDisplay'></tr>\n              <tr mat-row *matRowDef='let vehicle; columns: columnsToDisplay;' class='element-row'\n                [class.expanded-row]='expandedElement === vehicle'\n                (click)='expandedElement = expandedElement === vehicle ? null : vehicle; getSinistersForVehicle(vehicle)'>\n              </tr>\n              <tr mat-row *matRowDef=\"let vehicle; columns: ['expandedDetail']\" class='detail-row'></tr>\n\n              <tr class='mat-row' *matNoDataRow>\n                <td class='mat-cell' colspan='4'>Aucune donnée trouvée\"</td>\n              </tr>\n            </table>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { HeaderComponent } from './header.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { CommonModule } from '@angular/common';\n@NgModule({\n  declarations: [\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatIconModule,\n    MatInputModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatBadgeModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatSelectModule,\n    MatDividerModule,\n    MatTableModule,\n    MatSortModule,\n    CommonModule\n\n  ],\n  exports: [\n    HeaderComponent],\n  providers: [],\n  bootstrap: [HeaderComponent]\n})\nexport class HeaderModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { Vehicle } from '../vehicle.model';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatOptionSelectionChange } from '@angular/material/core';\nimport { SiteDataModel } from '../../sites-list/site.model';\nimport { SiteService } from 'src/app/sites-list/sitesList.service';\n\n@Component({\n  selector: 'dialog-modal',\n  templateUrl: './vehicle-modal.html',\n  styleUrls: ['./vehicle-modal.component.less'],\n})\nexport class VehicleModal implements OnInit {\n\n  public modalVehicle: Vehicle;\n\n  public vehicleForm: FormGroup;\n\n  public sites: SiteDataModel[] = [];\n\n  public siteVehicle: SiteDataModel = new SiteDataModel();\n\n  vehicleBrandList = ['Acura', 'Alfa-Romeo', 'Aston Martin', 'Audi', 'BMW', 'Bentley', 'Bugatti', 'Buick', 'Cadillac', 'Chevrolet', 'Chrysler', 'Citroen', 'Daewoo', 'Daihatsu',\n    'Dodge', 'Eagle', 'Ferrari', 'Fiat', 'Fisker', 'Ford', 'Freighliner', 'GMC - General Motors Company', 'Genesis', 'Geo', 'Honda', 'Hummer', 'Hyundai',\n    'Infinity', 'Isuzu', 'Iveco', 'Jaguar', 'Jeep', 'Kla', 'Lamborghini', 'Land Rover', 'Lexus', 'Lincoln', 'Lotus', 'Mazda', 'Maserati', 'Maybach',\n    'McLaren', 'Mercedez-Benz', 'Mercury', 'Mini', 'Mitsubishi', 'Nissan', 'Oldsmobile', 'Opel', 'Panoz', 'Peugeot', 'Plymouth', 'Polestar', 'Pontiac',\n    'Porsche', 'Ram', 'Renault', 'Rivian', 'Rolls_Royce', 'Saab', 'Saturn', 'Smart', 'Subaru', 'Susuki', 'Tesla', 'Toyota', 'Volkswagen',\n    'Volvo'];\n\n  constructor(\n    private dialogRef: MatDialogRef<VehicleModal>,\n    private fb: FormBuilder,\n    private siteService: SiteService,\n    @Inject(MAT_DIALOG_DATA) public data: {\n      isReadOnly: boolean;\n      mode: string;\n      vehicle: Vehicle;\n      lastImmatriculation: string;\n    }) {\n    this.vehicleForm = this.fb.group({\n      immatriculation: new FormControl({ value: '', disabled: this.isReadMode() }, Validators.required),\n      site: new FormControl({ value: '', disabled: this.isReadMode() }, Validators.required),\n      type: new FormControl({ value: '', disabled: this.isReadMode() }),\n      libelle: new FormControl({ value: '', disabled: this.isReadMode() }, Validators.required),\n      model: new FormControl({ value: '', disabled: this.isReadMode() }, Validators.required),\n      flagService: new FormControl({ value: '', disabled: this.isReadMode() }),\n      state: new FormControl({ value: '', disabled: this.isReadMode() }),\n      kilometrage: new FormControl({ value: '', disabled: this.isReadMode() }, Validators.required),\n      gas: new FormControl({ value: '', disabled: this.isReadMode() }, Validators.required),\n    });\n  }\n\n  public ngOnInit(): void {\n\n    this.modalVehicle = this.data.vehicle;\n\n    this.siteService.getSitesAvailable().subscribe(sites => {\n      this.sites = sites;\n    });\n\n    if (this.data.vehicle) {\n      // On alimente le formgroup avec les valeurs du véhicule\n      this.vehicleForm.controls['immatriculation'].setValue(this.data.vehicle.immatriculation);\n      this.vehicleForm.controls['type'].setValue(this.data.vehicle.type);\n      this.vehicleForm.controls['libelle'].setValue(this.data.vehicle.libelle);\n      this.vehicleForm.controls['model'].setValue(this.data.vehicle.model);\n      this.vehicleForm.controls['flagService'].setValue(this.data.vehicle.flagService);\n      this.vehicleForm.controls['state'].setValue(this.data.vehicle.state);\n      this.vehicleForm.controls['site'].setValue(this.data.vehicle.site.label);\n      this.vehicleForm.controls['kilometrage'].setValue(this.data.vehicle.killometrageVehicle);\n      this.vehicleForm.controls['gas'].setValue(this.data.vehicle.essenceVehicule);\n    }\n  }\n\n  /**\n   * Est-on en mode création\n   */\n  public isNewMode(): boolean {\n    return this.data.mode === 'new';\n  }\n\n  /**\n   * Est-on en mode lecture\n   */\n  public isReadMode(): boolean {\n    return this.data.mode === 'read';\n  }\n\n  /**\n   * Est-on en mode modification\n   */\n  public isUpdateMode(): boolean {\n    return this.data.mode === 'update';\n  }\n\n  /**\n   * Détermine l'état du bouton de sauvegarde\n   */\n  public isSaveDisabled(): boolean {\n    return this.vehicleForm.touched && this.vehicleForm.valid;\n\n  }\n\n  public close(saved: boolean = false): void {\n    const vehicle: Vehicle = new Vehicle();\n\n    if (saved) {\n      vehicle.immatriculation = this.vehicleForm.controls['immatriculation'].value;\n      vehicle.model = this.vehicleForm.controls['model'].value;\n      vehicle.libelle = this.vehicleForm.controls['libelle'].value;\n      vehicle.type = this.vehicleForm.controls['type'].value;\n      vehicle.flagService = this.vehicleForm.controls['flagService'].value;\n      vehicle.state = this.vehicleForm.controls['state'].value;\n      vehicle.killometrageVehicle = this.vehicleForm.controls['kilometrage'].value;\n      vehicle.essenceVehicule = this.vehicleForm.controls['gas'].value;\n      vehicle.site = this.siteVehicle;\n      vehicle.type = 1;\n      vehicle.flagService = false;\n    }\n    this.dialogRef.close({ saved: saved, vehicle: vehicle, mode: this.data.mode, lastImmatriculation: this.data.lastImmatriculation });\n  }\n\n  public setParkingSite(status: MatOptionSelectionChange, site: SiteDataModel): void {\n    if (status.isUserInput) {\n      this.siteVehicle = site;\n    }\n  }\n\n}\n","<div class='modal-header'>\n  <div>\n    <h1 *ngIf='isNewMode()'>Création d'un véhicule</h1>\n    <h1 *ngIf='isUpdateMode()'>Consultation d'un véhicule</h1>\n  </div>\n  <button mat-icon-button class='close-button' (click)='close(false)'>\n    <mat-icon style='color: rgba(0, 0, 0, 0.54)'>close</mat-icon>\n  </button>\n</div>\n<mat-divider></mat-divider>\n<form [formGroup]='vehicleForm'>\n  <div>\n    <mat-form-field style='width: 100%'>\n      <mat-label>Immatriculation</mat-label>\n      <input type='text'\n             matInput\n             formControlName='immatriculation'\n             placeholder=\"Numéro de plaque d'immatriculation\">\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field style='margin-right: 1em;'>\n      <mat-label>Marque</mat-label>\n      <mat-select formControlName=\"libelle\">\n        <mat-option *ngFor='let brand of vehicleBrandList' [value]='brand'>\n          {{brand}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>Modèle</mat-label>\n      <input type='text'\n             matInput\n             formControlName='model'\n      placeholder=\"Modèle du véhicule\">\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field style='margin-right: 1em;'>\n      <mat-label>Kilométrage</mat-label>\n      <input type='text'\n             matInput\n             formControlName='kilometrage'\n      placeholder=\"Kilométrage du véhicule\">\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>Essence</mat-label>\n      <input type='text'\n             matInput\n             formControlName='gas'\n             placeholder=\"Niveau d'essence\">\n      <span matSuffix>Litres</span>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field style='width: 100%'>\n        <mat-label>Etat</mat-label>\n        <textarea matInput placeholder=\"Etat physique du véhicule (entretien)\" formControlName='state'></textarea>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field style='width: 100%'>\n      <mat-label>Site de stationnement</mat-label>\n      <input type='text'\n             aria-label=\"Site de stationnement\"\n             matInput\n             formControlName='site'\n             [matAutocomplete]='site_vehicle'>\n      <mat-icon>arrow_drop_down</mat-icon>\n      <mat-autocomplete #site_vehicle='matAutocomplete'>\n        <mat-option *ngFor='let site of sites' [value]='site.label'\n                    (onSelectionChange)='setParkingSite($event, site)'>\n          {{ site.label }}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n  </div>\n\n  <!-- AJOUTER LE FLAG SERVICE QD ON EST EN UPDATE -->\n  <div class='actions'>\n    <button mat-stroked-button (click)='close(false)'>Annuler</button>\n    <button mat-raised-button color='primary' (click)='close(true)' [disabled]='!isSaveDisabled()'>Valider</button>\n  </div>\n</form>\n","import { Component, ViewChild } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { User } from './user.model';\nimport { UserService } from './usersList.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Inject } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { MessageService } from '../common/services/message.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { AuthenticationDataModel } from '../authentication/authentication.data.model';\n\n@Component({\n  selector: 'usersList',\n  templateUrl: './usersList.component.html',\n  styleUrls: ['./usersList.component.less']\n})\nexport class UsersListComponent implements OnInit {\n  @ViewChild(MatSort) sort: MatSort;\n\n  users: User[] = [];\n\n  public columnsToDisplay: string[] = ['email', 'surname', 'name', 'telephone', 'authorizationAccess', 'enabled', 'action'];\n\n  public columnsName: {\n    [email: string]: string;\n    name: string;\n    surname: string;\n    telephone: string;\n    authorizationAccess: string;\n    enabled: string;\n    action: string;\n  } = {\n    email: 'Email',\n    name: 'Prénom',\n    surname: 'Nom',\n    telephone: 'Téléphone',\n    authorizationAccess: 'Profil',\n    enabled: 'Activé',\n    action: 'action'\n  };\n\n  dataSource: MatTableDataSource<User>;\n\n  constructor(\n    private userService: UserService,\n    public dialog: MatDialog,\n    private authService: AuthenticationService,\n    private msgService: MessageService) {\n\n  }\n\n  public ngOnInit(): void {\n    this.fetchUsers();\n  }\n\n  public fetchUsers(): void {\n    this.userService.getUsers().subscribe(users => {\n      this.users = users;\n      this.dataSource = new MatTableDataSource(this.users);\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  public updateUserDialog(mode: string, user: User): void {\n    const dialogRef = this.dialog.open(DialogUser, {\n      data: { mode: mode, user: user }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result && result.saved) {\n        this.userService.updateUser(result.user).subscribe(response => {\n          this.msgService.snackbar('Modifications enregistrées', 'success');\n          this.fetchUsers();\n        });\n      }\n    });\n  }\n\n  public deleteUser(user: User): void {\n    this.msgService.confirm('Êtes-vous sûr de vouloir supprimer cet utilisateur ?').subscribe(response => {\n      if (user.email && response) {\n        this.userService.deleteUser(user);\n        this.msgService.snackbar('Utilisateur supprimé', 'success');\n        this.fetchUsers();\n      }\n    });\n  }\n\n  public onUserSwitchToggle($event: MatSlideToggleChange, user: User): void {\n    user.enabled = $event.checked;\n    this.userService.updateUser(user).subscribe();\n    let snackbarMessage: string = '';\n    if (user.enabled) {\n      snackbarMessage = 'Utilisateur activé';\n    } else {\n      snackbarMessage = 'Utilisateur désactivé';\n    }\n    this.msgService.snackbar(snackbarMessage);\n  }\n\n  /**\n   * Ouverture de la modale de création d'un utilisateur\n   * @param mode Mode d'ouverture\n   * @param user\n   */\n  public openUserModal(mode: string, user: User | null): void {\n    const dialogRef = this.dialog.open(DialogUser, {\n      data: { mode: mode, user: user }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result && result.saved) {\n        this.authService.createUser(result.user).subscribe(response => {\n          this.msgService.snackbar('Utilisateur enregistré', 'success');\n          this.fetchUsers();\n        });\n      }\n    });\n  }\n\n  public displayProfile(authorizationAccess: number): string {\n    let ret: string = 'Administrateur';\n    if (authorizationAccess === 0) {\n      ret = 'Utilisateur';\n    }\n    return ret;\n  }\n\n  public applyFilter(event: Event): void {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n\n@Component({\n  selector: 'dialog-modal',\n  templateUrl: './userModal.html',\n  styleUrls: ['./usersList.component.less'],\n})\nexport class DialogUser implements OnInit {\n\n  public userForm: FormGroup;\n\n  public modalUser: User;\n\n  constructor(\n    private userService: UserService,\n    public dialogRef: MatDialogRef<DialogUser>,\n    private router: Router,\n    public dialog: MatDialog,\n    private fb: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.userForm = this.fb.group({\n      email: new FormControl({value: '', disabled: !this.isNewMode()}, [Validators.required, Validators.email]),\n      name: new FormControl('', Validators.required),\n      surname: new FormControl('', Validators.required),\n      phone: new FormControl('', [Validators.required]),\n      profile: new FormControl('', []),\n    });\n  }\n\n  public ngOnInit(): void {\n    if (this.data.user) {\n      // On alimente le formgroup avec les valeurs de l'utilisateur\n      this.userForm.controls['email'].setValue(this.data.user.email);\n      this.userForm.controls['name'].setValue(this.data.user.name);\n      this.userForm.controls['surname'].setValue(this.data.user.surname);\n      this.userForm.controls['phone'].setValue(this.data.user.telephone);\n      this.userForm.controls['profile'].setValue(this.data.user.authorizationAccess);\n    }\n  }\n\n  public save(saved: boolean = false): void {\n    const user: User = new User();\n    if (saved) {\n      if (this.data && this.data.user) {\n        user.id = this.data.user.id;\n      }\n      user.email = this.userForm.controls['email'].value;\n      user.name = this.userForm.controls['name'].value;\n      user.surname = this.userForm.controls['surname'].value;\n      user.telephone = this.userForm.controls['phone'].value;\n      if (this.userForm.controls['profile'].value) {\n        user.authorizationAccess = 1;\n      } else {\n        user.authorizationAccess = 0;\n      }\n    }\n    this.close(saved, user);\n  }\n\n  public close(saved: boolean = false, user?: AuthenticationDataModel | User): void {\n    this.dialogRef.close({ saved: saved, user: user });\n  }\n\n  /**\n   * Détermine l'état du bouton de sauvegarde\n   */\n  public isSaveDisabled(): boolean {\n    return this.userForm.touched && this.userForm.valid;\n  }\n\n  /**\n   * Est-on en mode création\n   */\n  public isNewMode(): boolean {\n    return this.data.mode === 'new';\n  }\n\n  /**\n   * Est-on en mode modification\n   */\n  public isUpdateMode(): boolean {\n    return this.data.mode === 'update';\n  }\n}\n","<div id='user-container' class='user-container'>\n  <div is='wrapper' class='wrapper'>\n    <div id='container' class='container'>\n      <div class='button-add-user'>\n        <button mat-raised-button color='primary' class='add-user' (click)=\"openUserModal('new', null)\">\n          Ajouter un utilisateur\n        </button>\n      </div>\n      <mat-card class='wrapper-card'>\n        <mat-card-header class='wrapper-card-header'>\n          <div id='filters' class='filters'>\n            <mat-form-field class='site-wrapper'>\n              <mat-label>Rechercher</mat-label>\n              <input matInput id='search' (keyup)='applyFilter($event)' #input>\n            </mat-form-field>\n          </div>\n        </mat-card-header>\n        <mat-card-content style='margin: 2em; position: relative;' class='wrapper-card-content'>\n          <table mat-table [dataSource]='dataSource' multiTemplateDataRows class='mat-elevation-z8' matSort>\n            <ng-container matColumnDef='{{column}}' *ngFor='let column of columnsToDisplay'>\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{columnsName[column]}} </th>\n              <ng-container *ngIf=\"column !== 'action' && column !== 'enabled' && column !== 'authorizationAccess' && column !== 'site'\">\n                <td mat-cell *matCellDef='let user'> {{user[column]}} </td>\n              </ng-container>\n              <ng-container *ngIf=\"column === 'enabled'\">\n                <td mat-cell *matCellDef='let user'>\n                  <mat-slide-toggle class='slide-toggle' [checked]='user.enabled'\n                                    (change)='onUserSwitchToggle($event, user)'>\n                  </mat-slide-toggle>\n                </td>\n              </ng-container>\n              <ng-container *ngIf=\"column === 'authorizationAccess'\">\n                <td mat-cell *matCellDef='let user'> {{ displayProfile(user[column]) }} </td>\n              </ng-container>\n              <ng-container *ngIf=\"column === 'site'\">\n                <td mat-cell *matCellDef='let user'> {{ user[column]?.label }} </td>\n              </ng-container>\n              <ng-container *ngIf=\"column === 'action'\">\n                <td mat-cell *matCellDef='let user'>\n                  <button class='action-btn' mat-raised-button color='primary' (click)=\"updateUserDialog('update', user)\">\n                    Éditer\n                  </button>\n                  <button class='action-btn' mat-raised-button color='warn' (click)='deleteUser(user)'>Supprimer\n                  </button>\n                </td>\n              </ng-container>\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef='columnsToDisplay; sticky: true'></tr>\n            <tr mat-row *matRowDef='let row; columns: columnsToDisplay;'></tr>\n          </table>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</div>\n","<div id='user-modal'>\n  <div class='modal-header'>\n    <div>\n      <h1 *ngIf='isNewMode()'>Création</h1>\n      <h1 *ngIf='isUpdateMode()'>Modification</h1>\n    </div>\n    <button mat-icon-button class='close-button' (click)='close()'>\n      <mat-icon style='color: rgba(0, 0, 0, 0.54)'>close</mat-icon>\n    </button>\n  </div>\n  <mat-divider></mat-divider>\n  <div class='form-container'>\n    <form [formGroup]='userForm' class='form'>\n      <div>\n        <mat-form-field>\n          <mat-label>Email</mat-label>\n          <input matInput aria-label='Email' name='email' formControlName='email' type='email' />\n        </mat-form-field>\n      </div>\n      <div class='two-inputs-one-row'>\n        <mat-form-field>\n          <mat-label>Nom</mat-label>\n          <input matInput aria-label='Nom' name='name' type='text' formControlName='surname' />\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Prenom</mat-label>\n          <input matInput aria-label='Prenom' name='surname' type='text' formControlName='name' />\n        </mat-form-field>\n      </div>\n      <div class='two-inputs-one-row'>\n        <mat-form-field>\n          <mat-label>Telephone</mat-label>\n          <input type='tel' matInput name='tel' aria-label='Telephone' formControlName='phone'>\n        </mat-form-field>\n        <mat-slide-toggle class=\"slide-toggle\" color='primary' [checked]=\"data?.user?.authorizationAccess === 1\" formControlName='profile'>\n          Profil administrateur\n        </mat-slide-toggle>\n      </div>\n      <div class='actions'>\n        <button mat-stroked-button (click)='close()'>Annuler</button>\n        <button class='btn-modal' mat-raised-button color='primary' (click)='save(true)' [disabled]='!isSaveDisabled()'>Valider</button>\n      </div>\n    </form>\n  </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { SnackbarComponent } from './snackbar.component';\n\n@NgModule({\n  declarations: [\n    SnackbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatIconModule\n  ],\n  exports: [\n    SnackbarComponent],\n  providers: [],\n  bootstrap: [SnackbarComponent]\n})\nexport class SnackBarModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Deserialize } from 'cerialize';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { Setting } from './setting.model';\n\n\n\n@Injectable({ providedIn: 'root' })\nexport class ApplicationSettingsService {\n\n  constructor(private http: HttpClient, private authService: AuthenticationService) { }\n\n  public getSettings(): Observable<any> {\n    return this.http.get('http://localhost:3000/api/v1/settings/').pipe(\n      map((response: any) => Deserialize(response.settings, Setting))\n    );\n  }\n\n\n  public updateSetting(setting: Setting): void {\n    if (this.authService.getIsAdmin()) {\n      this.http.put<any>('http://localhost:3000/api/v1/settings/update/' + setting.id, setting).subscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { ResetPasswordMailComponent } from './reset-password-mail.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MessageService } from '../common/services/message.service';\n\n@NgModule({\n  declarations: [ResetPasswordMailComponent],\n  imports: [\n    BrowserModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  exports: [ResetPasswordMailComponent],\n  providers: [MessageService],\n  bootstrap: [ResetPasswordMailComponent],\n})\nexport class ResetPasswordMailModule {}\n","import { autoserializeAs } from 'cerialize';\n\nexport class Setting {\n    @autoserializeAs('id')\n    id: number;\n    @autoserializeAs('label')\n    label: string;\n    @autoserializeAs('description')\n    description: string;\n    @autoserializeAs('flag')\n    flag: number;\n    @autoserializeAs('type')\n    type: number;\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AuthenticationComponent } from './authentication.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MessageService } from '../common/services/message.service';\n\n@NgModule({\n  declarations: [\n    AuthenticationComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [AuthenticationComponent],\n  providers: [MessageService],\n  bootstrap: [AuthenticationComponent]\n})\nexport class AuthenticationModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.less']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"dashboard\" class=\"dashboard\">\n    <mat-card id=\"ask-loan-widget\" class=\"widget\">\n        <mat-card-header>\n            <mat-card-title>Mes demandes de prêt</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n        </mat-card-content>\n    </mat-card>\n    <mat-card id=\"loan-to-come-widget\" class=\"widget\">\n        <mat-card-header>\n            <mat-card-title>Mes emprunts à venir</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n        </mat-card-content>\n    </mat-card>\n    <mat-card id=\"news-widget\" class=\"widget\">\n        <mat-card-header>\n            <mat-card-title>Actualités</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n        </mat-card-content>\n    </mat-card>\n    <mat-card id=\"resources-widget\" class=\"widget\">\n        <mat-card-header>\n            <mat-card-title>Ressources</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n        </mat-card-content>\n    </mat-card>\n    <mat-card id=\"vehicle-widget\" class=\"widget\">\n        <mat-card-header>\n            <mat-card-title>Véhicules disponibles</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n        </mat-card-content>\n    </mat-card>\n</div>","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { User } from '../../users-list/user.model';\nimport { UserService } from '../../users-list/usersList.service';\nimport { MatOptionSelectionChange } from '@angular/material/core';\nimport { LoanDataModel } from '../loan.data.model';\nimport { SiteDataModel } from '../../sites-list/site.model';\nimport { StatusModel } from '../../common/models/StatusModel';\nimport { SiteService } from '../../sites-list/sitesList.service';\nimport { StatusEnum } from '../../common/models/status.enum';\nimport { Vehicle } from '../../vehicles-list/vehicle.model';\nimport { VehicleService } from '../../vehicles-list/vehicle-list.service';\nimport { Device } from '../../common/device';\nimport * as moment from 'moment';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-loan-modal',\n  templateUrl: './loan-modal.component.html',\n  styleUrls: ['./loan-modal.component.less']\n})\nexport class LoanModalComponent implements OnInit {\n\n  /**\n   * FormGroup des prêts\n   */\n  public loanForm: FormGroup;\n\n  /**\n   * Liste des utilisateurs pouvant être conducteurs\n   */\n  public drivers: User[] = [];\n\n  /**\n   * Liste des sites\n   */\n  public sites: SiteDataModel[] = [];\n\n  public vehicules: Vehicle[] = [];\n\n  public selectedDriver: User = new User();\n\n  public selectedDepartureSite: SiteDataModel = new SiteDataModel();\n\n  public selectedArrivalSite: SiteDataModel = new SiteDataModel();\n\n  public selectedVehicule: Vehicle;\n\n  public oneVehiculeAlreadylinked: boolean = false;\n\n  coordinatesToMark: Subject<[[number, number]]> = new Subject<[[number, number]]>();\n\n  constructor(private fb: FormBuilder,\n              private dialogRef: MatDialogRef<LoanModalComponent>,\n              private userService: UserService,\n              private siteService: SiteService,\n              private vehicleService: VehicleService,\n              @Inject(MAT_DIALOG_DATA) public data: {\n              isReadOnly: boolean;\n              mode: string;\n              loan: LoanDataModel;\n  }) {\n      this.loanForm = this.fb.group({\n      driver: new FormControl({value: '', disabled: this.isReadMode() || this.isValidateMode()}, Validators.required),\n      departureSite: new FormControl({value: '', disabled: this.isReadMode() || this.isValidateMode()}, Validators.required),\n      arrivalSite: new FormControl({value: '', disabled: this.isReadMode() || this.isValidateMode()}, Validators.required),\n      start: new FormControl({value: '', disabled: this.isReadMode() || this.isValidateMode()}, [Validators.required]),\n      end: new FormControl({value: '', disabled: this.isReadMode() || this.isValidateMode()}, [Validators.required]),\n      acceptPassengers: new FormControl({value: '', disabled: this.isReadMode() || this.isValidateMode()}, []),\n      lentVehicule: new FormControl({value: '', disabled: this.isReadMode()}, [])\n    });\n  }\n\n  ngOnInit(): void {\n    const localStorageUser: User = JSON.parse(localStorage.getItem('connectedUser') || '');\n    if (localStorageUser && localStorageUser.authorizationAccess !== 1) {\n      this.loanForm.controls['driver'].setValue(localStorageUser.surname + ' ' + localStorageUser.name);\n      this.selectedDriver = localStorageUser;\n      this.loanForm.controls['driver'].disable();\n    } else {\n      this.userService.getUsers().subscribe(users => {\n          this.drivers = users;\n      });\n    }\n    this.siteService.getSitesAvailable().subscribe((sites: SiteDataModel[]) => {\n      this.sites = sites;\n      const coordinates: [[number, number]] = [[0, 0]];\n      coordinates.splice(0);\n      sites.forEach(site => {\n        coordinates.push([site.longitude, site.latitude]);\n      });\n      this.coordinatesToMark.next(coordinates);\n    });\n    if (this.data.loan) {\n      this.vehicleService.getAvailableVehicles(this.data.loan.startDate, this.data.loan.endDate).subscribe(vehicles => {\n        this.vehicules = vehicles;\n      });\n      // On alimente le formgroup avec les valeurs de la réservation\n      this.loanForm.controls['driver'].setValue(this.data.loan.driver.surname + ' ' + this.data.loan.driver.name);\n      this.selectedDriver = this.data.loan.driver;\n      this.loanForm.controls['departureSite'].setValue(this.data.loan.departureSite.label);\n      this.selectedDepartureSite = this.data.loan.departureSite;\n      this.loanForm.controls['arrivalSite'].setValue(this.data.loan.arrivalSite.label);\n      this.selectedArrivalSite = this.data.loan.arrivalSite;\n      this.loanForm.controls['start'].setValue(moment(this.data.loan.startDate));\n      if (this.data.loan.endDate) {\n        this.loanForm.controls['end'].setValue(moment(this.data.loan.endDate));\n      }\n      if (this.data.loan.lentVehicule) {\n        this.loanForm.controls['lentVehicule'].setValue(this.getVehiculeString(this.data.loan.lentVehicule));\n        this.selectedVehicule = this.data.loan.lentVehicule;\n        this.oneVehiculeAlreadylinked = true;\n      }\n    }\n  }\n\n  public getVehiculeString(vehicle: Vehicle): string {\n    let ret: string = '';\n    if (vehicle) {\n      ret = `${vehicle.libelle} ${vehicle.model} (${vehicle.immatriculation})`;\n    }\n    return ret;\n  }\n\n  /**\n   * Est-on en mode création\n   */\n  public isNewMode(): boolean {\n    return this.data.mode === 'new';\n  }\n\n  /**\n   * Est-on en mode lecture\n   */\n  public isReadMode(): boolean {\n    return this.data.mode === 'read';\n  }\n\n  /**\n   * Est-on en mode modification\n   */\n  public isUpdateMode(): boolean {\n    return this.data.mode === 'update';\n  }\n\n  /**\n   * Est-on en mode modification\n   */\n  public isValidateMode(): boolean {\n    return this.data.mode === 'validate';\n  }\n\n  /**\n   * Ferme la modale sans enregistrer si on ferme depuis Annuler ou la croix\n   * Sinon alimente l'objet loan et l'envoi au composant parent pour sauvegarde\n   * @param saved On sauvegarde ou non\n   */\n  public close(saved: boolean = false): void {\n    const loan: LoanDataModel = new LoanDataModel();\n    if (saved) {\n      if (this.data && this.data.loan) {\n        loan.id = this.data.loan.id;\n      }\n      loan.driver = new User();\n      loan.driver = this.selectedDriver;\n      loan.departureSite = new SiteDataModel();\n      loan.departureSite = this.selectedDepartureSite;\n      loan.arrivalSite = new SiteDataModel();\n      loan.arrivalSite = this.selectedArrivalSite;\n      loan.startDate = this.loanForm.controls['start'].value.toDate();\n      if (this.loanForm.controls['end'].value !== '' && this.loanForm.controls['end'].value) {\n        loan.endDate = this.loanForm.controls['end'].value.toDate();\n      } else {\n        loan.endDate = null;\n      }\n      loan.status = new StatusModel();\n      loan.status.id = 1;\n      loan.status.label = StatusEnum.awaitingValidation;\n      loan.lentVehicule = this.selectedVehicule;\n    }\n    this.dialogRef.close({ saved: saved, loan: loan });\n  }\n\n  /**\n   * Détermine l'état du bouton de sauvegarde\n   */\n  public isSaveDisabled(): boolean {\n    return this.loanForm.touched && this.loanForm.valid;\n  }\n\n  /**\n   * On récupère l'id du choix car le matSelect ne contient pas l'objet mais que du texte\n   * @param status Evènement du matSelect pour qu'il ne se déclenche qu'une fois\n   * @param driver Conducteur choisi\n   */\n  public setDriver(status: MatOptionSelectionChange, driver: User): void {\n    if (status.isUserInput) {\n      this.selectedDriver = driver;\n    }\n  }\n\n  /**\n   * On récupère l'id du choix car le matSelect ne contient pas l'objet mais que du texte\n   * @param status Evènement du matSelect pour qu'il ne se déclenche qu'une fois\n   * @param site Site choisi\n   */\n  public setDepartureSite(status: MatOptionSelectionChange, site: SiteDataModel): void {\n    if (status.isUserInput) {\n      this.selectedDepartureSite = site;\n    }\n  }\n\n  /**\n   * On récupère l'id du choix car le matSelect ne contient pas l'objet mais que du texte\n   * @param status Evènement du matSelect pour qu'il ne se déclenche qu'une fois\n   * @param site Site choisi\n   */\n  public setArrivalSite(status: MatOptionSelectionChange, site: SiteDataModel): void {\n    if (status.isUserInput) {\n      this.selectedArrivalSite = site;\n    }\n  }\n\n  public setLinkedVehicle(status: MatOptionSelectionChange, vehicule: Vehicle): void {\n    if (status.isUserInput) {\n      this.selectedVehicule = vehicule;\n    }\n  }\n\n  public getMaxDate(): Date | string {\n    if (this.loanForm.controls['end'].value !== '' && this.loanForm.controls['end'].value) {\n      return this.loanForm.controls['end'].value;\n    }\n    return '';\n  }\n\n  public getMinDate(): Date | string {\n    if (this.loanForm.controls['start'].value !== '' && this.loanForm.controls['start'].value) {\n      return this.loanForm.controls['start'].value;\n    }\n    return '';\n  }\n\n  public getDebMinDate(): Date {\n    return new Date();\n  }\n\n  IsMobile(){\n    Device.definedUseDevice('loan-modal');\n    return Device.isMobileDevice();\n  }\n}\n","<div *ngIf=\"IsMobile()\"></div>\n<div id='loan-modal'>\n  <div class='modal-header'>\n    <div>\n      <h1 *ngIf='isNewMode()'>Nouvelle demande de réservation</h1>\n      <h1 *ngIf='isReadMode() || isUpdateMode()'>Réservation du {{ data.loan.startDate | date: 'dd/MM/YYYY' }}</h1>\n      <h1 *ngIf='isValidateMode()'>Valider de la réservation du {{ data.loan.startDate | date: 'dd/MM/YYYY' }}</h1>\n    </div>\n    <button mat-icon-button class='close-button' (click)='close()'>\n      <mat-icon style='color: rgba(0, 0, 0, 0.54)'>close</mat-icon>\n    </button>\n  </div>\n  <mat-divider></mat-divider>\n  <div class='form-container'>\n    <form [formGroup]='loanForm' class='form'>\n      <div>\n        <div>\n          <mat-form-field style='width: 100%'>\n            <mat-label>Conducteur</mat-label>\n            <input type='text'\n                  aria-label='Conducteur'\n                  matInput\n                  formControlName='driver'\n                  [matAutocomplete]='driver'>\n            <mat-icon>arrow_drop_down</mat-icon>\n            <mat-autocomplete #driver='matAutocomplete'>\n              <mat-option *ngFor='let driver of drivers' [value]=\"driver.surname + ' ' + driver.name\"\n                          (onSelectionChange)='setDriver($event, driver)'>\n                {{ driver.surname }} {{ driver.name }}\n              </mat-option>\n            </mat-autocomplete>\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field style='width: 100%'>\n            <mat-label>Site de départ</mat-label>\n            <input type='text'\n                  aria-label='Site de départ'\n                  matInput\n                  formControlName='departureSite'\n                  [matAutocomplete]='departureSite'>\n            <mat-icon>arrow_drop_down</mat-icon>\n            <mat-autocomplete #departureSite='matAutocomplete'>\n              <mat-option *ngFor='let site of sites' [value]='site.label'\n                          (onSelectionChange)='setDepartureSite($event, site)'>\n                {{ site.label }}\n              </mat-option>\n            </mat-autocomplete>\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field style='width: 100%'>\n            <mat-label>Site d'arrivé</mat-label>\n            <input type='text'\n                  aria-label=\"Site d'arrivé\"\n                  matInput\n                  formControlName='arrivalSite'\n                  [matAutocomplete]='arrivalSite'>\n            <mat-icon>arrow_drop_down</mat-icon>\n            <mat-autocomplete #arrivalSite='matAutocomplete'>\n              <mat-option *ngFor='let site of sites' [value]='site.label'\n                          (onSelectionChange)='setArrivalSite($event, site)'>\n                {{ site.label }}\n              </mat-option>\n            </mat-autocomplete>\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field style='margin-right: 1em'>\n            <mat-label>Date de début</mat-label>\n            <input matInput [min]='getDebMinDate()' [max]='getMaxDate()' [matDatepicker]='startPicker' formControlName='start'>\n            <mat-datepicker-toggle matSuffix [for]='startPicker'></mat-datepicker-toggle>\n            <mat-datepicker #startPicker></mat-datepicker>\n          </mat-form-field>\n          <mat-form-field>\n            <mat-label>Date de fin</mat-label>\n            <input matInput [min]='getMinDate()' [matDatepicker]='endPicker' formControlName='end'>\n            <mat-datepicker-toggle matSuffix [for]='endPicker'></mat-datepicker-toggle>\n            <mat-datepicker #endPicker></mat-datepicker>\n          </mat-form-field>\n        </div>\n        <!--    <div>-->\n        <!--      <mat-checkbox color='primary' class='acceptPassengers' formControlName='acceptPassengers'>Accepter de covoiturer</mat-checkbox>-->\n        <!--    </div>-->\n        <div *ngIf='isValidateMode() || oneVehiculeAlreadylinked'>\n          <mat-form-field style='width: 100%'>\n            <mat-label>Véhicule associé à la demande</mat-label>\n            <input type='text'\n                  aria-label='Véhicule associé à la demande'\n                  matInput\n                  formControlName='lentVehicule'\n                  [matAutocomplete]='lentVehicule'>\n            <mat-icon>arrow_drop_down</mat-icon>\n            <mat-autocomplete #lentVehicule='matAutocomplete'>\n              <mat-option *ngFor='let vehicule of vehicules'\n                          [value]=\"getVehiculeString(vehicule)\"\n                          (onSelectionChange)='setLinkedVehicle($event, vehicule)'>\n                {{ getVehiculeString(vehicule) }}\n              </mat-option>\n            </mat-autocomplete>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class='actions'>\n        <button mat-stroked-button *ngIf='!isReadMode()' (click)='close()'>Annuler</button>\n        <button mat-raised-button *ngIf='!isReadMode()' color='primary' [disabled]='!isSaveDisabled()'\n                (click)='close(true)'>Valider\n        </button>\n        <button mat-raised-button *ngIf='isReadMode()' color='primary' (click)='close()'>Fermer</button>\n      </div>\n    </form>\n    <div class='mapbox' id='mapbox'>\n      <app-map [coordinatesToMark]='coordinatesToMark | async' [searchBar]='false' [departureSite]=\"selectedDepartureSite\" [arrivalSite]=\"selectedArrivalSite\"></app-map>\n    </div>\n  </div>\n</div>\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatCardModule } from '@angular/material/card';\nimport { DashboardComponent } from './dashboard.component';\n\n@NgModule({\n  declarations: [\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatCardModule\n  ],\n  exports: [DashboardComponent],\n  providers: [],\n  bootstrap: [DashboardComponent]\n})\nexport class DashboardModule { }\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport {AuthenticationService} from './authentication.service';\n\n/**\n * Interceptors are called for every request leaving our app\n * https://angular.io/api/common/http/HttpInterceptor\n */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthenticationService) {\n\n  }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const authToken = this.authService.getToken();\n    const authRequest = req.clone({\n      // Add a new header for the existing header\n      headers: req.headers.set('Authorization', `Bearer ${authToken}`),\n    });\n    return next.handle(authRequest);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LayoutComponent } from './layout.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { HeaderModule } from '../header/header.module';\nimport { SidebarModule } from '../sidebar/sidebar.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { UsersListModule } from '../users-list/usersList.module';\nimport { VehiclesListModule } from '../vehicles-list/vehicles-list.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { LoanModule } from '../loan/loan.module';\nimport { AdminPanelModule } from '../admin-panel/adminPanel.module';\nimport { SiteListModule } from '../sites-list/sitesList.module';\nimport { SinisterModule } from '../sinister/sinister-modal.module';\n\n@NgModule({\n  declarations: [\n    LayoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatIconModule,\n    MatInputModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatChipsModule,\n    DashboardModule,\n    HeaderModule,\n    SidebarModule,\n    UsersListModule,\n    VehiclesListModule,\n    LoanModule,\n    AdminPanelModule,\n    SiteListModule,\n    SinisterModule\n  ],\n  exports: [\n    LayoutComponent],\n  providers: [],\n  bootstrap: [LayoutComponent]\n})\nexport class LayoutModule { }\n","import { Moment } from 'moment';\nimport { autoserializeAs } from 'cerialize';\nimport { SiteDataModel } from '../sites-list/site.model';\n\nexport class User {\n  @autoserializeAs('id')\n  id: number;\n  @autoserializeAs('surname')\n  surname: string;\n  @autoserializeAs('name')\n  name: string;\n  @autoserializeAs('profession')\n  profession: string;\n  @autoserializeAs('email')\n  email: string;\n  @autoserializeAs('telephone')\n  telephone: string;\n  @autoserializeAs('authorizationAccess')\n  authorizationAccess: number;\n  @autoserializeAs('dateLastSeen')\n  dateLastSeen: Moment;\n  @autoserializeAs('site')\n  site: SiteDataModel;\n  @autoserializeAs('language')\n  language: number;\n  @autoserializeAs('archived')\n  archived: boolean;\n  @autoserializeAs('enabled')\n  enabled: boolean;\n  @autoserializeAs('profile')\n  profile: boolean;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { SinisterModel } from './sinister.model';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Deserialize } from 'cerialize';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SinisterService {\n\n    constructor(private http: HttpClient) {\n\n    }\n\n    public getSinisters(idVehicle: number, idStatus: number | null): Observable<any> {\n        return this.http.get('http://localhost:3000/api/v1/sinisters/'+idVehicle+'&'+idStatus).pipe(\n            map((response: any) => Deserialize(response.sinisters, SinisterModel)),\n        );\n    }\n\n    public createSinister(sinisterData: SinisterModel): Observable<any> {\n        return this.http.post('http://localhost:3000/api/v1/sinisters/create/', sinisterData); \n    }\n\n    public updateSinister(sinisterData: SinisterModel): Observable<any> {\n        return this.http.post('http://localhost:3000/api/v1/sinisters/update/' + sinisterData.id, sinisterData);\n    }\n}","import { LOCALE_ID, NgModule } from '@angular/core';\nimport localeFr from '@angular/common/locales/fr';\nimport { registerLocaleData } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { UsersListModule } from './users-list/usersList.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { HeaderModule } from './header/header.module';\nimport { SidebarModule } from './sidebar/sidebar.module';\nimport { VehiclesListModule } from './vehicles-list/vehicles-list.module';\nimport { LayoutModule } from './layout/layout.module';\nimport { LoanModule } from './loan/loan.module';\n\nimport { SnackBarModule } from './snackbar/snackbar.module';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { AdminPanelModule } from './admin-panel/adminPanel.module';\nimport { LoanModalModule } from './loan/loan-modal/loan-modal.module';\nimport { CloseLoanModalModule } from './loan/close-loan-modal/close-loan-modal.module';\nimport { HistoricalVehicleModule } from './vehicles-list/historical-vehicle-modal/historical-vehicle-modal.module';\nimport { VehicleModule } from './vehicles-list/vehicle-modal/vehicle-modal.module';\nimport { AuthInterceptor } from './authentication/auth.interceptor';\nimport { AlertModule } from './alert/alert.module';\nimport { ConfirmModule } from './confirm/confirm.module';\nimport { SiteListModule } from './sites-list/sitesList.module';\nimport { MapModule } from './map/map.module';\nimport { SiteModalModule } from './sites-list/site-modal/site-modal.module';\nimport { LoanInProgressModule } from './header/loan-in-progress/loan-in-progress.module';\nimport { LoanUserModule } from './header/loan-user/loan-user.module';\nimport { SinisterModule } from './sinister/sinister-modal.module';\nimport { ResetPasswordMailModule } from './reset-password-mail/reset-password-mail.module';\nimport { ResetPasswordFormModule } from './reset-password-form/reset-password-form.module';\n\nregisterLocaleData(localeFr);\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AuthenticationModule,\n    UsersListModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    DashboardModule,\n    HeaderModule,\n    SidebarModule,\n    VehiclesListModule,\n    LayoutModule,\n    LoanModule,\n    SnackBarModule,\n    MatSnackBarModule,\n    AdminPanelModule,\n    LoanModalModule,\n    CloseLoanModalModule,\n    SiteModalModule,\n    HistoricalVehicleModule,\n    VehicleModule,\n    SiteListModule,\n    SiteModalModule,\n    LoanInProgressModule,\n    LoanUserModule,\n    AlertModule,\n    ConfirmModule,\n    MapModule,\n    SinisterModule,\n    ResetPasswordMailModule,\n    ResetPasswordFormModule,\n  ],\n  providers: [\n    { provide: LOCALE_ID, useValue: 'fr-FR' },\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatCardModule } from '@angular/material/card';\nimport { UsersListComponent, DialogUser } from './usersList.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select'\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\n\n\n@NgModule({\n  declarations: [\n    UsersListComponent,\n    DialogUser\n  ],\n  imports: [\n    BrowserModule,\n    MatCardModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatExpansionModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatDividerModule,\n    MatIconModule,\n    MatSortModule,\n    MatTableModule\n  ],\n  exports: [UsersListComponent],\n  providers: [],\n  bootstrap: [UsersListComponent]\n})\nexport class UsersListModule { }\n","import { NgModule } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatNativeDateModule, MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { Common } from '../../common/common';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { CommonModule } from '@angular/common';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { LoanUserComponent } from './loan-user.component';\n\n@NgModule({\n  declarations: [\n    LoanUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatIconModule,\n    MatInputModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatOptionModule,\n    MatCheckboxModule,\n    MatBadgeModule,\n    CommonModule,\n    MatTableModule,\n    MatSortModule,\n    MatFormFieldModule,\n\n  ],\n  exports: [\n    LoanUserComponent],\n  providers: [\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: Common.MY_FORMATS},\n  ],\n  bootstrap: [LoanUserComponent]\n})\nexport class LoanUserModule { }\n","import { NgModule } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatNativeDateModule, MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { LoanModalComponent } from './loan-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { Common } from '../../common/common';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { MapModule } from '../../map/map.module';\n\n@NgModule({\n  declarations: [\n    LoanModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatIconModule,\n    MatInputModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatOptionModule,\n    MatCheckboxModule,\n    MapModule,\n  ],\n  exports: [\n    LoanModalComponent],\n  providers: [\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: Common.MY_FORMATS},\n  ],\n  bootstrap: [LoanModalComponent]\n})\nexport class LoanModalModule { }\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport * as MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport * as mapboxgl from 'mapbox-gl';\nimport '@mapbox/mapbox-gl-directions/dist/mapbox-gl-directions.css';\nimport '@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css';\nimport { Marker } from 'mapbox-gl';\nimport { HttpClient } from '@angular/common/http';\nimport { SiteDataModel } from '../sites-list/site.model';\n// Map Class\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.less'],\n})\nexport class MapComponent implements OnInit, OnChanges {\n  @Input() departureSite: SiteDataModel;\n  @Input() arrivalSite: SiteDataModel;\n  @Input() searchBar: boolean = true;\n  @Input() openPopupOnSearch: boolean = true;\n  @Input() creationMode: boolean = true;\n  @Input() navigationControl: boolean = true;\n  @Input() coordinatesToMark: [[number, number]] | null;\n  @Output() openModalCreation: EventEmitter<any> = new EventEmitter<any>();\n\n  public map: mapboxgl.Map;\n  public style = 'mapbox://styles/mapbox/streets-v11';\n\n  /**\n   * Coordonnées France\n   */\n  public lat = 46.487638;\n  public lng = 2.213749;\n\n  public markers: Marker[] = [];\n  public newMarker: any;\n\n  public lastSearchResult: any;\n\n  constructor(private http: HttpClient) {}\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (!this.map) {\n      this.map = new mapboxgl.Map({\n        accessToken: environment.mapbox.accessToken,\n        container: 'map',\n        style: this.style,\n        zoom: 4.5,\n        center: [this.lng, this.lat],\n      });\n    }\n    if (\n      this.coordinatesToMark &&\n      this.map &&\n      changes.hasOwnProperty('coordinatesToMark')\n    ) {\n      if (this.markers.length > 0) {\n        this.markers.forEach((marker: any) => {\n          marker.addTo(this.map).setLngLat([0, 0]).remove();\n        });\n      }\n      this.markers = [];\n      this.coordinatesToMark.forEach((coordinate) => {\n        this.markers.push(\n          new mapboxgl.Marker({ color: '#673ab7' })\n            .setLngLat(coordinate)\n            .addTo(this.map),\n        );\n      });\n    }\n    if (\n      'latitude' in this.departureSite &&\n      'longitude' in this.departureSite &&\n      'latitude' in this.arrivalSite &&\n      'longitude' in this.arrivalSite &&\n      ('departureSite' in changes || 'arrivalSite' in changes)\n    ) {\n      this.map.once('styledata', () => {\n        this.calculateRoute();\n      });\n      this.calculateRoute();\n    }\n    if (\n      'departureSite' in changes &&\n      this.departureSite.longitude &&\n      this.departureSite.latitude\n    ) {\n      this.map.flyTo({\n        center: [this.departureSite.longitude, this.departureSite.latitude],\n        zoom: 10,\n        speed: 2,\n        curve: 1,\n        easing(t) {\n          return t;\n        },\n      });\n    }\n    if (\n      'arrivalSite' in changes &&\n      this.arrivalSite.longitude &&\n      this.arrivalSite.latitude\n    ) {\n      this.map.flyTo({\n        center: [this.arrivalSite.longitude, this.arrivalSite.latitude],\n        zoom: 10,\n        speed: 2,\n        curve: 1,\n        easing(t) {\n          return t;\n        },\n      });\n    }\n  }\n\n  public ngOnInit(): void {\n    const geocoder = new MapboxGeocoder({\n      accessToken: environment.mapbox.accessToken,\n      placeholder: 'Chercher pour ajouter un site',\n    });\n\n    geocoder.on('result', (e) => {\n      this.lastSearchResult = e.result;\n      geocoder.clear(new Event(''));\n      if (this.newMarker) {\n        this.newMarker.getElement().removeAllListeners();\n        this.newMarker.addTo(this.map).setLngLat([0, 0]).remove();\n      }\n      this.newMarker = new mapboxgl.Marker({ color: '#673ab7' })\n        .setLngLat(this.lastSearchResult.center)\n        .addTo(this.map);\n\n      this.newMarker.getElement().addEventListener('click', () => {\n        if (this.creationMode) {\n          this.openModalCreation.emit(this.lastSearchResult);\n        }\n      });\n\n      if (this.creationMode) {\n        this.openModalCreation.emit(this.lastSearchResult);\n      } else {\n        new mapboxgl.Popup()\n          .setLngLat(this.lastSearchResult.center)\n          .setHTML(this.constructNewMarkerDescription(this.lastSearchResult))\n          .addTo(this.map);\n      }\n    });\n\n    if (this.searchBar) {\n      this.map.addControl(geocoder, 'top-left');\n    }\n    if (this.navigationControl) {\n      this.map.addControl(new mapboxgl.NavigationControl(), 'top-left');\n    }\n  }\n\n  public constructNewMarkerDescription(searchResult: any): string {\n    let description: string = '';\n    let placeInformations: string[] = [];\n    placeInformations = searchResult.place_name.split(',');\n    description += `<h3>Nouveau site</h3>`;\n    description += `<div>${placeInformations[0]}</div>`;\n    description += `<div>${placeInformations[1].trim()}</div>`;\n    description += `<div>${placeInformations[2].trim()}</div>`;\n    description += `<div style='width: 100%; margin-top: 1em;'></div>`;\n    return description;\n  }\n\n  public calculateRoute(): void {\n    let geometry: any;\n\n    this.http\n      .get(\n        `https://api.mapbox.com/directions/v5/mapbox/driving/${this.departureSite.longitude},${this.departureSite.latitude};${this.arrivalSite.longitude},${this.arrivalSite.latitude}?&geometries=geojson&access_token=${environment.mapbox.accessToken}`,\n      )\n      .subscribe((data: any) => {\n        geometry = data.routes[0].geometry;\n\n        if (this.map.getLayer('route')) {\n          this.map.removeLayer('route');\n        }\n        if (this.map.getSource('route')) {\n          this.map.removeSource('route');\n        }\n\n        this.map.addSource('route', {\n          type: 'geojson',\n          data: {\n            type: 'Feature',\n            properties: {},\n            geometry: geometry,\n          },\n        });\n        this.map.addLayer({\n          id: 'route',\n          type: 'line',\n          source: 'route',\n          layout: {\n            'line-join': 'round',\n            'line-cap': 'round',\n          },\n          paint: {\n            'line-color': '#bb95ff',\n            'line-width': 5,\n          },\n        });\n      });\n  }\n}\n","<div class=\"map match-parent\" id=\"map\"></div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { AdminPanelComponent } from './adminPanel.component';\nimport { MailingPanelModule } from '../mailing-panel/mailingPanel.module';\nimport { MatTabsModule } from '@angular/material/tabs';\n\n@NgModule({\n  declarations: [AdminPanelComponent],\n  imports: [\n    BrowserModule,\n    MatTabsModule,\n    MailingPanelModule,\n    MatCardModule\n  ],\n  exports: [AdminPanelComponent],\n  providers: [],\n  bootstrap: [AdminPanelComponent],\n})\nexport class AdminPanelModule { }\n","import { autoserializeAs } from 'cerialize';\nimport { Vehicle } from '../vehicles-list/vehicle.model';\nimport { StatusModel } from '../common/models/StatusModel';\nimport { User } from '../users-list/user.model';\nimport { SiteDataModel } from '../sites-list/site.model';\n\nexport class LoanDataModel {\n  @autoserializeAs('id')\n  id: number;\n  @autoserializeAs('Vehicule')\n  lentVehicule: Vehicle;\n  @autoserializeAs('startDate')\n  startDate: Date;\n  @autoserializeAs('endDate')\n  endDate: Date | null;\n  @autoserializeAs('Status')\n  status: StatusModel;\n  @autoserializeAs('User')\n  driver: User;\n  @autoserializeAs('departureSite')\n  departureSite: SiteDataModel;\n  @autoserializeAs('arrivalSite')\n  arrivalSite: SiteDataModel;\n  @autoserializeAs('commentLoan')\n  commentLoan: string;\n  @autoserializeAs('essence')\n  essence: number;\n  @autoserializeAs('kilometrage')\n  kilometrage: number;\n}\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { Common } from '../common/common';\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MessageService } from '../common/services/message.service';\nimport { Device } from '../common/device';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'reset-password-form',\n  templateUrl: './reset-password-form.component.html',\n  styleUrls: ['./reset-password-form.component.less'],\n})\nexport class ResetPasswordFormComponent implements OnInit, AfterViewInit {\n  private userId: number;\n  private token: string;\n\n  public static readonly PASSWORD_REGEXP: string =\n    '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&]).{8,}$';\n  /**\n   * formGroup de l'inscription\n   */\n  public resetPasswordForm: FormGroup;\n\n  get registerFormControls(): { [p: string]: AbstractControl } {\n    return this.resetPasswordForm.controls;\n  }\n\n  static confirmed = (controlName: string, matchingControlName: string) => {\n    return (control: AbstractControl) => {\n      if (control && control.parent) {\n        const input = control.parent.get(controlName);\n        const matchingInput = control.parent.get(matchingControlName);\n\n        if (input === null || matchingInput === null) {\n          return null;\n        }\n\n        if (matchingInput?.errors && !matchingInput.errors.confirmedValidator) {\n          return null;\n        }\n\n        if (input.value !== matchingInput.value) {\n          matchingInput.setErrors({ confirmedValidator: true });\n          return { confirmedValidator: true };\n        } else {\n          matchingInput.setErrors(null);\n          return null;\n        }\n      } else {\n        return null;\n      }\n    };\n  };\n\n  public constructor(\n    private fb: FormBuilder,\n    private authenticationService: AuthenticationService,\n    private _snackBar: MatSnackBar,\n    private msgService: MessageService,\n    private activatedRoute: ActivatedRoute,\n  ) {\n    this.resetPasswordForm = this.fb.group({\n      password: new FormControl('', [\n        Validators.minLength(8),\n        Validators.required,\n        Validators.pattern(ResetPasswordFormComponent.PASSWORD_REGEXP),\n      ]),\n      passwordConfirm: new FormControl('', [\n        Validators.minLength(8),\n        Validators.required,\n        ResetPasswordFormComponent.confirmed('password', 'passwordConfirm'),\n        Validators.pattern(ResetPasswordFormComponent.PASSWORD_REGEXP),\n      ]),\n    });\n  }\n\n  public ngOnInit(): void {\n    this.activatedRoute.params.subscribe((param) => {\n      this.userId = param['id'];\n      this.token = param['token'];\n    });\n  }\n\n  public ngAfterViewInit(): void {\n    Common.loadScript('../assets/js/login-background.js');\n  }\n\n  /**\n   * Inverse la valeur pour passer du formulaire d'inscription à celui de connexion\n   * Et réinitialisation des formulaires\n   */\n\n  public openSnackBar(type: string, message: string): void {\n    this.msgService.snackbar(message, type);\n  }\n\n  public sendForm(event: KeyboardEvent): void {\n    if (\n      event.code &&\n      (event.code.toLowerCase() === 'enter' ||\n        event.code.toLowerCase() === 'numpadenter') &&\n      this.resetPasswordForm\n    ) {\n      this.sendPasswordReset();\n    }\n  }\n  sendPasswordReset() {\n    if (this.resetPasswordForm.valid) {\n      const data = {\n        token: this.token,\n        userId: this.userId,\n        clearPassword: this.resetPasswordForm.value.password,\n      };\n      this.authenticationService.changeUserPassword(data);\n    }\n  }\n\n  IsMobile() {\n    Device.definedUseDevice('auth-container');\n    return Device.isMobileDevice();\n  }\n}\n","<div *ngIf=\"IsMobile()\"></div>\n<div id=\"auth-container\">\n  <div id=\"wrapper\" class=\"wrapper\">\n    <canvas #canvas></canvas>\n    <div id=\"container\" class=\"container\">\n      <mat-card id=\"reset-password-form\" class=\"reset-password-form\">\n        <mat-card-header>\n          <mat-card-title>Réinitialisation Mot de Passe</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <form\n            class=\"reset-password-form\"\n            [formGroup]=\"resetPasswordForm\"\n            (keydown)=\"sendForm($event)\"\n          >\n            <mat-form-field>\n              <mat-label>Mot de passe</mat-label>\n              <input\n                matInput\n                type=\"password\"\n                id=\"password\"\n                formControlName=\"password\"\n              />\n              <!--\n              <mat-error\n                *ngIf=\"\n                  resetPasswordForm.password.touched &&\n                  resetPasswordForm.password.invalid &&\n                  resetPasswordForm.password.errors?.required\n                \"\n                class=\"alert alert-danger\"\n              >\n                Mot de passe requis.\n              </mat-error>\n              <mat-error\n                *ngIf=\"\n                  resetPasswordForm.password.touched &&\n                  resetPasswordForm.password.invalid &&\n                  resetPasswordForm.password.errors?.pattern\n                \"\n                class=\"alert alert-danger\"\n              >\n                Le mot de passe doit contenir au moins 8 caractères dont une\n                lettre minuscule, une lettre majuscule, un chiffre et un\n                caractère spécial.\n              </mat-error>\n               -->\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Confirmez votre mot de passe</mat-label>\n              <input\n                matInput\n                type=\"password\"\n                id=\"passwordConfirm\"\n                formControlName=\"passwordConfirm\"\n              />\n              <!--\n              <mat-error\n                *ngIf=\"\n                  resetPasswordForm.passwordConfirm.touched &&\n                  resetPasswordForm.passwordConfirm.invalid &&\n                  resetPasswordForm.passwordConfirm.errors?.required\n                \"\n                class=\"alert alert-danger\"\n              >\n                Mot de passe requis.\n              </mat-error>\n              <mat-error\n                *ngIf=\"\n                  resetPasswordForm.passwordConfirm.touched &&\n                  resetPasswordForm.passwordConfirm.invalid &&\n                  resetPasswordForm.passwordConfirm.errors?.confirmedValidator\n                \"\n              >\n                Les mots de passe ne correspondent pas.\n              </mat-error>\n              <mat-error\n                *ngIf=\"\n                  resetPasswordForm.passwordConfirm.touched &&\n                  resetPasswordForm.passwordConfirm.invalid &&\n                  resetPasswordForm.passwordConfirm.errors?.pattern\n                \"\n                class=\"alert alert-danger\"\n              >\n                Le mot de passe doit contenir au moins 8 caractères dont une\n                lettre minuscule, une lettre majuscule, un chiffre et un\n                caractère spécial.\n              </mat-error>\n            -->\n            </mat-form-field>\n            <div\n              style=\"\n                width: 100%;\n                height: auto;\n                display: flex;\n                justify-content: flex-end;\n              \"\n            >\n              <button mat-button (click)=\"sendPasswordReset()\">Envoyer</button>\n            </div>\n          </form>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { SitesListComponent } from './sitesList.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule} from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select'\nimport { MatTableModule } from '@angular/material/table';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapModule } from '../map/map.module';\n\n\n@NgModule({\n  declarations: [\n    SitesListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatExpansionModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTableModule,\n    MatCardModule,\n    MatIconModule,\n    MatSortModule,\n    MapModule,\n  ],\n  exports: [SitesListComponent],\n  providers: [],\n  bootstrap: [SitesListComponent]\n})\nexport class SiteListModule { }\n","import { NgModule } from '@angular/core';\nimport { CloseLoanModalComponent } from './close-loan-modal.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n    declarations: [\n        CloseLoanModalComponent\n    ],\n    imports: [\n        MatIconModule,        \n        MatDividerModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatButtonModule\n    ],\n    exports: [\n        CloseLoanModalComponent\n    ],\n    providers: [],\n    bootstrap: [CloseLoanModalComponent]\n})\nexport class CloseLoanModalModule { }","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Deserialize } from 'cerialize';\nimport { HttpClient } from '@angular/common/http';\nimport { StatusModel } from '../models/StatusModel';\n\n@Injectable()\nexport class StatusService {\n\n  constructor(private httpClient: HttpClient) {}\n\n  public getStatusByFamilyStatus(familyStatus: number): Observable<StatusModel[]> {\n    return this.httpClient.get('http://localhost:3000/api/v1/status/' + familyStatus).pipe(\n      map((response: any) => Deserialize(response.status, StatusModel))\n    );\n  }\n\n}\n","import { autoserializeAs } from 'cerialize';\n\nexport class AuthenticationDataModel {\n  @autoserializeAs('email')\n  email: string;\n  @autoserializeAs('password')\n  password: string;\n  @autoserializeAs('name')\n  name: string;\n  @autoserializeAs('surname')\n  surname: string;\n  @autoserializeAs('phone')\n  telephone: string;\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { SiteDataModel } from '../site.model';\n\n@Component({\n  selector: 'app-site-modal',\n  templateUrl: './site-modal.component.html',\n  styleUrls: ['./site-modal.component.less'],\n})\nexport class SiteModalComponent implements OnInit {\n\n  public siteForm: FormGroup;\n\n  public sites: any[] = [];\n\n  constructor(private fb: FormBuilder,\n              private dialogRef: MatDialogRef<SiteModalComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: {\n                isReadOnly: boolean;\n                mode: string;\n                site: any;\n              }) {\n    this.siteForm = this.fb.group({\n      label: new FormControl({ value: '', disabled: this.isReadMode() }, Validators.required),\n      adress: new FormControl({ value: '', disabled: true }, Validators.required),\n      postalCode: new FormControl({ value: '', disabled: true }, Validators.required),\n      city: new FormControl({ value: '', disabled: true }, [Validators.required]),\n      phone: new FormControl({ value: '', disabled: this.isReadMode() }, []),\n      mail: new FormControl({ value: '', disabled: this.isReadMode() }, [Validators.required, Validators.email]),\n      pays: new FormControl({ value: '', disabled: true }, []),\n    });\n  }\n\n  public ngOnInit(): void {\n    if (this.data.site) {\n      // On alimente le formgroup avec les valeurs du site\n      this.siteForm.controls['label'].setValue(this.data?.site?.label);\n      this.siteForm.controls['adress'].setValue(this.data?.site?.adress);\n      this.siteForm.controls['postalCode'].setValue(this.data?.site?.postalCode);\n      this.siteForm.controls['city'].setValue(this.data?.site?.city);\n      this.siteForm.controls['phone'].setValue(this.data?.site?.phone);\n      this.siteForm.controls['mail'].setValue(this.data?.site?.mail);\n      this.siteForm.controls['pays'].setValue(this.data?.site?.pays);\n    }\n  }\n\n  /**\n   * Est-on en mode création\n   */\n  public isNewMode(): boolean {\n    return this.data.mode === 'new';\n  }\n\n  /**\n   * Est-on en mode lecture\n   */\n  public isReadMode(): boolean {\n    return this.data.mode === 'read';\n  }\n\n  /**\n   * Est-on en mode modification\n   */\n  public isUpdateMode(): boolean {\n    return this.data.mode === 'update';\n  }\n\n  /**\n   * Ferme la modale sans enregistrer si on ferme depuis Annuler ou la croix\n   * Sinon alimente l'objet site et l'envoi au composant parent pour sauvegarde\n   * @param saved On sauvegarde ou non\n   */\n  public close(saved: boolean = false): void {\n    const site: SiteDataModel = new SiteDataModel();\n    if (!this.siteForm.valid) {\n      this.dialogRef.close();\n      return;\n    }\n    if (saved && this.siteForm.valid) {\n      site.label = this.siteForm.controls['label'].value;\n      site.adress = this.siteForm.controls['adress'].value;\n      site.postalCode = this.siteForm.controls['postalCode'].value;\n      site.city = this.siteForm.controls['city'].value;\n      site.phone = this.siteForm.controls['phone'].value;\n      site.mail = this.siteForm.controls['mail'].value;\n      site.pays = this.siteForm.controls['pays'].value;\n      site.latitude = this.data?.site?.latitude;\n      site.longitude = this.data?.site?.longitude;\n    }\n    this.dialogRef.close({ saved, site });\n  }\n\n  /**\n   * Détermine l'état du bouton de sauvegarde\n   */\n  public isSaveDisabled(): boolean {\n    return this.siteForm.touched && this.siteForm.valid;\n  }\n}\n","<div>\n  <div class='modal-header'>\n    <div>\n      <h1 *ngIf='isNewMode()'>Ajouter un site</h1>\n      <h1 *ngIf='isUpdateMode()'>Modifier le site</h1>\n    </div>\n    <button mat-icon-button class='close-button' (click)='close()'>\n      <mat-icon style='color: rgba(0, 0, 0, 0.54)'>close</mat-icon>\n    </button>\n  </div>\n</div>\n<mat-divider></mat-divider>\n<div class='form-container'>\n  <form [formGroup]='siteForm'>\n    <div>\n      <mat-form-field>\n        <mat-label>Nom du Site</mat-label>\n        <input\n          matInput\n          name='label'\n          type='label'\n          formControlName='label' />\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field>\n        <mat-label>Adresse</mat-label>\n        <input\n          matInput\n          name='adress'\n          type='adress'\n          formControlName='adress' />\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field>\n        <mat-label>Ville</mat-label>\n        <input\n          matInput\n          name='city'\n          type='city'\n          formControlName='city' />\n      </mat-form-field>\n    </div>\n    <div class='two-inputs-one-row'>\n      <mat-form-field style='margin-right: 1em'>\n        <mat-label>Code Postal</mat-label>\n        <input\n          matInput\n          name='postalCode'\n          type='postalCode'\n          formControlName='postalCode' />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Pays</mat-label>\n        <input\n          matInput\n          name='pays'\n          type='pays'\n          formControlName='pays' />\n      </mat-form-field>\n    </div>\n    <div class='two-inputs-one-row'>\n      <mat-form-field style='margin-right: 1em'>\n        <mat-label>Télephone</mat-label>\n        <input\n          matInput\n          name='phone'\n          type='phone'\n          formControlName='phone' />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Mail</mat-label>\n        <input\n          matInput\n          name='mail'\n          type='mail'\n          formControlName='mail' />\n      </mat-form-field>\n    </div>\n    <div class='actions'>\n      <button mat-stroked-button *ngIf='!isReadMode()' (click)='close()'>Annuler</button>\n      <button mat-raised-button color='primary' (click)='close(true)' [disabled]='!isSaveDisabled()'>Valider</button>\n      <button mat-raised-button *ngIf='isReadMode()' color='primary' (click)='close()'>Fermer</button>\n    </div>\n  </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { LoanComponent } from './loan.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatNativeDateModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { Common } from '../common/common';\nimport { MessageService } from '../common/services/message.service';\nimport { LoanService } from './loan.service';\nimport { SiteService } from '../sites-list/sitesList.service';\nimport { DatePipe } from '@angular/common';\nimport { StatusService } from '../common/services/status.service';\nimport { MapModule } from '../map/map.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    LoanComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatIconModule,\n    MatInputModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatCardModule,\n    MatDividerModule,\n    MatTableModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSelectModule,\n    MatSortModule,\n    MapModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    LoanComponent],\n  providers: [\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: Common.MY_FORMATS},\n    MessageService,\n    LoanService,\n    SiteService,\n    DatePipe,\n    StatusService\n  ],\n  bootstrap: [LoanComponent]\n})\nexport class LoanModule { }\n","import { Component, Inject, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { User } from '../../users-list/user.model';\nimport { Subscription } from 'rxjs';\nimport { UserService } from '../../users-list/usersList.service';\nimport { MatOptionSelectionChange } from '@angular/material/core';\nimport { SiteDataModel } from '../../sites-list/site.model';\nimport { StatusModel } from '../../common/models/StatusModel';\nimport { LoanDataModel } from 'src/app/loan/loan.data.model';\nimport { LoanService } from 'src/app/loan/loan.service';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-loan-modal',\n  templateUrl: './loan-user.component.html',\n  styleUrls: ['./loan-user.component.less']\n})\nexport class LoanUserComponent implements OnInit {\n\n  /**\n   * FormGroup des prêts\n   */\n  public loanForm: FormGroup;\n\n  /**\n   * Liste des utilisateurs pouvant être conducteurs\n   */\n  public drivers: User[] = [];\n\n  /**\n   * Liste des sites\n   */\n  public sites: SiteDataModel[] = [];\n\n  public selectedDriver: User = new User();\n\n  public selectedSite: SiteDataModel = new SiteDataModel();\n  /**\n   * Utilisateur connecté\n   */\n  @Input() connectedUser: User;\n\n  public notificationCount: number =0;\n\n  public notificationCountBookingUser: number =0;\n\n  public rowsBookingsUser: any[];\n\n  public rowsBookingsValider: any[];\n\n  public userProfile: string;\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  ELEMENT_DATA: LoanDataModel[];\n\n  columnsToDisplay: string[] = ['startDate'];\n\n  columsName: {\n    startDate: string; } = {\n    startDate: 'Date du prêt'};\n\n  expandedElement: LoanDataModel | null;\n\n  status = ['Tous', 'En attente de validation', 'Validé', 'En cours', 'En retard', 'Clôturé'];\n\n  dataSource: MatTableDataSource<any>;\n\n  constructor(private fb: FormBuilder,\n              private dialogRef: MatDialogRef<LoanUserComponent>,\n              private userService: UserService,\n              private loanService: LoanService,\n              @Inject(MAT_DIALOG_DATA) public data: {\n              isReadOnly: boolean;\n              mode: string;\n              loan: LoanDataModel;\n  }) {\n      this.loanForm = this.fb.group({\n      startDate: new FormControl({value: '', disabled: this.isReadMode()}, Validators.required),\n      driver: new FormControl({value: '', disabled: this.isReadMode()}, Validators.required),\n      departureSite: new FormControl({value: '', disabled: this.isReadMode()}, Validators.required),\n      start: new FormControl({value: '', disabled: this.isReadMode()}, [Validators.required]),\n      end: new FormControl({value: '', disabled: this.isReadMode()}, []),\n      acceptPassengers: new FormControl({value: '', disabled: this.isReadMode()}, [])\n    });\n  }\n\n  ngOnInit(): void {\n    const localStorageUser: string = localStorage.getItem('connectedUser') || '';\n    this.connectedUser = JSON.parse(localStorageUser);\n    if (!this.connectedUser.profile) {\n      this.userProfile = 'Administrateur';\n    }\n\n    this.loanService.getBookingsForUtilisateurStatusValide(this.connectedUser.id,4).subscribe(loan => {\n      this.notificationCountBookingUser = loan.notificationCountBookingUser.count;\n\n    this.rowsBookingsUser = loan.notificationCountBookingUser.rows;\n       this.ELEMENT_DATA = loan;\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n      this.dataSource.sort = this.sort;\n     });\n\n     this.loanService.getLoansByStatus(1).subscribe(loan => {\n      this.notificationCount = loan.notificationCount.count;\n      this.rowsBookingsValider = loan.notificationCount.rows;\n    });\n  }\n\n  /**\n   * Est-on en mode création\n   */\n  public isNewMode(): boolean {\n    return this.data.mode === 'new';\n  }\n\n  /**\n   * Est-on en mode lecture\n   */\n  public isReadMode(): boolean {\n    return this.data.mode === 'read';\n  }\n\n  /**\n   * Est-on en mode modification\n   */\n  public isUpdateMode(): boolean {\n    return this.data.mode === 'update';\n  }\n\n  /**\n   * Ferme la modale sans enregistrer si on ferme depuis Annuler ou la croix\n   * Sinon alimente l'objet loan et l'envoi au composant parent pour sauvegarde\n   * @param saved On sauvegarde ou non\n   */\n  public close(saved: boolean = false): void {\n    /*const loan: LoanDataModel = new LoanDataModel();\n    if (saved) {\n      loan.driver = new User();\n      loan.driver.id = this.selectedDriver.id;\n      loan.site = new SiteDataModel();\n      loan.site.id = this.selectedSite.id || 1;\n      loan.startDate = this.loanForm.controls['start'].value.toDate();\n      if (this.loanForm.controls['end'].value !== '') {\n        loan.endDate = this.loanForm.controls['end'].value.toDate();\n      }\n      loan.status = new StatusModel();\n      loan.status.id = 1;\n    }*/\n    this.dialogRef.close();\n  }\n\n  /**\n   * Détermine l'état du bouton de sauvegarde\n   */\n  public isSaveDisabled(): boolean {\n    return this.loanForm.touched && this.loanForm.valid;\n  }\n\n  /**\n   * On récupère l'id du choix car le matSelect ne contient pas l'objet mais que du texte\n   * @param status Evènement du matSelect pour qu'il ne se déclenche qu'une fois\n   * @param driver Conducteur choisi\n   */\n  public setDriver(status: MatOptionSelectionChange, driver: User): void {\n    if (status.isUserInput) {\n      this.selectedDriver = driver;\n    }\n  }\n\n  /**\n   * On récupère l'id du choix car le matSelect ne contient pas l'objet mais que du texte\n   * @param status Evènement du matSelect pour qu'il ne se déclenche qu'une fois\n   * @param site Site choisi\n   */\n  public setSite(status: MatOptionSelectionChange, site: SiteDataModel): void {\n    if (status.isUserInput) {\n      this.selectedSite = site;\n    }\n  }\n}\n","<div class='modal-header'>\n  <div>\n    <h1>Vos réservations</h1>\n\n    <tr *ngFor=\"let booking of (rowsBookingsUser)\">\n      <div><span>Nom du demandeur : {{booking.User.surname}}{{booking.User.name}}</span></div>\n      <div><span>date de début  : {{booking.startDate | date: 'fullDate'}}</span></div>\n      <div><span>date de fin : {{booking.endDate | date: 'fullDate'}}</span></div>\n      <div><span>Nom du Site : {{booking.Site.label}}</span></div>\n    </tr>\n\n    <div class='actions'>\n      <button mat-stroked-button *ngIf='!isReadMode()' (click)='close()'>Annuler</button>\n    </div>\n\n  </div>\n</div>\n","import { Component, Inject, Input, LOCALE_ID, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { User } from '../users-list/user.model';\nimport * as moment from 'moment';\nimport { Device } from '../common/device'\nimport { LoanService } from '../loan/loan.service';\nimport { LoanDataModel } from '../loan/loan.data.model';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LoanInProgressComponent } from './loan-in-progress/loan-in-progress.component';\nimport { LoanUserComponent } from './loan-user/loan-user.component';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.less']\n})\nexport class HeaderComponent implements OnInit {\n\n  /**\n   * Nom de la page affichée, par défaut = Tableau de bord\n   */\n  @Input() pageName: string = 'Tableau de bord';\n  /**\n   * Utilisateur connecté\n   */\n  @Input() connectedUser: User;\n\n  public userProfile: string;\n\n  public notificationCount: number =0;\n\n  public notificationCountBookingUser: number =0;\n\n  public rowsBookingsUser: any[];\n\n  public rowsBookingsValider: any[];\n\n    public notificationCountStatutEnAttenteDeValidation: number =0;\n\n  public notificationCountStatutValide: number =0;\n\n\n\n  /**\n   * Date du jour au format string\n   */\n  public today: string = moment().locale('fr').format('dddd Do MMMM YYYY');\n  sort: any;\n  dialog: any;\n\n  constructor(\n    private authenticationService: AuthenticationService,\n    public loanService: LoanService,\n    public dialog2: MatDialog,\n    @Inject(LOCALE_ID) public locale: string\n  ) { }\n\n  public ngOnInit(): void {\n    const localStorageUser: string = localStorage.getItem('connectedUser') || '';\n    this.connectedUser = JSON.parse(localStorageUser);\n    if (this.connectedUser.authorizationAccess === 1) {\n      this.userProfile = 'Administrateur';\n    } else {\n      this.userProfile = 'Utilisateur';\n    }\n\n    // Permet de donner le nombre de réservations avec le Status 'En attente de Validation'\n    /* notificationCountStatutEnAttenteDeValidation */\n    this.loanService.getLoansByStatus(1).subscribe(loan => {\n      this.notificationCountStatutEnAttenteDeValidation = loan.notificationCount.count;\n      this.rowsBookingsValider = loan.notificationCount.rows;\n    });\n\n    // Permet de donner le nombre de réservations avec le Status 'En attente de Validation'\n    /* notificationCountStatutEnAttenteDeValidation */\n     this.loanService.getLoansByStatus(4).subscribe(loan => {\n      this.notificationCountStatutValide = loan.notificationCount.count;\n      this.rowsBookingsValider = loan.notificationCount.rows;\n    });\n\n    // Permet de donner le nombre réservation avec le Status 'Validé' pour l'utilisateur connecté\n    /* notificationCountBookingUser */\n    this.loanService.getBookingsForUtilisateurStatusValide(this.connectedUser.id,4).subscribe(loan => {\n      this.notificationCountBookingUser = loan.notificationCountBookingUser.count;\n      this.rowsBookingsUser = loan.notificationCountBookingUser.rows;\n     });\n\n\n  }\n\n  /**\n   * Déconnexion\n   */\n  public logout(): void {\n    this.authenticationService.logout();\n  }\n\n  /**\n   * Ouverture de la modale de réservation\n   * @param isReadOnly En lecture seule ou non\n   * @param mode Mode d'ouverture => Création / modification\n   * @param loan\n   */\n   public openLoanInProgress(mode: string, loan: LoanDataModel | null): void {\n    const dialogRef = this.dialog2.open(LoanInProgressComponent, {\n      data: { mode: mode, loan: loan }\n    });\n  }\n\n  public openLoanUser(mode: string, loan: LoanDataModel | null): void {\n    const dialogRef = this.dialog2.open(LoanUserComponent, {\n      data: { mode: mode, loan: loan }\n    });\n  }\n\n  IsMobile(){\n    Device.definedUseDevice('header-container');\n    return Device.isMobileDevice();\n  }\n\n}\n\n","<div *ngIf=\"IsMobile()\"></div>\n<div id=\"header-container\">\n    <div id=\"header\" class=\"header d-flex align-items-center flex-direction-row\">\n        <div id=\"logo-infinix\" class=\"logo-infinix d-flex align-items-center flex-direction-row\">\n            <img src=\"../../assets/pictures/logoInfinix.png\" />\n        </div>\n        <div id=\"header-right-part\" class=\"header-right-part d-flex flex-direction-row\">\n            <div id=\"header-center\" class=\"header-center d-flex align-items-center flex-direction-row\">\n                <div>\n                    <span id=\"header-date\" class=\"header-date\">{{ today }}</span>\n                </div>\n                <div id=\"header-title\" class=\"header-title\">\n                    <h1>{{ pageName }}</h1>\n                </div>\n                <div>\n                </div>\n            </div>\n\n        <div *ngIf=\"connectedUser.authorizationAccess === 1; then thenBlock else elseBlock\"></div>\n        <ng-template #thenBlock>\n            <div class=\"header-notification\">\n              <button mat-icon-button>\n                <mat-icon style=\"cursor: pointer\" matBadge=\"{{notificationCountStatutEnAttenteDeValidation + notificationCountStatutValide}}\" matBadgeColor=\"primary\" (click)=\"openLoanInProgress('new', null)\">notifications_none</mat-icon>\n              </button>\n            </div>\n        </ng-template>\n        <ng-template #elseBlock>\n            <div>\n              <button mat-icon-button>\n                <mat-icon style=\"cursor: pointer\" matBadge=\"{{notificationCountBookingUser}}\" matBadgeColor=\"primary\" (click)=\"openLoanInProgress('new', null)\">notifications_none</mat-icon>\n              </button>\n            </div>\n        </ng-template>\n        <div id=\"user-part\" class=\"user-part d-flex align-items-center flex-direction-row\">\n            <div style=\"height: 100%\">\n              <button mat-button [matMenuTriggerFor]=\"menuTranslation\" id=\"menu-translation\" class=\"menu-user\" style=\"height: 100%\">\n                <span class=\"flag-icon flag-icon-fr flag-icon-squared\" style=\"margin: 0 auto\"></span>\n              </button>\n              <mat-menu #menuTranslation=\"matMenu\">\n                <button mat-menu-item>\n                  <span class=\"flag-icon flag-icon-fr flag-icon-squared\" style=\"margin: 0 auto\"></span>\n                  Français\n                </button>\n              </mat-menu>\n            </div>\n            <div  id=\"user-connected\" class=\"user-connected\">\n                <button mat-button id=\"menu-user\" class=\"menu-user\">\n                    <span>{{ connectedUser.surname }} {{ connectedUser.name }}</span>\n                    <span style=\"font-size: 10px;\">{{ userProfile }}</span>\n                </button>\n            </div>\n            <div id=\"logout\" class=\"logout\">\n                <button mat-mini-fab color=\"primary\" (click)=\"logout()\">\n                    <mat-icon aria-hidden=\"false\" style=\"color: white;\">power_settings_new</mat-icon>\n                </button>\n            </div>\n        </div>\n    </div>\n","export enum StatusEnum {\n  awaitingValidation = 'En attente de validation',\n  validated = 'Validé',\n  running = 'En cours',\n  late = 'En retard',\n  ended = 'Clôturé',\n  canceled = 'Annulé',\n  discovered = 'Découvert',\n  takenOver = 'Pris en charge',\n  solved = 'Résolu'\n}\n","export class Device{\n    public static definedUseDevice(id: string){\n        const isMobile = this.isMobileDevice();\n        const device = document.getElementById(id);\n      \n        if(device != undefined){\n          if(isMobile){\n            device.classList.add('mobile');\n          }else{\n            device.classList.add('desktop');\n          }\n        }\n      }\n      \n      public static isMobileDevice() { \n        if( navigator.userAgent.match(/iPhone/i)\n        || navigator.userAgent.match(/webOS/i)\n        || navigator.userAgent.match(/Android/i)\n        || navigator.userAgent.match(/iPad/i)\n        || navigator.userAgent.match(/iPod/i)\n        || navigator.userAgent.match(/BlackBerry/i)\n        || navigator.userAgent.match(/Windows Phone/i)\n        ){\n           return true;\n         }\n        else {\n           return false;\n         }\n      }\n}","<table mat-table [dataSource]=\"settings\" class=\"mat-elevation-z8\">\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Label Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef>Label</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.label}}</td>\n  </ng-container>\n  <!-- Desc Column -->\n  <ng-container matColumnDef=\"description\">\n    <th mat-header-cell *matHeaderCellDef>Description</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.description}}</td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"active\">\n    <th mat-header-cell *matHeaderCellDef>Active</th>\n    <mat-cell *matCellDef=\"let element\">\n      <mat-slide-toggle [checked]=\"element.flag == 1\" (change)=\"toggleMailingOption(element, $event)\">\n      </mat-slide-toggle>\n    </mat-cell>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { Setting } from '../admin-panel/setting.model';\nimport { ApplicationSettingsService } from '../admin-panel/application-settings.service'\n\n\n@Component({\n  selector: 'mailing-panel',\n  templateUrl: './mailingPanel.html',\n  styleUrls: ['./mailingPanel.component.less'],\n})\nexport class MailingPanelComponent implements OnInit, AfterViewInit {\n  settings: Setting[] = [];\n  // Add adminService to constructor\n  constructor(private adminService: ApplicationSettingsService) { }\n\n  displayedColumns: string[] = ['name', 'description', 'active'];\n\n\n  toggleMailingOption(element: any, event: any) {\n    if (event.checked) {\n      element.flag = 1;\n    } else {\n      element.flag = 0;\n    }\n    // Update Service\n    this.adminService.updateSetting(element)\n  }\n\n  ngAfterViewInit(): void { }\n\n  ngOnInit(): void {\n    this.adminService.getSettings().subscribe(settings => {\n      this.settings = settings;\n    })\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { LoanDataModel } from '../loan/loan.data.model';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.component.html',\n  styleUrls: ['./confirm.component.less']\n})\nexport class ConfirmComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<ConfirmComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: {\n    message: string\n  }) {}\n\n  ngOnInit(): void {\n  }\n\n  public close(yesAnswer: boolean = false): any {\n    this.dialogRef.close(yesAnswer);\n  }\n\n}\n","<div class='header'>\n  <mat-icon class=\"icon-warning\">warning_amber</mat-icon>\n  <h1>Demande de confirmation</h1>\n</div>\n<div class='message-container'>\n  {{ data.message }}\n</div>\n<div class='button-container'>\n  <button mat-stroked-button class='button' (click)='close()'>Non</button>\n  <button mat-raised-button color='primary' class='button' (click)='close(true)'>Oui</button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AlertComponent } from './alert.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [\n    AlertComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatIconModule,\n    MatButtonModule\n  ],\n  exports: [AlertComponent],\n  providers: [],\n  bootstrap: [AlertComponent]\n})\nexport class AlertModule { }\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { Common } from '../common/common';\nimport { AuthenticationDataModel } from './authentication.data.model';\nimport { AuthenticationService } from './authentication.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MessageService } from '../common/services/message.service';\nimport { Device } from '../common/device';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'authentication',\n  templateUrl: './authentication.component.html',\n  styleUrls: ['./authentication.component.less'],\n})\nexport class AuthenticationComponent implements OnInit, AfterViewInit {\n  public static readonly PASSWORD_REGEXP: string =\n    '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&]).{8,}$';\n\n  /**\n   * Conditionne l'affichage du formulaire d'inscription ou de connexion\n   */\n  public isRegisterForm: boolean = false;\n  /**\n   * formGroup du login\n   */\n  public loginForm: FormGroup;\n  /**\n   * formGroup de l'inscription\n   */\n  public registerForm: FormGroup;\n\n  /**\n   * Détermine l'affichage de l'erreur des identifiants incorrects\n   */\n  public wrongId: boolean = false;\n\n  /**\n   * Permet de savoir si le compte de l'utilisateur est activé\n   */\n  public isActivated: boolean =true;\n\n  /**\n   * Getter des contrôles du formulaire d'inscription\n   */\n  get registerFormControls(): { [p: string]: AbstractControl } {\n    return this.registerForm.controls;\n  }\n  /**\n   * Getter des contrôles du formulaire de connexion\n   */\n  get loginFormControls(): { [p: string]: AbstractControl } {\n    return this.loginForm.controls;\n  }\n\n  static confirmed = (controlName: string, matchingControlName: string) => {\n    return (control: AbstractControl) => {\n      if (control && control.parent) {\n        const input = control.parent.get(controlName);\n        const matchingInput = control.parent.get(matchingControlName);\n\n        if (input === null || matchingInput === null) {\n          return null;\n        }\n\n        if (matchingInput?.errors && !matchingInput.errors.confirmedValidator) {\n          return null;\n        }\n\n        if (input.value !== matchingInput.value) {\n          matchingInput.setErrors({ confirmedValidator: true });\n          return { confirmedValidator: true };\n        } else {\n          matchingInput.setErrors(null);\n          return null;\n        }\n      } else {\n        return null;\n      }\n    };\n  };\n\n  public constructor(\n    private fb: FormBuilder,\n    private authenticationService: AuthenticationService,\n    private _snackBar: MatSnackBar,\n    private msgService: MessageService,\n    private router: Router,\n  ) {\n    this.registerForm = this.fb.group({\n      name: new FormControl('', Validators.required),\n      surname: new FormControl('', Validators.required),\n      password: new FormControl('', [\n        Validators.minLength(8),\n        Validators.required,\n        Validators.pattern(AuthenticationComponent.PASSWORD_REGEXP),\n      ]),\n      passwordConfirm: new FormControl('', [\n        Validators.minLength(8),\n        Validators.required,\n        AuthenticationComponent.confirmed('password', 'passwordConfirm'),\n        Validators.pattern(AuthenticationComponent.PASSWORD_REGEXP),\n      ]),\n      email: new FormControl('', [Validators.email, Validators.required]),\n      emailConfirm: new FormControl('', [\n        Validators.email,\n        Validators.required,\n        AuthenticationComponent.confirmed('email', 'emailConfirm'),\n      ]),\n      phone: new FormControl('', [\n        Validators.required,\n        Validators.minLength(10),\n        Validators.maxLength(10),\n      ]),\n    });\n    this.loginForm = this.fb.group({\n      email: new FormControl('', [Validators.email, Validators.required]),\n      password: new FormControl('', [\n        Validators.minLength(8),\n        Validators.required,\n        Validators.pattern(AuthenticationComponent.PASSWORD_REGEXP),\n      ]),\n    });\n  }\n\n  public ngOnInit(): void {\n    this.authenticationService\n      .getAuthStatusListener()\n      .subscribe((authStatus) => {\n        this.wrongId = !authStatus;\n      });\n      this.authenticationService\n      .getIsActivated()\n      .subscribe((isActivated) => {\n        this.isActivated = isActivated;\n      });\n  }\n\n  public ngAfterViewInit(): void {\n    Common.loadScript('../assets/js/login-background.js');\n  }\n\n  /**\n   * Connexion utilisateur\n   */\n  public login(): void {\n    const user: AuthenticationDataModel = new AuthenticationDataModel();\n    user.email = this.loginForm.value.email;\n    user.password = this.loginForm.value.password;\n    this.authenticationService.login(user);\n\n  }\n\n  /**\n   * Inscription utlisateur\n   */\n  public register(): void {\n    const user: AuthenticationDataModel = new AuthenticationDataModel();\n    user.name = this.registerForm.value.name;\n    user.surname = this.registerForm.value.surname;\n    user.email = this.registerForm.value.email;\n    user.password = this.registerForm.value.password;\n    user.telephone = this.registerForm.value.phone;\n    this.authenticationService.createUser(user).subscribe(response => {\n      this.router.navigate(['/']);\n      this.openSnackBar('success', 'Demande de création de compte enregistrée');\n      this.toggleRegisterForm();\n    });\n  }\n\n  /**\n   * Inverse la valeur pour passer du formulaire d'inscription à celui de connexion\n   * Et réinitialisation des formulaires\n   */\n  public toggleRegisterForm(): void {\n    if (this.isRegisterForm) {\n      this.registerForm.reset();\n    } else if (!this.isRegisterForm) {\n      this.loginForm.reset();\n      this.wrongId = false;\n      this.isActivated = false;\n    }\n    this.isRegisterForm = !this.isRegisterForm;\n  }\n\n  public openSnackBar(type: string, message: string): void {\n    this.msgService.snackbar(message, type);\n  }\n\n  public sendForm(event: KeyboardEvent): void {\n    if (\n      event.code &&\n      (event.code.toLowerCase() === 'enter' ||\n        event.code.toLowerCase() === 'numpadenter') &&\n      !this.isRegisterForm\n    ) {\n      this.login();\n    } else if (\n      event.code &&\n      (event.code.toLowerCase() === 'enter' ||\n        event.code.toLowerCase() === 'numpadenter') &&\n      this.isRegisterForm\n    ) {\n      this.register();\n    }\n  }\n\n  public redirectToPasswordReset(event: any): void {\n    if (event.pointerType === 'mouse') {\n      this.router.navigate(['/resetPassword']);\n    }\n  }\n\n  IsMobile() {\n    Device.definedUseDevice('auth-container');\n    return Device.isMobileDevice();\n  }\n}\n","<div *ngIf=\"IsMobile()\"></div>\n<div id=\"auth-container\">\n  <div id=\"wrapper\" class=\"wrapper\">\n    <canvas #canvas></canvas>\n    <div id=\"container\" class=\"container\">\n      <span id=\"app-name\" class=\"app-name\"> INFINIX FLEET </span>\n      <mat-card\n        id=\"authentication\"\n        class=\"authentification\"\n        *ngIf=\"!isRegisterForm\"\n      >\n        <mat-card-header>\n          <mat-card-title>Connexion</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <form\n            class=\"login-form-group\"\n            [formGroup]=\"loginForm\"\n            (keydown)=\"sendForm($event)\"\n          >\n            <mat-form-field class=\"login-wrapper\">\n              <mat-label>Adresse mail</mat-label>\n              <input matInput id=\"login\" formControlName=\"email\" />\n              <mat-error\n                *ngIf=\"\n                  loginFormControls.email.touched &&\n                  loginFormControls.email.invalid &&\n                  loginFormControls.email.errors?.required\n                \"\n                class=\"alert alert-danger\"\n              >\n                Adresse mail requise.\n              </mat-error>\n              <mat-error\n                *ngIf=\"\n                  loginFormControls.email.touched &&\n                  loginFormControls.email.invalid &&\n                  loginFormControls.email.errors?.email\n                \"\n                class=\"alert alert-danger\"\n              >\n                Le format de l'adresse mail n'est pas correct.\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"password-wrapper\">\n              <mat-label>Mot de passe</mat-label>\n              <input\n                matInput\n                type=\"password\"\n                id=\"password\"\n                formControlName=\"password\"\n              />\n              <mat-error\n                *ngIf=\"\n                  loginFormControls.password.touched &&\n                  loginFormControls.password.invalid &&\n                  loginFormControls.password.errors?.required\n                \"\n                class=\"alert alert-danger\"\n              >\n                Mot de passe requis.\n              </mat-error>\n              <mat-error\n                *ngIf=\"\n                  loginFormControls.password.touched &&\n                  loginFormControls.password.invalid &&\n                  loginFormControls.password.errors?.pattern\n                \"\n                class=\"alert alert-danger\"\n              >\n                Le mot de passe doit contenir au moins 8 caractères dont une\n                lettre minuscule, une lettre majuscule, un chiffre et un\n                caractère spécial.\n              </mat-error>\n            </mat-form-field>\n            <div\n              style=\"\n                width: 100%;\n                height: auto;\n                display: flex;\n                justify-content: flex-end;\n              \"\n            >\n              <button mat-button (click)=\"redirectToPasswordReset($event)\">\n                Mot de passe oublié ?\n              </button>\n            </div>\n          </form>\n          <div class=\"error\" *ngIf=\"wrongId\">\n            Les identifiants de connexion sont incorrects\n          </div>\n          <div class=\"error\" *ngIf=\"!isActivated\">\n            Votre compte n'est pas activé\n          </div>\n          <button\n            mat-raised-button\n            color=\"primary\"\n            class=\"connect-button\"\n            (click)=\"login()\"\n            #loginButton\n          >\n            Connexion\n          </button>\n          <button\n            mat-button\n            class=\"create-account-button\"\n            (click)=\"toggleRegisterForm()\"\n          >\n            Créer un compte\n          </button>\n        </mat-card-content>\n      </mat-card>\n      <mat-card id=\"register\" class=\"register\" *ngIf=\"isRegisterForm\">\n        <mat-card-header>\n          <mat-card-title>Création de compte</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <form\n            class=\"register-form-group\"\n            [formGroup]=\"registerForm\"\n            (keydown)=\"sendForm($event)\"\n          >\n            <mat-form-field>\n              <mat-label>Nom</mat-label>\n              <input matInput id=\"surname\" formControlName=\"surname\" />\n              <mat-error\n                *ngIf=\"\n                  registerFormControls.surname.touched &&\n                  registerFormControls.surname.invalid &&\n                  registerFormControls.surname.errors?.required\n                \"\n                class=\"alert alert-danger\"\n              >\n                Nom requis.\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Prénom</mat-label>\n              <input matInput id=\"name\" formControlName=\"name\" />\n              <mat-error\n                *ngIf=\"\n                  registerFormControls.name.touched &&\n                  registerFormControls.name.invalid &&\n                  registerFormControls.name.errors?.required\n                \"\n                class=\"alert alert-danger\"\n              >\n                Prénom requis.\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Adresse mail</mat-label>\n              <input matInput id=\"email\" formControlName=\"email\" />\n              <mat-error\n                *ngIf=\"\n                  registerFormControls.email.touched &&\n                  registerFormControls.email.invalid &&\n                  registerFormControls.email.errors?.required\n                \"\n                class=\"alert alert-danger\"\n              >\n                Adresse mail requise.\n              </mat-error>\n              <mat-error\n                *ngIf=\"\n                  registerFormControls.email.touched &&\n                  registerFormControls.email.invalid &&\n                  registerFormControls.email.errors?.email\n                \"\n                class=\"alert alert-danger\"\n              >\n                Le format de l'adresse mail n'est pas correct.\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Confirmez votre adresse mail</mat-label>\n              <input\n                matInput\n                id=\"emailConfirm\"\n                formControlName=\"emailConfirm\"\n              />\n              <mat-error\n                *ngIf=\"\n                  registerFormControls.emailConfirm.touched &&\n                  registerFormControls.emailConfirm.invalid &&\n                  registerFormControls.emailConfirm.errors?.required\n                \"\n                class=\"alert alert-danger\"\n              >\n                Adresse mail requise.\n              </mat-error>\n              <mat-error\n                *ngIf=\"\n                  registerFormControls.emailConfirm.touched &&\n                  registerFormControls.emailConfirm.invalid &&\n                  registerFormControls.emailConfirm.errors?.confirmedValidator\n                \"\n              >\n                Les adresses mail ne correspondent pas.\n              </mat-error>\n              <mat-error\n                *ngIf=\"\n                  registerFormControls.emailConfirm.touched &&\n                  registerFormControls.emailConfirm.invalid &&\n                  registerFormControls.emailConfirm.errors?.email\n                \"\n                class=\"alert alert-danger\"\n              >\n                Le format de l'adresse mail n'est pas correct.\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Mot de passe</mat-label>\n              <input\n                matInput\n                type=\"password\"\n                id=\"password\"\n                formControlName=\"password\"\n              />\n              <mat-error\n                *ngIf=\"\n                  registerFormControls.password.touched &&\n                  registerFormControls.password.invalid &&\n                  registerFormControls.password.errors?.required\n                \"\n                class=\"alert alert-danger\"\n              >\n                Mot de passe requis.\n              </mat-error>\n              <mat-error\n                *ngIf=\"\n                  registerFormControls.password.touched &&\n                  registerFormControls.password.invalid &&\n                  registerFormControls.password.errors?.pattern\n                \"\n                class=\"alert alert-danger\"\n              >\n                Le mot de passe doit contenir au moins 8 caractères dont une\n                lettre minuscule, une lettre majuscule, un chiffre et un\n                caractère spécial.\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Confirmez votre mot de passe</mat-label>\n              <input\n                matInput\n                type=\"password\"\n                id=\"passwordConfirm\"\n                formControlName=\"passwordConfirm\"\n              />\n              <mat-error\n                *ngIf=\"\n                  registerFormControls.passwordConfirm.touched &&\n                  registerFormControls.passwordConfirm.invalid &&\n                  registerFormControls.passwordConfirm.errors?.required\n                \"\n                class=\"alert alert-danger\"\n              >\n                Mot de passe requis.\n              </mat-error>\n              <mat-error\n                *ngIf=\"\n                  registerFormControls.passwordConfirm.touched &&\n                  registerFormControls.passwordConfirm.invalid &&\n                  registerFormControls.passwordConfirm.errors\n                    ?.confirmedValidator\n                \"\n              >\n                Les mots de passe ne correspondent pas.\n              </mat-error>\n              <mat-error\n                *ngIf=\"\n                  registerFormControls.passwordConfirm.touched &&\n                  registerFormControls.passwordConfirm.invalid &&\n                  registerFormControls.passwordConfirm.errors?.pattern\n                \"\n                class=\"alert alert-danger\"\n              >\n                Le mot de passe doit contenir au moins 8 caractères dont une\n                lettre minuscule, une lettre majuscule, un chiffre et un\n                caractère spécial.\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Téléphone</mat-label>\n              <input matInput id=\"phone\" formControlName=\"phone\" />\n              <mat-error\n                *ngIf=\"\n                  registerFormControls.phone.touched &&\n                  registerFormControls.phone.invalid &&\n                  registerFormControls.phone.errors?.required\n                \"\n                class=\"alert alert-danger\"\n              >\n                Numéro de téléphone requis.\n              </mat-error>\n            </mat-form-field>\n          </form>\n          <button\n            mat-raised-button\n            color=\"primary\"\n            class=\"connect-button\"\n            (click)=\"register()\"\n            #registerButton\n          >\n            Créer mon compte\n          </button>\n          <button\n            mat-button\n            class=\"already-existing-account\"\n            (click)=\"toggleRegisterForm()\"\n          >\n            J'ai déjà un compte\n          </button>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</div>\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { LoanModalComponent } from './loan-modal/loan-modal.component';\nimport { CloseLoanModalComponent } from './close-loan-modal/close-loan-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatOptionSelectionChange } from '@angular/material/core';\nimport { MessageService } from '../common/services/message.service';\nimport { LoanService } from './loan.service';\nimport { LoanDataModel } from './loan.data.model';\nimport { StatusModel } from '../common/models/StatusModel';\nimport { StatusService } from '../common/services/status.service';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport * as moment from 'moment';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { StatusEnum } from '../common/models/status.enum';\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { FamilyStatusEnum } from '../common/models/familyStatus.enum';\nimport { Device } from '../common/device';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-loan',\n  templateUrl: './loan.component.html',\n  styleUrls: ['./loan.component.less'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed, void', style({ height: '0px' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed',\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n      transition('expanded <=> void',\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))]),\n  ],\n})\nexport class LoanComponent implements OnInit {\n  @ViewChild(MatSort) sort: MatSort;\n\n  public loans: LoanDataModel[] = [];\n\n  /**\n   * FormGroup des filtres\n   */\n  public filterForm: FormGroup;\n\n  public columnsToDisplay: string[] = ['status', 'driver', 'departureSite', 'arrivalSite', 'startDate', 'endDate', 'actions'];\n\n  public columsName: {\n    [status: string]: string;\n    driver: string;\n    departureSite: string;\n    arrivalSite: string;\n    startDate: string;\n    endDate: string;\n  } = {\n      status: 'Statut',\n      driver: 'Conducteur',\n      departureSite: 'site de départ',\n      arrivalSite: 'site d\\'arrivé',\n      startDate: 'Date du prêt',\n      endDate: 'Date de rendu'\n    };\n\n  public expandedElement: LoanDataModel | null;\n\n  public status: StatusModel[] = [];\n\n  public dataSource: MatTableDataSource<any>;\n\n  public filters: { search: string, start: Date, end: Date };\n\n  public isAdmin: boolean = false;\n\n  public statusId: string;\n\n  public notificationCountBookingUser: number = 0;\n\n  constructor(public dialog: MatDialog,\n    private msgService: MessageService,\n    private loanService: LoanService,\n    private statusService: StatusService,\n    private fb: FormBuilder,\n    private authService: AuthenticationService,\n    private activatedRoute: ActivatedRoute\n  ) {\n    this.isAdmin = this.authService.getIsAdmin();\n    this.filterForm = this.fb.group({\n      search: new FormControl('', []),\n      start: new FormControl('', []),\n      end: new FormControl('', []),\n      status: new FormControl('Tous', [])\n    });\n  }\n\n\n  public ngOnInit(): void {\n    this.fetchLoans();\n  }\n\n  public fetchLoans(): void {\n    const localStorageUser: string = localStorage.getItem('connectedUser') || '';\n    const connectedUser = JSON.parse(localStorageUser);\n\n\n    //récupération du statusId\n    this.activatedRoute.params.subscribe((param) => {\n      this.statusId = param['statusId'];\n    });\n\n    this.statusService.getStatusByFamilyStatus(FamilyStatusEnum.bookingsFamily).subscribe(status => {\n      this.status = [];\n      const statusAll: StatusModel = new StatusModel();\n      statusAll.label = 'Tous';\n      this.status.push(statusAll);\n      status.forEach(stat => {\n        this.status.push(stat);\n      });\n    });\n\n    this.loanService.getAllLoans(connectedUser).subscribe(loan => {\n      this.loans = loan;\n      this.dataSource = new MatTableDataSource(this.loans);\n      this.dataSource.filterPredicate = (data, filters: string) => {\n        let ret: boolean = false;\n        let retDate: boolean = false;\n        let retStatus: boolean = false;\n        const filterArray = filters.split('¤');\n        if (filterArray[0] && filterArray[0].split('|')[0] !== '') {\n          const accumulator = (currentTerm: any, key: any) => {\n            return this.nestedFilterCheck(currentTerm, data, key);\n          };\n          const dataStr = Object.keys(data).reduce(accumulator, '').toLowerCase();\n          ret = dataStr.indexOf(filterArray[0].split('|')[0]) !== -1;\n        } else {\n          ret = true;\n        }\n        if (filterArray[1] && filterArray[1].split('|')[0] !== '' || filterArray[2] && filterArray[2].split('|')[0] !== '') {\n          if (this.filterForm.controls['start'].value && this.filterForm.controls['end'].value) {\n            if (data.endDate) {\n              retDate = this.filterForm.controls['end'].value.toDate().getTime() >= moment(data.endDate).toDate().getTime() &&\n                this.filterForm.controls['start'].value.toDate().getTime() <= moment(data.startDate).toDate().getTime();\n            } else {\n              retDate = this.filterForm.controls['start'].value.toDate().getTime() <= moment(data.startDate).toDate().getTime();\n            }\n          } else if (this.filterForm.controls['start'].value &&\n            (!this.filterForm.controls['end'].value ||\n              this.filterForm.controls['end'].value === '')) {\n            retDate = this.filterForm.controls['start'].value.toDate().getTime() <= moment(data.startDate).toDate().getTime();\n          } else if (this.filterForm.controls['end'].value &&\n            (!this.filterForm.controls['start'].value ||\n              this.filterForm.controls['start'].value === '')) {\n            if (data.endDate) {\n              retDate = this.filterForm.controls['end'].value.toDate().getTime() >= moment(data.endDate).toDate().getTime();\n            } else {\n              retDate = true;\n            }\n          } else {\n            retDate = true;\n          }\n        } else {\n          retDate = true;\n        }\n        if (filterArray[3] && filterArray[3] !== '' && filterArray[3] !== 'Tous') {\n          retStatus = data.status.label === filterArray[3];\n        } else {\n          retStatus = true;\n        }\n        return [ret, retDate, retStatus].every(Boolean);\n      };\n\n      this.status.forEach((statusElement) => {\n        if (statusElement.id === Number(this.statusId)) {\n          this.filterManuallyByStatus(statusElement.label);\n          this.filterForm.controls['status'].setValue(statusElement.label);\n\n        }\n      });\n\n      this.dataSource.sort = this.sort;\n    });\n\n  }\n\n  public nestedFilterCheck(search: any, data: any, key: any): any {\n    if (typeof data[key] === 'object') {\n      for (const k in data[key]) {\n        if (data[key][k] !== null) {\n          search = this.nestedFilterCheck(search, data[key], k);\n        }\n      }\n    } else if (key !== 'startDate' && key !== 'endDate') {\n      search += data[key];\n    }\n    return search;\n  }\n\n  /**\n   * Applique le filtre saisie\n   * @param event\n   */\n  public applySearchFilter(event: Event): void {\n    this.dataSource.filter = `${this.filterForm.controls['search'].value}|true¤${this.filterForm.controls['start'].value?.toString()}|¤${this.filterForm.controls['end'].value?.toString()}|¤${this.filterForm.controls['status'].value?.toString()}`;\n  }\n\n  /**\n   * Applique le filtre saisie\n   * @param event\n   */\n  public applyDateFilter(event: MatDatepickerInputEvent<any>): void {\n    const elementName: string | null = (event.targetElement as HTMLInputElement).getAttribute('formcontrolname');\n    if (elementName && elementName === 'start') {\n      this.dataSource.filter = `${this.filterForm.controls['search'].value}|¤${this.filterForm.controls['start'].value?.toString()}|true¤${this.filterForm.controls['end'].value?.toString()}|¤${this.filterForm.controls['status'].value?.toString()}`;\n    } else if (elementName && elementName === 'end') {\n      this.dataSource.filter = `${this.filterForm.controls['search'].value}|¤${this.filterForm.controls['start'].value?.toString()}|¤${this.filterForm.controls['end'].value?.toString()}|true¤${this.filterForm.controls['status'].value?.toString()}`;\n    }\n  }\n\n  /**\n   * Ouverture de la modale de réservation\n   * @param isReadOnly En lecture seule ou non\n   * @param mode Mode d'ouverture\n   * @param loan\n   */\n  public openLoanModal(mode: string, loan: LoanDataModel | null): void {\n    const dialogRef = this.dialog.open(LoanModalComponent, {\n      data: { mode: mode, loan: loan }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result && result.saved) {\n        this.loanService.createLoan(result.loan).subscribe(response => {\n          this.msgService.snackbar('Demande de réservation enregistrée', 'success');\n          this.fetchLoans();\n        });\n      }\n    });\n  }\n\n  /**\n * Ouverture de la modale de Cloture\n * @param isReadOnly En lecture seule ou non\n * @param mode Mode d'ouverture\n * @param loan\n */\n  public openCloseLoanModal(loan: LoanDataModel | null): void {\n    const dialogRef = this.dialog.open(CloseLoanModalComponent, {\n      data: { loan: loan }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result && result.saved) {\n        this.loanService.updateLoanForClose(result.loan).subscribe(response => {\n          this.msgService.snackbar('Réservation cloturée', 'success');\n          this.fetchLoans();\n        });\n      }\n    });\n  }\n\n  /**\n   * Filtrer le tableau par la colonne statut\n   * @param status\n   */\n  public filterByStatus(status: MatOptionSelectionChange): void {\n    if (status.isUserInput) {\n      if (status.source.value === 'Tous') {\n        this.dataSource.filter = `${this.filterForm.controls['search'].value}|¤${this.filterForm.controls['start'].value?.toString()}|¤${this.filterForm.controls['end'].value?.toString()}|¤Tous`;\n      } else {\n        this.dataSource.filter = `${this.filterForm.controls['search'].value}|¤${this.filterForm.controls['start'].value?.toString()}|¤${this.filterForm.controls['end'].value?.toString()}|¤${status.source.value}`;\n      }\n    }\n  }\n\n  /**\n * Filtrer manuellement le tableau par la colonne statut\n * @param status\n */\n  public filterManuallyByStatus(status: string): void {\n    if (status === 'Tous') {\n      this.dataSource.filter = `${this.filterForm.controls['search'].value}|¤${this.filterForm.controls['start'].value?.toString()}|¤${this.filterForm.controls['end'].value?.toString()}|¤Tous`;\n    } else {\n      this.dataSource.filter = `${this.filterForm.controls['search'].value}|¤${this.filterForm.controls['start'].value?.toString()}|¤${this.filterForm.controls['end'].value?.toString()}|¤${status}`;\n    }\n  }\n\n  /**\n   * Clôture du prêt\n   * @param loan Prêt à clôturer\n   */\n  public closeLoan(loan: LoanDataModel): void {\n    this.msgService.confirm('Êtes-vous sûr(e) de vouloir clôturer cette réservation ?').subscribe(response => {\n      if (response) {\n        loan.status.id = 3;\n        loan.status.label = StatusEnum.ended;\n        this.loanService.updateLoan(loan).subscribe(res => {\n          this.msgService.snackbar('Réservation clôturée');\n        });\n      }\n    });\n  }\n\n  /**\n   * Annulation du prêt\n   * @param loan Prêt à annuler\n   */\n  public cancelLoan(loan: LoanDataModel): void {\n    this.msgService.confirm('Êtes-vous sûr(e) de vouloir annuler cette réservation ?').subscribe(response => {\n      if (response) {\n        loan.status.id = 6;\n        loan.status.label = StatusEnum.canceled;\n        this.loanService.updateLoan(loan).subscribe(res => {\n          this.msgService.snackbar('Réservation annulée');\n        });\n      }\n    });\n  }\n\n  /**\n   * Ouvre la modal du prêt en mode validation\n   * @param loan Prêt à valider\n   */\n  public validateLoan(loan: LoanDataModel): void {\n    const dialogRef = this.dialog.open(LoanModalComponent, {\n      data: { mode: 'validate', loan: loan }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result && result.saved) {\n        result.loan.status.id = 4;\n        result.loan.status.label = StatusEnum.validated;\n        this.loanService.updateLoan(result.loan).subscribe(response => {\n          this.msgService.snackbar('Réservation validée');\n          this.loans.forEach(loan => {\n            if (loan.id === result.loan.id) {\n              this.loans[this.loans.indexOf(loan)] = result.loan;\n            }\n          });\n          this.dataSource = new MatTableDataSource(this.loans);\n          this.dataSource.sort = this.sort;\n        });\n      }\n    });\n  }\n\n  /**\n   * Ouvre la modale de modification d'un prêt\n   * @param loan Prêt à modifier\n   */\n  public updateLoan(loan: LoanDataModel): void {\n    const dialogRef = this.dialog.open(LoanModalComponent, {\n      data: { mode: 'update', loan: loan }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result && result.saved) {\n        this.loanService.updateLoan(result.loan).subscribe(response => {\n          this.msgService.snackbar('Modification de la réservation enregistrée');\n          this.loans.forEach(loan => {\n            if (loan.id === result.loan.id) {\n              this.loans[this.loans.indexOf(loan)] = result.loan;\n            }\n          });\n          this.dataSource = new MatTableDataSource(this.loans);\n          this.dataSource.sort = this.sort;\n        });\n      }\n    });\n  }\n\n  /**\n   * Retourne la date de fin du filtre\n   */\n  public getMaxDate(): Date | string {\n    if (this.filterForm.controls['end'].value !== '' && this.filterForm.controls['end'].value) {\n      return this.filterForm.controls['end'].value.toDate();\n    }\n    return '';\n  }\n\n  /**\n   * Retourne la date de début du filtre\n   */\n  public getMinDate(): Date | string {\n    if (this.filterForm.controls['start'].value !== '' && this.filterForm.controls['start'].value) {\n      return this.filterForm.controls['start'].value.toDate();\n    }\n    return '';\n  }\n\n  /**\n   * Retourne la valeur par défaut à afficher dans le select des états\n   */\n  public getDefaultSelectValue(): string {\n    if (this.status.length > 0 && this.status[0].label) {\n      return this.status[0].label;\n    }\n    return '';\n  }\n\n  /**\n   * Gestion des états des boutons\n   */\n\n  /**\n   * Affiche ou non le bouton pour clôturer la réservation\n   * @param loan Réservation\n   */\n  public isEndDatePassed(loan: LoanDataModel): boolean {\n    let ret: boolean = false;\n    if (loan && loan.endDate) {\n      if (new Date(loan.endDate) < new Date()) {\n        ret = true;\n      }\n    }\n    return ret;\n  }\n\n  /**\n   * Est-ce que le prêt est actif\n   * @param loan Réservation\n   */\n  public isLoanActive(loan: LoanDataModel): boolean {\n    let ret: boolean = false;\n    if (loan && loan.startDate) {\n      if (new Date(loan.startDate) < new Date()) {\n        ret = true;\n      }\n    }\n    return ret;\n  }\n\n  /**\n   * Est-ce que le prêt est en cours\n   * @param loan Réservation\n   */\n  public isLoanRunning(loan: LoanDataModel): boolean {\n    let ret: boolean = false;\n    if (loan.status.label === StatusEnum.running) {\n      ret = true;\n    }\n    return ret;\n  }\n\n  /**\n   * Est-ce que le prêt est en attente de validation\n   * @param loan Réservation\n   */\n  public isAwaitingValidation(loan: LoanDataModel): boolean {\n    let ret: boolean = false;\n    if (loan.status.label === StatusEnum.awaitingValidation) {\n      ret = true;\n    }\n    return ret;\n  }\n\n  /**\n   * Est-ce que le prêt est validé\n   * @param loan Réservation\n   */\n  public isLoanValidated(loan: LoanDataModel): boolean {\n    let ret: boolean = false;\n    if (loan.status.label === StatusEnum.validated) {\n      ret = true;\n    }\n    return ret;\n  }\n\n  /**\n   * Est-ce que le prêt est annulé\n   * @param loan Réservation\n   */\n  public isLoanCanceled(loan: LoanDataModel): boolean {\n    let ret: boolean = false;\n    if (loan.status.label === StatusEnum.canceled) {\n      ret = true;\n    }\n    return ret;\n  }\n\n  /**\n   * Est-ce que le prêt est clôturée\n   * @param loan Réservation\n   */\n  public isLoanClosed(loan: LoanDataModel): boolean {\n    let ret: boolean = false;\n    if (loan.status.label === StatusEnum.ended) {\n      ret = true;\n    }\n    return ret;\n  }\n\n  /**\n   * Est-ce que le prêt est en retard\n   * @param loan Réservation\n   */\n  public isLoanLate(loan: LoanDataModel): boolean {\n    let ret: boolean = false;\n    if (loan.status.label === StatusEnum.late) {\n      ret = true;\n    }\n    return ret;\n  }\n\n  /**\n   * Est-ce que le bouton de modification est actif\n   * @param loan Réservation\n   */\n  public isUpdateButtonActive(loan: LoanDataModel): boolean {\n    return !this.isLoanActive(loan) && !this.isLoanValidated(loan) && !this.isLoanCanceled(loan) && !this.isLoanClosed(loan) && !this.isLoanRunning(loan) && !this.isLoanLate(loan);\n  }\n\n  /**\n   * Est-ce que le bouton de consultation est actif\n   * @param loan Réservation\n   */\n  public isReadButtonActive(loan: LoanDataModel): boolean {\n    return !this.isUpdateButtonActive(loan);\n  }\n\n  /**\n   * Est-ce que le bouton de clôture est actif\n   * @param loan Réservation\n   */\n  public isCloseLoanButtonActive(loan: LoanDataModel): boolean {\n    return this.isLoanRunning(loan) || this.isLoanLate(loan);\n  }\n\n  /**\n   * Est-ce que le bouton d'annulation est actif\n   * @param loan Réservation\n   */\n  public isCancelButtonActive(loan: LoanDataModel): boolean {\n    return (this.isAwaitingValidation(loan) || this.isLoanValidated(loan)) && !this.isEndDatePassed(loan) && !this.isLoanActive(loan);\n  }\n\n  IsMobile() {\n    Device.definedUseDevice('loan-container');\n    return Device.isMobileDevice();\n  }\n\n}\n","<div *ngIf=\"IsMobile()\"></div>\n<div id=\"loan-container\" class=\"loan-container\">\n  <div id=\"wrapper\" class=\"wrapper\">\n    <div id=\"container\" class=\"container\">\n      <div class=\"button-add-loan\">\n        <button mat-raised-button color='primary' class='add-loan' (click)=\"openLoanModal('new', null)\">\n          Faire une demande de prêt\n        </button>\n      </div>\n      <mat-card class='wrapper-card'>\n        <mat-card-header class='wrapper-card-header'>\n          <mat-card-title>\n            <form [formGroup]='filterForm'>\n              <div id='filters' class='filters'>\n                <mat-form-field class='item-filter'>\n                  <mat-label>Rechercher</mat-label>\n                  <input matInput id='search' formControlName=\"search\" (keyup)='applySearchFilter($event)' #input>\n                </mat-form-field>\n                <mat-form-field class='item-filter'>\n                  <mat-label>États</mat-label>\n                  <mat-select [value]='getDefaultSelectValue()' formControlName=\"status\">\n                    <mat-option *ngFor='let etat of status' [value]='etat.label'\n                      (onSelectionChange)='filterByStatus($event)'>\n                      {{etat.label}}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field>\n                <mat-form-field class='item-filter'>\n                  <mat-label>Date de début</mat-label>\n                  <input [max]='getMaxDate()' matInput [matDatepicker]='picker' formControlName=\"start\"\n                    (dateChange)='applyDateFilter($event)'>\n                  <mat-datepicker-toggle matSuffix [for]='picker'></mat-datepicker-toggle>\n                  <mat-datepicker #picker></mat-datepicker>\n                </mat-form-field>\n                <mat-form-field class='item-filter'>\n                  <mat-label>Date de fin</mat-label>\n                  <input [min]='getMinDate()' matInput [matDatepicker]='picker2' formControlName=\"end\"\n                    (dateChange)='applyDateFilter($event)'>\n                  <mat-datepicker-toggle matSuffix [for]='picker2'></mat-datepicker-toggle>\n                  <mat-datepicker #picker2></mat-datepicker>\n                </mat-form-field>\n              </div>\n            </form>\n            <mat-divider></mat-divider>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class='wrapper-card-content'>\n          <div class='mat-elevation-z8'>\n            <table mat-table [dataSource]='dataSource' multiTemplateDataRows matSort>\n              <ng-container matColumnDef='{{column}}' *ngFor='let column of columnsToDisplay'>\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{columsName[column]}} </th>\n                <ng-container [ngSwitch]='column'>\n                  <ng-container *ngSwitchCase=\"'status'\" class='status'>\n                    <td mat-cell *matCellDef='let loan'> {{loan.status.label}} </td>\n                  </ng-container>\n                  <ng-container *ngSwitchCase=\"'driver'\" class='driver'>\n                    <td mat-cell *matCellDef='let loan'> {{loan.driver.surname}} {{loan.driver.name}} </td>\n                  </ng-container>\n                  <ng-container *ngSwitchCase=\"'departureSite'\" class='departureSite'>\n                    <td mat-cell *matCellDef='let loan'> {{loan.departureSite.label}} </td>\n                  </ng-container>\n                  <ng-container *ngSwitchCase=\"'arrivalSite'\" class='arrivalSite'>\n                    <td mat-cell *matCellDef='let loan'> {{loan.arrivalSite.label}} </td>\n                  </ng-container>\n                  <ng-container *ngSwitchCase=\"'startDate'\" class='startDate'>\n                    <td mat-cell *matCellDef='let loan'> {{loan[column] | date: 'fullDate' }} </td>\n                  </ng-container>\n                  <ng-container *ngSwitchCase=\"'endDate'\" class='endDate'>\n                    <td mat-cell *matCellDef='let loan'> {{loan[column] | date: 'fullDate' }} </td>\n                  </ng-container>\n                  <ng-container *ngSwitchDefault>\n                    <td mat-cell *matCellDef='let loan' style='text-align: right'>\n                      <mat-icon style='cursor: pointer'>expand_more</mat-icon>\n                    </td>\n                  </ng-container>\n                </ng-container>\n              </ng-container>\n\n              <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n              <ng-container matColumnDef='expandedDetail'>\n                <td mat-cell *matCellDef='let loan' [attr.colspan]='columnsToDisplay.length'>\n                  <div class='element-detail' [@detailExpand]=\"loan == expandedElement ? 'expanded' : 'collapsed'\">\n\n                    <div class='element-description'>\n                      <mat-card class='vehicule-detail'>\n                        <mat-card-header>\n                          <mat-card-title>\n                            <div class='detail-card-title'>\n                              <mat-icon aria-hidden='false' color='primary'>directions_car</mat-icon>\n                              Véhicule\n                            </div>\n                          </mat-card-title>\n                        </mat-card-header>\n                        <mat-card-content>\n                          <div *ngIf='loan.lentVehicule; else noVehicule'>\n                            <div>\n                              Marque : {{ loan.lentVehicule.libelle }}\n                            </div>\n                            <div>\n                              Modèle : {{ loan.lentVehicule.model }}\n                            </div>\n                            <div>\n                              Immatriculation : {{ loan.lentVehicule.immatriculation }}\n                            </div>\n                          </div>\n                          <ng-template #noVehicule>\n                            <div>Aucun véhicule n'est affecté à cette réservation</div>\n                          </ng-template>\n                        </mat-card-content>\n                      </mat-card>\n                      <mat-card class='site-detail'>\n                        <mat-card-header>\n                          <mat-card-title>\n                            <div class='detail-card-title'>\n                              <mat-icon aria-hidden='false' color='primary'>mode_of_travel</mat-icon>\n                              Intinéraire\n                            </div>\n                          </mat-card-title>\n                        </mat-card-header>\n                        <mat-card-content style='display: flex'>\n                          <div *ngIf='loan.departureSite' style='width: 50%'>\n                            <h3>Départ : {{ loan.departureSite.label }}</h3>\n                            <div>\n                              {{ loan.departureSite.adress }}\n                            </div>\n                            <div>\n                              {{ loan.departureSite.postalCode }}, {{ loan.departureSite.city }}\n                            </div>\n                          </div>\n                          <div *ngIf='loan.arrivalSite' style='width: 50%'>\n                            <h3>Arrivé : {{ loan.arrivalSite.label }}</h3>\n                            <div>\n                              {{ loan.arrivalSite.adress }}\n                            </div>\n                            <div>\n                              {{ loan.arrivalSite.postalCode }}, {{ loan.arrivalSite.city }}\n                            </div>\n                          </div>\n                        </mat-card-content>\n                      </mat-card>\n                      <mat-card class='other-detail'>\n                        <mat-card-header>\n                          <mat-card-title>\n                            <div class='detail-card-title'>\n                              <mat-icon aria-hidden='false' color='primary'>info</mat-icon>\n                              Autres\n                            </div>\n                          </mat-card-title>\n                        </mat-card-header>\n                        <mat-card-content>\n                          <div>\n                            <div>Conducteur : {{ loan.driver.surname }} {{ loan.driver.name }}</div>\n                            <!--                        <div>Covoitureur :</div>-->\n                          </div>\n                        </mat-card-content>\n                      </mat-card>\n                    </div>\n                    <div class='button-wrapper'>\n                      <button mat-button color='primary' *ngIf='isUpdateButtonActive(loan)'\n                        (click)=\"this.updateLoan(loan)\">Modifier\n                      </button>\n                      <button mat-button color='primary' *ngIf='isReadButtonActive(loan)'\n                        (click)=\"this.openLoanModal('read', loan)\">Consulter\n                      </button>\n                      <button mat-button color='warn' *ngIf='isCloseLoanButtonActive(loan)'\n                        (click)='openCloseLoanModal(loan)'>\n                        Clôturer\n                      </button>\n                      <button mat-button color='warn' *ngIf='isCancelButtonActive(loan)' (click)='cancelLoan(loan)'>\n                        Annuler\n                      </button>\n                      <button mat-button class='valid-button' *ngIf='isAwaitingValidation(loan) && isAdmin'\n                        (click)='validateLoan(loan)'>Valider\n                      </button>\n                    </div>\n                  </div>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef='columnsToDisplay; sticky: true'></tr>\n              <tr mat-row *matRowDef='let loan; columns: columnsToDisplay;' class='element-row'\n                [class.expanded-row]='expandedElement === loan'\n                (click)='expandedElement = expandedElement === loan ? null : loan'>\n              </tr>\n              <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class='detail-row'></tr>\n              <tr class='mat-row' *matNoDataRow>\n                <td class='mat-cell' colspan='7' style='text-align: center;'>Aucune donnée trouvée</td>\n              </tr>\n            </table>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</div>\n","import { SnackbarComponent } from '../../snackbar/snackbar.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmComponent } from '../../confirm/confirm.component';\nimport { Observable } from 'rxjs';\nimport { AlertComponent } from '../../alert/alert.component';\n\n@Injectable()\nexport class MessageService {\n\n  constructor(private snackBar: MatSnackBar,\n              public dialog: MatDialog) {\n  }\n\n  public snackbar(message: string = 'Succès', type: string = 'success', duration: number = 5000): void {\n    this.snackBar.openFromComponent(SnackbarComponent, {\n      duration: duration,\n      horizontalPosition: 'end',\n      verticalPosition: 'top',\n      data: {\n        message: message,\n        type: type\n      },\n      panelClass: [type]\n    });\n  }\n\n  public confirm(message: string = ''): Observable<any> {\n    const dialogRef = this.dialog.open(ConfirmComponent, {\n      data: { message },\n      maxWidth: '500px'\n    });\n\n    return dialogRef.afterClosed();\n  }\n\n  public alert(message: string = ''): void {\n    this.dialog.open(AlertComponent, {\n      data: { message },\n      maxWidth: '500px'\n    });\n  }\n}\n","import { CdkTextareaAutosize } from '@angular/cdk/text-field';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatOptionSelectionChange } from '@angular/material/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { StatusEnum } from '../common/models/status.enum';\nimport { StatusModel } from '../common/models/StatusModel';\nimport { VehicleService } from '../vehicles-list/vehicle-list.service';\nimport { Vehicle } from '../vehicles-list/vehicle.model';\nimport { SinisterModel } from './sinister.model';\n\n@Component({\n  selector: 'dialog-modal',\n  templateUrl: './sinister-modal.html',\n  styleUrls: ['./sinister-modal.component.less'],\n})\nexport class SinisterModal implements OnInit {\n\n  public sinisterForm: FormGroup;\n\n  public vehicles: Vehicle[] = [];\n\n  public selectedVehicle: Vehicle;\n  \n  public vehicleId: number;\n  constructor(private dialogRef: MatDialogRef<SinisterModal>,\n              private fb: FormBuilder,\n              private vehicleService: VehicleService,\n              @Inject(MAT_DIALOG_DATA) public data: {\n                isReadOnly: boolean;\n                mode: string;\n                sinister: SinisterModel;\n              }){\n                this.sinisterForm = this.fb.group({\n                  vehicle: new FormControl({value: '', disabled: false}, Validators.required),\n                  libelle: new FormControl({value: '', disabled: false}, Validators.required),\n                })\n              }\n\n  ngOnInit() {\n    this.vehicleService.getVehicles().subscribe(vehicles => {\n      this.vehicles = vehicles;\n    });\n  };\n\n  public getVehiculeString(vehicle: Vehicle): string {\n    let ret: string = '';\n    if (vehicle) {\n      ret = `${vehicle.libelle} ${vehicle.model} (${vehicle.immatriculation})`;\n    }\n    return ret;\n  }\n\n  getVehicleSelected(selectedVehicle: Vehicle) : void {\n    this.selectedVehicle = selectedVehicle;\n  }\n\n  public close(saved: boolean = false): void {\n    const sinister: SinisterModel = new SinisterModel();\n    if (saved) {\n      sinister.libelle = this.sinisterForm.controls['libelle'].value;\n      sinister.idVehicle = this.vehicleId;\n      sinister.status = new StatusModel();\n      sinister.status.id = 100;\n      sinister.status.label = StatusEnum.discovered;\n    }\n    this.dialogRef.close({saved: saved, sinister: sinister, selectedVehicle: this.selectedVehicle});\n  }\n\n  public setVehicleId(status: MatOptionSelectionChange, vehicle: Vehicle): void {\n    if (status.isUserInput) {\n      this.vehicleId = vehicle.id;\n    }\n  }\n}","<div id='sinister-modal'>\n  <div class='modal-header'>\n    <div>\n      <h1>Déclaration d'un sinistre</h1>\n    </div>\n    <button mat-icon-button class='close-button' (click)='close(false)'>\n        <mat-icon style='color: rgba(0, 0, 0, 0.54)'>close</mat-icon>\n    </button>\n  </div>\n  <mat-divider></mat-divider>\n  <div class='form-container'>\n    <form [formGroup]='sinisterForm' class='form'>\n      <div>\n        <div>\n          <mat-form-field style='width: 100%'>\n            <mat-label>Véhicule sinistré</mat-label>\n            <input type='text'\n                  aria-label=\"Véhicule sinistré\"\n                  matInput\n                  formControlName='vehicle'\n                  [matAutocomplete]='vehicle'>\n            <mat-icon>arrow_drop_down</mat-icon>\n            <mat-autocomplete #vehicle='matAutocomplete'>\n              <mat-option *ngFor='let vehicle of vehicles' \n                          [value]=\"getVehiculeString(vehicle)\"\n                          (onSelectionChange)='setVehicleId($event, vehicle); getVehicleSelected(vehicle);'>\n                {{ getVehiculeString(vehicle) }}\n              </mat-option>\n            </mat-autocomplete>\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field style=\"width: 100%\">\n            <mat-label>Descriptif du sinistre</mat-label>\n            <textarea matInput\n                      formControlName='libelle'\n                      cdkTextareaAutosize\n                      #autosize=\"cdkTextareaAutosize\"\n                      cdkAutosizeMinRows=\"1\"\n                      cdkAutosizeMaxRows=\"5\"></textarea>\n          </mat-form-field>\n        </div> <!--\n        <div>\n          <mat-form-field style='width: 100%'>\n            <mat-label>Descriptif du sinistre</mat-label>\n            <input type='text'\n                   matInput\n                   formControlName='libelle'>\n          </mat-form-field>\n        </div> -->\n      </div>\n      <div class='actions'>\n        <button mat-stroked-button (click)='close()'>Annuler</button>\n        <button mat-raised-button color='primary'\n                (click)='close(true)'>Valider\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { Vehicle } from \"../vehicle.model\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { LoanService } from \"../../loan/loan.service\";\nimport { LoanDataModel } from \"../../loan/loan.data.model\";\n\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatOptionSelectionChange } from '@angular/material/core';\nimport { StatusModel } from 'src/app/common/models/StatusModel';\n\n@Component({\n    selector: 'dialog-modal',\n    templateUrl: './historicalVehicleModal.html',\n    styleUrls: ['./historical-vehicle.component.less'],\n    animations: [\n      trigger('detailExpand', [\n        state('collapsed, void', style({ height: '0px' })),\n        state('expanded', style({ height: '*' })),\n        transition('expanded <=> collapsed',\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n        transition('expanded <=> void',\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')) ]),\n  ]\n  })\n  export class HistoricalVehicleModal implements OnInit {\n    @ViewChild(MatSort) sort: MatSort;\n\n    public modalVehicle : Vehicle;\n\n    ELEMENT_DATA: LoanDataModel[];\n\n    columnsToDisplay: string[] = ['status', 'driver', 'departureSite', 'startDate', 'endDate', 'actions'];\n\n    columsName: {\n      [status: string]: string;\n      driver: string;\n      departureSite: string;\n      startDate: string;\n      endDate: string; } = {\n      status: 'Statut',\n      driver: 'Conducteur',\n      departureSite: 'Site de départ',\n      startDate: 'Date du prêt',\n      endDate: 'Date de rendu'};\n\n    expandedElement: LoanDataModel | null;\n\n    dataSource: MatTableDataSource<LoanDataModel>;\n\n    public status: StatusModel[] = [];\n\n    constructor(\n      private dialogRef: MatDialogRef<HistoricalVehicleModal>,\n      private loanService: LoanService,\n      @Inject(MAT_DIALOG_DATA) public data: any\n    ){}\n\n    ngOnInit(){\n      this.modalVehicle = this.data.vehicle;\n      if (this.data.vehicle) {\n        this.fetchData(this.modalVehicle.id);\n      }\n    }\n\n    onNoClick(): void {\n      this.dialogRef.close();\n    }\n\n    fetchData(id: number) {\n\n      this.loanService.getAllLoansForVehicle(id).subscribe(bookings => {\n        this.ELEMENT_DATA = bookings;\n        this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n        this.dataSource.sort = this.sort;\n      });\n    }\n\n    /**\n   * Applique le filtre saisie\n   * @param event\n   */\n  public applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Filtrer le tableau par la colonne statut\n   * @param status\n   */\n   public filterByStatus(status: MatOptionSelectionChange): void {\n    if (status.isUserInput) {\n      if (status.source.value === this.status[0]) {\n        this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n      } else {\n        this.dataSource = new MatTableDataSource(this.ELEMENT_DATA.filter(loan => loan.status.label === status.source.value));\n      }\n    }\n  }\n}\n","<mat-card  class=\"wrapper-card\">\n  <mat-card-header class=\"wrapper-card-header\">\n      <mat-card-title>\n          <div id=\"filters\" class=\"filters\">\n              <mat-form-field class=\"login-wrapper\">\n                  <mat-label>Rechercher</mat-label>\n                  <input matInput id=\"search\"(keyup)=\"applyFilter($event)\" #input>\n              </mat-form-field>\n              \n              <mat-form-field>\n                  <mat-label>États</mat-label>\n                  <mat-select [value]='status[0]'>\n                      <mat-option *ngFor=\"let etat of status\" [value]=\"etat\" (onSelectionChange)='filterByStatus($event)'>\n                      {{etat}}\n                      </mat-option>\n                  </mat-select>\n              </mat-form-field>\n          </div>\n          <mat-divider></mat-divider>\n      </mat-card-title>\n  </mat-card-header>\n  <mat-card-content class=\"wrapper-card-content\">\n      <div class=\"mat-elevation-z8\">\n          <table mat-table\n          [dataSource]=\"dataSource\" multiTemplateDataRows\n          matSort>\n              <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplay\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{columsName[column]}} </th>\n                <ng-container [ngSwitch]='column'>\n                  <ng-container *ngSwitchCase=\"'status'\">\n                    <td mat-cell *matCellDef=\"let element\"> {{element.status.label}} </td>\n                  </ng-container>\n                  <ng-container *ngSwitchCase=\"'driver'\">\n                    <td mat-cell *matCellDef=\"let element\"> {{element.driver.surname}} {{element.driver.name}} </td>\n                  </ng-container>\n                  <ng-container *ngSwitchCase=\"'departureSite'\">\n                    <td mat-cell *matCellDef=\"let element\"> {{element.departureSite.label}} </td>\n                  </ng-container>\n                  <ng-container *ngSwitchCase=\"'startDate'\">\n                    <td mat-cell *matCellDef=\"let element\"> {{element[column] | date: 'fullDate' }} </td>\n                  </ng-container>\n                  <ng-container *ngSwitchCase=\"'endDate'\">\n                    <td mat-cell *matCellDef=\"let element\"> {{element[column] | date: 'fullDate' }} </td>\n                  </ng-container>\n                  <ng-container *ngSwitchDefault>\n                    <td mat-cell *matCellDef=\"let element\" style=\"text-align: right\"> <mat-icon style=\"cursor: pointer\">expand_more</mat-icon> </td>\n                  </ng-container>\n                </ng-container>\n              </ng-container>\n\n              <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n              <ng-container matColumnDef=\"expandedDetail\">\n                  <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n                  <div class='element-detail'\n                          [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                    \n                    <div class='element-description'>\n                      <mat-card class='site-detail'>\n                        <mat-card-header>\n                          <mat-card-title>\n                            <div class=\"detail-card-title\">\n                              <mat-icon aria-hidden=\"false\" color='primary'>home_work</mat-icon>\n                              Intinéraire\n                            </div>\n                          </mat-card-title>\n                        </mat-card-header>\n                        <mat-card-content>\n                          <div *ngIf='element.site; else noSite'>\n                            Départ :\n                            {{ element.site.adress }}\n                            {{ element.site.postalCode }}\n                            {{ element.site.city }}\n                          </div>\n                          <ng-template #noSite>\n                            <div>Aucun véhicule n'est affecté à cette réservation</div>\n                          </ng-template>\n                          <div>\n                            Arrivée :\n                          </div>\n                        </mat-card-content>\n                      </mat-card>\n                      <mat-card class='other-detail'>\n                        <mat-card-header>\n                          <mat-card-title>\n                            <div class=\"detail-card-title\">\n                              <mat-icon aria-hidden=\"false\" color='primary'>info</mat-icon>\n                              Autres\n                            </div>\n                          </mat-card-title>\n                        </mat-card-header>\n                        <mat-card-content>\n                          <div>\n                            <div>Conducteur : {{ element.driver.surname }} {{ element.driver.name }}</div>\n                           <!-- <div>Covoitureur :</div>-->\n                          </div> \n                        </mat-card-content>\n                      </mat-card>\n                    </div>\n                    \n                  </div>\n                  </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay; sticky: true\"></tr>\n              <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\"\n                  class='element-row'\n                  [class.expanded-row]=\"expandedElement === element\"\n                  (click)=\"expandedElement = expandedElement === element ? null : element\">\n              </tr>\n              <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class='detail-row'></tr>\n              <tr class=\"mat-row\" *matNoDataRow>\n<!--                        <td class=\"mat-cell\" colspan=\"4\">Aucune donnée ne correspond à  \"{{input.value}}\"</td>-->\n                  <td class=\"mat-cell\" colspan=\"4\">Aucune donnée trouvée</td>\n              </tr>\n          </table>\n      </div>\n  </mat-card-content>\n</mat-card>\n","import { autoserializeAs } from 'cerialize';\nimport { StatusModel } from '../common/models/StatusModel';\n\nexport class SinisterModel {\n  @autoserializeAs('id')\n  id: number;\n  @autoserializeAs('libelle')\n  libelle: string;\n  @autoserializeAs('status')\n  status: StatusModel;\n  @autoserializeAs('idVehicle')\n  idVehicle: number;\n  @autoserializeAs('createdAt')\n  createdAt: Date;\n  @autoserializeAs('updatedAt')\n  updatedAt: Date;\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ArchivedSinistersComponent } from './archived-sinisters.component';\nimport { MatCardModule } from '@angular/material/card';\n\n@NgModule({\n  declarations: [\n    ArchivedSinistersComponent,\n  ],\n  imports: [\n    BrowserModule,\n    MatCardModule\n  ],\n  exports: [ArchivedSinistersComponent],\n  providers: [],\n  bootstrap: [ArchivedSinistersComponent],\n})\nexport class ArchivedSinistersModule {\n}\n","import { ViewChild } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { SiteDataModel } from './site.model';\nimport { SiteService } from './sitesList.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SiteModalComponent } from './site-modal/site-modal.component';\nimport { MessageService } from '../common/services/message.service';\nimport { MatSort } from '@angular/material/sort';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-sites',\n  templateUrl: './sitesList.component.html',\n  styleUrls: ['./sitesList.component.less'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0px' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed',\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n      transition('expanded <=> collapsed',\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))]),\n  ],\n})\nexport class SitesListComponent implements OnInit {\n  @ViewChild(MatSort) sort: MatSort;\n\n  sites: SiteDataModel[];\n  columnsToDisplay: string[] = ['label', 'adress', 'postalCode', 'city', 'pays', 'action'];\n\n  columnsName: {\n    [model: string]: string;\n    label: string;\n    adress: string;\n    postalCode: string;\n    city: string;\n    pays: string;\n    action: string;\n  } = {\n      label: 'Nom',\n      adress: 'Adresse',\n      postalCode: 'Code Postal',\n      city: 'Ville',\n      pays: 'Pays',\n      action: 'action',\n    };\n\n  dataSource: MatTableDataSource<SiteDataModel>;\n\n  coordinatesToMark: Subject<[[number, number]]> = new Subject<[[number, number]]>();\n\n  constructor(private siteService: SiteService, public dialog: MatDialog, private msgService: MessageService) {\n\n  }\n\n  public openSiteModal(mode: string, site: SiteDataModel | null, lastLabel: string | null): void {\n    const dialogRef = this.dialog.open(SiteModalComponent, {\n      data: { mode: mode, site: site, lastLabel: lastLabel }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result && result.saved && mode === 'new') {\n        this.siteService.createSite(result.site).subscribe(response => {\n          this.fetchData();\n        });\n      } else if (result && result.saved && mode === 'update') {\n        this.siteService.updateSite(result.site, lastLabel).subscribe(response => {\n          this.msgService.snackbar('Site modifié');\n          this.fetchData();\n        });\n      }\n    });\n  }\n\n  public openSiteModalFromMap(mode: string, searchResult: any): void {\n\n    const site = new SiteDataModel();\n\n    // Gestion différente si le site est un monument ou une adresse standard\n    if (searchResult.hasOwnProperty('address') && !searchResult.properties.hasOwnProperty('address')) {\n      site.adress = searchResult.address + ' ' + searchResult.text;\n    } else if (!searchResult.hasOwnProperty('address') && searchResult.properties.hasOwnProperty('address')) {\n      site.adress = searchResult.properties.address;\n    } else if (!searchResult.hasOwnProperty('address') && !searchResult.properties.hasOwnProperty('address')) {\n      site.adress = searchResult.text;\n    }\n    if (searchResult.context.length === 5) {\n      site.postalCode = searchResult.context[1].text;\n      site.city = searchResult.context[2].text;\n      site.pays = searchResult.context[4].text;\n    } else if (searchResult.context.length === 4) {\n      site.postalCode = searchResult.context[0].text;\n      site.city = searchResult.context[2].text;\n      site.pays = searchResult.context[3].text;\n    }\n    site.longitude = searchResult.center[0];\n    site.latitude = searchResult.center[1];\n\n    const dialogRef = this.dialog.open(SiteModalComponent, {\n      data: { mode, site }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result && result.saved && mode === 'new') {\n        this.siteService.createSite(result.site).subscribe(response => {\n          this.fetchData();\n          if (response.message === 'site created') {\n            this.msgService.snackbar('Site créé');\n          }\n        });\n      }\n    });\n  }\n\n  public ngOnInit(): void {\n    this.fetchData();\n  }\n\n  public fetchData(): void {\n    this.siteService.getSitesAvailable().subscribe((sites: SiteDataModel[]) => {\n      this.sites = sites;\n      this.dataSource = new MatTableDataSource(this.sites);\n      this.dataSource.sort = this.sort;\n      const coordinates: [[number, number]] = [[0, 0]];\n      coordinates.splice(0);\n      sites.forEach(site => {\n        coordinates.push([site.longitude, site.latitude]);\n      });\n      this.coordinatesToMark.next(coordinates);\n    });\n  }\n\n  public deleteSite(site: SiteDataModel): void {\n    this.msgService.confirm('Êtes-vous sûr(e) de vouloir supprimer ce site ?').subscribe(response => {\n      if (response) {\n        this.siteService.deleteSite(site, site.id).subscribe(() => {\n          this.fetchData();\n        });\n      }\n    });\n  }\n\n  public applyFilter(event: Event): void {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","<div id='site-container' class='site-container'>\n  <div id='wrapper' class='wrapper'>\n    <div id='container' class='container'>\n      <mat-card class='wrapper-card'>\n        <div style='width: 50%;'>\n          <mat-card-header class='wrapper-card-header'>\n            <div id='filters' class='filters'>\n              <mat-form-field class='site-wrapper'>\n                <mat-label>Rechercher</mat-label>\n                <input matInput id='search' (keyup)='applyFilter($event)' #input>\n              </mat-form-field>\n            </div>\n          </mat-card-header>\n          <mat-card-content class='wrapper-card-content'>\n            <table mat-table [dataSource]='dataSource' multiTemplateDataRows class='mat-elevation-z8' matSort>\n              <ng-container matColumnDef='{{column}}' *ngFor='let column of columnsToDisplay'>\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{columnsName[column]}} </th>\n                <ng-container *ngIf=\"column !== 'action'\">\n                  <td mat-cell *matCellDef='let site'> {{site[column]}} </td>\n                </ng-container>\n                <ng-container *ngIf=\"column === 'action'\">\n                  <td mat-cell *matCellDef='let site'>\n                    <div class='btn-action-vehicle'>\n                      <button class='action-btn' mat-raised-button color='primary'\n                              (click)=\"openSiteModal('update', site, site.label)\">\n                        Modifier\n                      </button>\n                      <button class='action-btn' mat-raised-button color='warn' (click)='deleteSite(site)'>\n                        Supprimer\n                      </button>\n                    </div>\n                  </td>\n                </ng-container>\n              </ng-container>\n              <tr mat-header-row *matHeaderRowDef='columnsToDisplay; sticky: true'></tr>\n              <tr mat-row *matRowDef='let row; columns: columnsToDisplay;'></tr>\n            </table>\n          </mat-card-content>\n        </div>\n        <div class='mapbox' id='mapbox'>\n          <app-map [coordinatesToMark]='coordinatesToMark | async' (openModalCreation)='openSiteModalFromMap(\"new\", $event)'></app-map>\n        </div>\n      </mat-card>\n    </div>\n  </div>\n\n\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { LoanDataModel } from '../loan.data.model';\nimport { Vehicle } from 'src/app/vehicles-list/vehicle.model';\nimport { StatusModel } from '../../common/models/StatusModel';\n\n@Component({\n  selector: 'dialog-modal',\n  templateUrl: './close-loan-modal.component.html',\n  styleUrls: ['./close-loan-modal.component.less'],\n})\nexport class CloseLoanModalComponent implements OnInit {\n\n  public closeloanForm: FormGroup;\n\n  constructor(private fb: FormBuilder,\n              private dialogRef: MatDialogRef<CloseLoanModalComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: {\n                mode: string;\n                loan: LoanDataModel;\n              },\n  ) {\n    this.closeloanForm = this.fb.group({\n      commentloan: new FormControl({ value: '', disabled: this.isReadMode() }, [Validators.required]),\n      essenceloan: new FormControl({ value: '', disabled: this.isReadMode() }, [Validators.required]),\n      kilometreloan: new FormControl({ value: '', disabled: this.isReadMode() }, [Validators.required]),\n    });\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  /**\n   * Est-on en mode création\n   */\n  public isNewMode(): boolean {\n    return this.data.mode === 'new';\n  }\n\n  /**\n   * Est-on en mode lecture\n   */\n  public isReadMode(): boolean {\n    return this.data.mode === 'read';\n  }\n\n  /**\n   * Est-on en mode modification\n   */\n  public isUpdateMode(): boolean {\n    return this.data.mode === 'update';\n  }\n\n  public close(saved: boolean = false): void {\n    const loan: LoanDataModel = new LoanDataModel();\n    const vehicle: Vehicle = new Vehicle();\n    if (saved) {\n      if (this.data && this.data.loan) {\n        loan.id = this.data.loan.id;\n        loan.lentVehicule = new Vehicle();\n        loan.lentVehicule.id = this.data.loan.lentVehicule.id;\n        loan.kilometrage = this.closeloanForm.controls['kilometreloan'].value;\n        loan.essence = this.closeloanForm.controls['essenceloan'].value;\n        loan.commentLoan = this.closeloanForm.controls['commentloan'].value;\n      }\n    }\n    this.dialogRef.close({ saved: saved, loan: loan });\n  }\n\n\n  /**\n   * Détermine l'état du bouton de sauvegarde\n   */\n  public isSaveDisabled(): boolean {\n    return this.closeloanForm.touched && this.closeloanForm.valid;\n  }\n}\n","<div id='loan-modal'>\n    <div class='modal-header'>\n        <div>\n            <h1>Clôture de la réservation</h1>\n        </div>\n        <button mat-icon-button class='close-button' (click)='close()'>\n            <mat-icon style='color: rgba(0, 0, 0, 0.54)'>close</mat-icon>\n        </button>\n    </div>\n    <mat-divider></mat-divider>\n    <div class='form-container'>\n        <form [formGroup]='closeloanForm' class='form'>\n            <div>\n                <div>\n                    <mat-form-field style='width: 45%'>\n                        <mat-label>Kilometrage véhicule</mat-label>\n                        <input matInput aria-label='Kilometrage véhicule' formControlName='kilometreloan' placeholder=\"130 000\">\n                        <mat-icon matSuffix>speed</mat-icon>\n                    </mat-form-field>\n\n                    <mat-form-field style='width: 45%; margin-left:10%'>\n                        <mat-label>Essence</mat-label>\n                        <input matInput aria-label='Essence' formControlName='essenceloan' placeholder=\"50\">\n                        <mat-icon matSuffix>local_gas_station</mat-icon>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <mat-form-field style='width: 100%'>\n                        <mat-label>Commentaire</mat-label>\n                        <textarea matInput aria-label='Commentaire' formControlName='commentloan' placeholder=\"Voyant moteur\"></textarea>\n                        <mat-icon matSuffix>feedback</mat-icon>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class='actions'>\n                <button mat-stroked-button (click)='close()'>Annuler</button>\n                <button mat-raised-button color='primary' [disabled]='!isSaveDisabled()'\n                        (click)='close(true)'>Valider\n                </button>\n            </div>\n        </form>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HeaderModule } from '../header/header.module';\nimport { SidebarModule } from '../sidebar/sidebar.module';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { SinisterModal } from './sinister-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\n@NgModule({\n  declarations: [\n    SinisterModal\n  ],\n  imports: [\n    BrowserModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HeaderModule,\n    SidebarModule,\n    MatSidenavModule,\n    MatChipsModule,\n    MatIconModule,\n    MatSlideToggleModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatTableModule,\n    MatDividerModule,\n    MatAutocompleteModule\n  ],\n  exports: [SinisterModal],\n  providers: [],\n  bootstrap: [SinisterModal]\n})\nexport class SinisterModule { }","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { AuthenticationService } from \"./authentication.service\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthenticationService, private router: Router) {\n\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n    // BOOLEAN USER CAN USE ROUTE\n    const isAuth = this.authService.getIsAuth();\n    if (!isAuth) {\n      this.router.navigate(['/login']);\n    }\n    return isAuth;\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.less']\n})\nexport class SnackbarComponent implements OnInit {\n\n  /**\n   * Différents types d'alerte\n   */\n  private static readonly WARNING_TYPE = 'warning';\n  private static readonly INFO_TYPE = 'info';\n  private static readonly SUCCESS_TYPE = 'success';\n  private static readonly ERROR_TYPE = 'error';\n\n  constructor(private _snackRef: MatSnackBarRef<SnackbarComponent>,\n    @Inject(MAT_SNACK_BAR_DATA) public data: {\n    message: string,\n    type: string\n  }) { }\n\n  ngOnInit(): void {\n    if (!this.data.message) {\n      this.data.message = 'Succès';\n    }\n    if (!this.data.type) {\n      this.data.type = 'success';\n    }\n  }\n\n  /**\n   * Est de type warning\n   */\n  public isTypeWarning(): boolean {\n    return this.data.type === SnackbarComponent.WARNING_TYPE;\n  }\n\n  /**\n   * Est de type info\n   */\n  public isTypeInfo(): boolean {\n    return this.data.type === SnackbarComponent.INFO_TYPE;\n  }\n\n  /**\n   * Est de type success\n   */\n  public isTypeSuccess(): boolean {\n    return this.data.type === SnackbarComponent.SUCCESS_TYPE;\n  }\n\n  /**\n   * Est de type error\n   */\n  public isTypeError(): boolean {\n    return this.data.type === SnackbarComponent.ERROR_TYPE;\n  }\n\n  /**\n   * Fermeture de la snackbar\n   */\n  public close(): void {\n    this._snackRef.dismiss();\n  }\n\n}\n","<div class=\"snackbar-container\" (click)=\"close()\">\n    <mat-icon *ngIf=\"isTypeWarning()\" class=\"icon-warning\">warning_amber</mat-icon>\n    <mat-icon *ngIf=\"isTypeError()\" class=\"icon-error\">error_outline</mat-icon>\n    <mat-icon *ngIf=\"isTypeInfo()\" class=\"icon-info\">info_outline</mat-icon>\n    <mat-icon *ngIf=\"isTypeSuccess()\" class=\"icon-success\">done</mat-icon>\n    <span class=\"message\">\n        {{ data.message }}\n    </span>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { MailingPanelComponent } from './mailingPanel.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\n@NgModule({\n  declarations: [MailingPanelComponent],\n  imports: [BrowserModule, MatTableModule, MatSlideToggleModule],\n  exports: [MailingPanelComponent],\n  providers: [],\n  bootstrap: [MailingPanelComponent],\n})\nexport class MailingPanelModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { Device } from '../common/device';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.less'],\n})\nexport class LayoutComponent implements OnInit {\n  private static USERS_COMPONENT = 'users';\n  private static PARC_COMPONENT = 'parc';\n  private static LOAN_COMPONENT = 'loan';\n  private static SITE_COMPONENT = 'site';\n  private static ADMIN_COMPONENT = 'admin';\n\n  public adminMenu = false;\n  /**\n   * Composant à charger, nom récupéré à partir de la route\n   */\n  public componentToLoad: string = this.router.url.split('/')[1];\n\n  constructor(\n    private router: Router,\n    private authService: AuthenticationService,\n  ) {\n    this.adminMenu = this.authService.getIsAdmin();\n  }\n\n  ngOnInit(): void {}\n\n  /**\n   * Retourne le nom de la page en fonction de l'url\n   */\n  public getPageName(): string {\n    let pageName = 'Tableau de bord';\n    switch (this.componentToLoad) {\n      case LayoutComponent.USERS_COMPONENT:\n        pageName = 'Utilisateurs';\n        break;\n      case LayoutComponent.PARC_COMPONENT:\n        pageName = 'Parc';\n        break;\n      case LayoutComponent.LOAN_COMPONENT:\n        pageName = 'Prêts';\n        break;\n      case LayoutComponent.SITE_COMPONENT:\n        pageName = 'Sites';\n        break;\n      case LayoutComponent.ADMIN_COMPONENT:\n        pageName = \"Panneau d'administration\";\n        break;\n    }\n    return pageName;\n  }\n\n  \n  IsMobile(){\n    Device.definedUseDevice('layout-container');\n    return Device.isMobileDevice();\n  }\n}\n","<div *ngIf=\"IsMobile()\">\n</div>\n<div id=\"layout-container\">\n  <div id=\"wrapper\" class=\"wrapper\">\n    <app-header [pageName]=\"getPageName()\" class=\"header\"></app-header>\n    <mat-drawer-container class=\"drawer-container\" autosize>\n      <mat-drawer #drawer class=\"drawer\" mode=\"side\">\n        <app-sidebar></app-sidebar>\n      </mat-drawer>\n      <mat-drawer-content>\n        <mat-chip-list>\n          <mat-chip color=\"primary\" selected (click)=\"drawer.toggle()\" class=\"d-flex\">\n            Menu\n            <mat-icon *ngIf=\"!drawer.opened\" aria-hidden=\"false\" style=\"color: white\"\n            >keyboard_arrow_right</mat-icon\n            >\n            <mat-icon *ngIf=\"drawer.opened\" aria-hidden=\"false\" style=\"color: white\"\n            >keyboard_arrow_left</mat-icon\n            >\n          </mat-chip>\n        </mat-chip-list>\n        <div id=\"container\" class=\"container\">\n          <ng-template [ngIf]=\"componentToLoad === 'dashboard'\">\n            <app-dashboard style=\"width: 100%\"></app-dashboard>\n          </ng-template>\n          <ng-template [ngIf]=\"componentToLoad === 'users' && adminMenu\">\n            <usersList class=\"list\"></usersList>\n          </ng-template>\n          <ng-template [ngIf]=\"componentToLoad === 'parc' && adminMenu\">\n            <app-vehicles-list class=\"list\"></app-vehicles-list>\n          </ng-template>\n          <ng-template [ngIf]=\"componentToLoad === 'loan'\">\n            <app-loan class=\"list\"></app-loan>\n          </ng-template>\n          <ng-template [ngIf]=\"componentToLoad === 'loan/statusId' \">\n            <app-loan class=\"list\"></app-loan>\n          </ng-template>\n          <ng-template [ngIf]=\"componentToLoad === 'site' && adminMenu\">\n            <app-sites class=\"list\" ></app-sites>\n          </ng-template>\n          <ng-template [ngIf]=\"componentToLoad === 'admin' && adminMenu\">\n            <admin-panel class=\"list\" ></admin-panel>\n          </ng-template>\n        </div>\n      </mat-drawer-content>\n    </mat-drawer-container>\n  </div>\n</div>\n","export enum FamilyStatusEnum {\n  siteFamily = 1,\n  bookingsFamily = 2,\n  sinisterFamily = 3\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminPanelComponent } from './admin-panel/adminPanel.component';\nimport { AuthenticationComponent } from './authentication/authentication.component';\nimport { LayoutComponent } from './layout/layout.component';\nimport { AuthGuard } from './authentication/auth.guard';\nimport { ResetPasswordMailComponent } from './reset-password-mail/reset-password-mail.component';\nimport { ResetPasswordFormComponent } from './reset-password-form/reset-password-form.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: AuthenticationComponent },\n  { path: 'users', component: LayoutComponent, canActivate: [AuthGuard] },\n  { path: 'dashboard', component: LayoutComponent, canActivate: [AuthGuard] },\n  { path: 'parc', component: LayoutComponent, canActivate: [AuthGuard] },\n  { path: 'loan', component: LayoutComponent, canActivate: [AuthGuard] },\n  { path: 'loan/:statusId', component: LayoutComponent, canActivate: [AuthGuard] },\n  { path: 'site', component: LayoutComponent, canActivate: [AuthGuard] },\n  { path: 'admin', component: LayoutComponent, canActivate: [AuthGuard] },\n  { path: 'resetPassword', component: ResetPasswordMailComponent },\n  { path: 'reset/:id/:token', component: ResetPasswordFormComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard],\n})\nexport class AppRoutingModule {}\n","import { Component, Inject, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { User } from '../../users-list/user.model';\nimport { Subscription } from 'rxjs';\nimport { UserService } from '../../users-list/usersList.service';\nimport { MatOptionSelectionChange } from '@angular/material/core';\nimport { SiteDataModel } from '../../sites-list/site.model';\nimport { StatusModel } from '../../common/models/StatusModel';\nimport { LoanDataModel } from 'src/app/loan/loan.data.model';\nimport { LoanService } from 'src/app/loan/loan.service';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-loan-modal',\n  templateUrl: './loan-in-progress.component.html',\n  styleUrls: ['./loan-in-progress.component.less']\n})\nexport class LoanInProgressComponent implements OnInit {\n\n  /**\n   * FormGroup des prêts\n   */\n  public loanForm: FormGroup;\n\n  /**\n   * Liste des utilisateurs pouvant être conducteurs\n   */\n  public drivers: User[] = [];\n\n  /**\n   * Liste des sites\n   */\n  public sites: SiteDataModel[] = [];\n\n  public selectedDriver: User = new User();\n\n  public selectedSite: SiteDataModel = new SiteDataModel();\n  /**\n   * Utilisateur connecté\n   */\n  @Input() connectedUser: User;\n\n  public notificationCountStatutEnAttenteDeValidation: number =0;\n\n  public notificationCountStatutValide: number =0;\n\n  public notificationCountBookingUser: number =0;\n\n  public rowsBookingsUser: any[];\n\n  public rowsBookingsValider: any[];\n\n  public userProfile: string;\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  ELEMENT_DATA: LoanDataModel[];\n\n  columnsToDisplay: string[] = ['startDate'];\n\n  columsName: {\n    startDate: string; } = {\n    startDate: 'Date du prêt'};\n\n  expandedElement: LoanDataModel | null;\n\n  status = ['Tous', 'En attente de validation', 'Validé', 'En cours', 'En retard', 'Clôturé'];\n\n  dataSource: MatTableDataSource<any>;\n\n  constructor(private fb: FormBuilder,\n              private dialogRef: MatDialogRef<LoanInProgressComponent>,\n              private userService: UserService,\n              private loanService: LoanService,\n              private router: Router,\n              @Inject(MAT_DIALOG_DATA) public data: {\n              isReadOnly: boolean;\n              mode: string;\n              loan: LoanDataModel;\n  }) {\n      this.loanForm = this.fb.group({\n      startDate: new FormControl({value: '', disabled: this.isReadMode()}, Validators.required),\n      driver: new FormControl({value: '', disabled: this.isReadMode()}, Validators.required),\n      departureSite: new FormControl({value: '', disabled: this.isReadMode()}, Validators.required),\n      start: new FormControl({value: '', disabled: this.isReadMode()}, [Validators.required]),\n      end: new FormControl({value: '', disabled: this.isReadMode()}, []),\n      acceptPassengers: new FormControl({value: '', disabled: this.isReadMode()}, [])\n    });\n  }\n\n  ngOnInit(): void {\n    const localStorageUser: string = localStorage.getItem('connectedUser') || '';\n    this.connectedUser = JSON.parse(localStorageUser);\n    if (!this.connectedUser.profile) {\n      this.userProfile = 'Administrateur';\n    }\n\n    // Permet de donner le nombre de réservations avec le Status 'En attente de Validation'\n    /* notificationCountStatutEnAttenteDeValidation */\n     this.loanService.getLoansByStatus(1).subscribe(loan => {\n      this.notificationCountStatutEnAttenteDeValidation = loan.notificationCount.count;\n      this.rowsBookingsValider = loan.notificationCount.rows;\n    });\n\n    // Permet de donner le nombre de réservations avec le Status 'En attente de Validation'\n    /* notificationCountStatutEnAttenteDeValidation */\n     this.loanService.getLoansByStatus(4).subscribe(loan => {\n      this.notificationCountStatutValide = loan.notificationCount.count;\n      this.rowsBookingsValider = loan.notificationCount.rows;\n    });\n\n\n    // Permet de donner le nombre réservation avec le Status 'Validé' pour l'utilisateur connecté\n    /* notificationCountBookingUser */\n    this.loanService.getBookingsForUtilisateurStatusValide(this.connectedUser.id,4).subscribe(loan => {\n      this.notificationCountBookingUser = loan.notificationCountBookingUser.count;\n\n    // Permet de donner le contenu des réservations avec le Status 'Validé' pour l'utilisateur connecté\n    /* rowsBookingsUser */\n    this.rowsBookingsUser = loan.notificationCountBookingUser.rows;\n       this.ELEMENT_DATA = loan;\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n      this.dataSource.sort = this.sort;\n     });\n\n\n  }\n\n  /**\n   * Est-on en mode création\n   */\n  public isNewMode(): boolean {\n    return this.data.mode === 'new';\n  }\n\n  /**\n   * Est-on en mode lecture\n   */\n  public isReadMode(): boolean {\n    return this.data.mode === 'read';\n  }\n\n  /**\n   * Est-on en mode modification\n   */\n  public isUpdateMode(): boolean {\n    return this.data.mode === 'update';\n  }\n\n  /**\n   * Ferme la modale sans enregistrer si on ferme depuis Annuler ou la croix\n   * Sinon alimente l'objet loan et l'envoi au composant parent pour sauvegarde\n   * @param saved On sauvegarde ou non\n   */\n  public close(saved: boolean = false): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Détermine l'état du bouton de sauvegarde\n   */\n  public isSaveDisabled(): boolean {\n    return this.loanForm.touched && this.loanForm.valid;\n  }\n\n  /**\n   * On récupère l'id du choix car le matSelect ne contient pas l'objet mais que du texte\n   * @param status Evènement du matSelect pour qu'il ne se déclenche qu'une fois\n   * @param driver Conducteur choisi\n   */\n  public setDriver(status: MatOptionSelectionChange, driver: User): void {\n    if (status.isUserInput) {\n      this.selectedDriver = driver;\n    }\n  }\n\n  /**\n   * On récupère l'id du choix car le matSelect ne contient pas l'objet mais que du texte\n   * @param status Evènement du matSelect pour qu'il ne se déclenche qu'une fois\n   * @param site Site choisi\n   */\n  public setSite(status: MatOptionSelectionChange, site: SiteDataModel): void {\n    if (status.isUserInput) {\n      this.selectedSite = site;\n    }\n  }\n\n  /**\n   * Redirige vers la route passée en paramètre\n   * @param target Nom de la route\n   */\n  public redirectTo(target: string, statusId:string) {\n    this.router.navigate([`/${target}/${statusId}`]);\n    this.dialogRef.close();\n  }\n}\n","<div id='notif-modal' class='notif-modal'>\n  <div class='notif-header'>\n    <h1>Notifications</h1>\n  </div>\n  <div *ngIf=\"connectedUser.authorizationAccess===1; then thenBlock else elseBlock\"></div>\n  <ng-template #thenBlock>\n    <div class='notif-content'>\n      <div>\n        <button mat-button (click)=\"redirectTo('loan', '1')\">\n          <div>\n            <span>Réservation à valider :\n              {{notificationCountStatutEnAttenteDeValidation}}</span>\n          </div>\n        </button>\n      </div>\n      <div>\n        <button mat-button (click)=\"redirectTo('loan','4')\">\n          <div>\n            <span>Mes réservation : {{notificationCountBookingUser}}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </ng-template>\n  <ng-template #elseBlock>\n    <div class='notif-content'>\n      <button mat-button (click)=\"redirectTo('loan', '4')\">\n        <div>\n          <span>Mes réservation : {{notificationCountBookingUser}}</span>\n        </div>\n      </button>\n    </div>\n  </ng-template>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatButtonModule } from '@angular/material/button';\nimport { SidebarComponent } from './sidebar.component';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [\n    SidebarComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatIconModule\n  ],\n  exports: [SidebarComponent],\n  providers: [],\n  bootstrap: [SidebarComponent]\n})\nexport class SidebarModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { Vehicle } from '../vehicle.model';\nimport { SinisterService } from '../../sinister/sinister.service';\nimport { SinisterModel } from '../../sinister/sinister.model';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-archived-sinisters',\n  templateUrl: './archived-sinisters.component.html',\n  styleUrls: ['./archived-sinisters.component.less']\n})\nexport class ArchivedSinistersComponent implements OnInit {\n\n  public sinisters: SinisterModel[];\n\n  constructor(private sinisterService: SinisterService,\n  @Inject(MAT_DIALOG_DATA) public data: {\n    vehicle: Vehicle\n  }) { }\n\n  ngOnInit(): void {\n    this.getArchivedSinistersForVehicle(this.data.vehicle);\n  }\n\n  /**\n   * Récupère les sinistres archivés d'un véhicule\n   */\n  public getArchivedSinistersForVehicle(vehicle: Vehicle): void {\n    this.sinisterService.getSinisters(vehicle.id, 300).subscribe(sinisters => {\n      this.sinisters = sinisters;\n      console.log(this.sinisters);\n    });\n  }\n}\n","<div class=\"archived-sinisters\">\n  <h3 *ngIf=\"!sinisters || sinisters.length === 0\">Aucun sinistre archivé</h3>\n  <h3 *ngIf=\"sinisters && sinisters.length === 1\">{{sinisters.length}} sinistre archivé</h3>\n  <h3 *ngIf=\"sinisters && sinisters.length > 1\">{{sinisters.length}} sinistres archivés</h3>\n  <div class=\"sinisters-container\">\n    <div *ngFor=\"let sinister of sinisters\" class=\"sinister-block\">\n      <div class=\"sinister-wrap\">\n        <div class=\"sinister-label\">{{ sinister.libelle }}</div>\n        <div\n          class=\"sinister-dates\">\n          <div>Créé le {{sinister.createdAt | date: 'longDate'}}</div>\n          <div>Clôturé le {{sinister.updatedAt | date: 'longDate'}}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nimport { SiteDataModel } from './site.model';\nimport {Observable, Subject} from 'rxjs';\nimport { Deserialize } from 'cerialize';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SiteService {\n\n  private sites: SiteDataModel[] = [];\n  private sitesUpdated = new Subject<{sites: SiteDataModel[]}>();\n\n  constructor(private http: HttpClient) {}\n  public createSite(site: SiteDataModel): Observable<any> {\n    return this.http.post('http://localhost:3000/api/v1/sites/create', site);\n  }\n  getSitesAvailable(): Observable<any> {\n\n    return this.http.get('http://localhost:3000/api/v1/sites/').pipe(\n      map((response: any) => Deserialize(response.sites, SiteDataModel))\n    );;\n  }\n\n  getSiteUpdateListener(): Observable<any> {\n    return this.sitesUpdated.asObservable();\n  }\n\n  updateSite(site: SiteDataModel, lastlabel: any) {\n    return this.http.put<any>('http://localhost:3000/api/v1/sites/update/' + lastlabel, site);\n  }\n\n  deleteSite(site: SiteDataModel, id: any) {\n    return this.http.post<any>('http://localhost:3000/api/v1/sites/delete/' + id, site);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatNativeDateModule, MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { LoanInProgressComponent} from './loan-in-progress.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { Common } from '../../common/common';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { CommonModule } from '@angular/common';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@NgModule({\n  declarations: [\n    LoanInProgressComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatIconModule,\n    MatInputModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatOptionModule,\n    MatCheckboxModule,\n    MatBadgeModule,\n    CommonModule,\n    MatTableModule,\n    MatSortModule,\n    MatFormFieldModule,\n\n  ],\n  exports: [\n    LoanInProgressComponent],\n  providers: [\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: Common.MY_FORMATS},\n  ],\n  bootstrap: [LoanInProgressComponent]\n})\nexport class LoanInProgressModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MapComponent } from './map.component';\n\n@NgModule({\n  declarations: [\n    MapComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  exports: [\n    MapComponent\n  ],\n  providers: [],\n  bootstrap: [MapComponent]\n})\nexport class MapModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}